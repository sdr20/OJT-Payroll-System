{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport jsPDF from \"jspdf\";\nexport default {\n  data() {\n    return {\n      employees: [{\n        id: 1,\n        name: \"John Doe\",\n        salary: 50000,\n        deductions: {\n          sss: 1500,\n          pagibig: 500,\n          philhealth: 800,\n          tax: 2200\n        },\n        earnings: {\n          travel: 2000,\n          bonus: 5000\n        }\n      }, {\n        id: 2,\n        name: \"Jane Smith\",\n        salary: 60000,\n        deductions: {\n          sss: 1800,\n          pagibig: 600,\n          philhealth: 900,\n          tax: 2500\n        },\n        earnings: {\n          travel: 3000,\n          bonus: 6000\n        }\n      }],\n      selectedEmployee: null\n    };\n  },\n  computed: {\n    totalDeductions() {\n      if (!this.selectedEmployee) return 0;\n      return Object.values(this.selectedEmployee.deductions).reduce((a, b) => a + b, 0);\n    },\n    totalEarnings() {\n      if (!this.selectedEmployee) return 0;\n      return Object.values(this.selectedEmployee.earnings).reduce((a, b) => a + b, 0);\n    },\n    netSalary() {\n      if (!this.selectedEmployee) return 0;\n      return this.selectedEmployee.salary + this.totalEarnings - this.totalDeductions;\n    }\n  },\n  methods: {\n    showPayslip(employee) {\n      this.selectedEmployee = employee;\n    },\n    generatePayslip() {\n      alert(`Payslip for ${this.selectedEmployee.name} generated.`);\n    },\n    sendPayslip() {\n      alert(`Payslip for ${this.selectedEmployee.name} sent to email.`);\n    },\n    downloadPayslip() {\n      if (!this.selectedEmployee) return;\n      const doc = new jsPDF();\n      doc.text(`Payslip for ${this.selectedEmployee.name}`, 10, 10);\n      doc.text(`Salary: ${this.selectedEmployee.salary}`, 10, 20);\n      doc.text(\"Deductions:\", 10, 30);\n      doc.text(`SSS: ${this.selectedEmployee.deductions.sss}`, 10, 40);\n      doc.text(`Pag-IBIG: ${this.selectedEmployee.deductions.pagibig}`, 10, 50);\n      doc.text(`PhilHealth: ${this.selectedEmployee.deductions.philhealth}`, 10, 60);\n      doc.text(`Tax: ${this.selectedEmployee.deductions.tax}`, 10, 70);\n      doc.text(`Total Deductions: ${this.totalDeductions}`, 10, 80);\n      doc.text(\"Earnings:\", 10, 90);\n      doc.text(`Travel Expenses: ${this.selectedEmployee.earnings.travel}`, 10, 100);\n      doc.text(`Bonuses: ${this.selectedEmployee.earnings.bonus}`, 10, 110);\n      doc.text(`Total Earnings: ${this.totalEarnings}`, 10, 120);\n      doc.text(`Net Salary Payable: ${this.netSalary}`, 10, 130);\n      doc.save(`Payslip_${this.selectedEmployee.name}.pdf`);\n    }\n  }\n};","map":{"version":3,"names":["jsPDF","data","employees","id","name","salary","deductions","sss","pagibig","philhealth","tax","earnings","travel","bonus","selectedEmployee","computed","totalDeductions","Object","values","reduce","a","b","totalEarnings","netSalary","methods","showPayslip","employee","generatePayslip","alert","sendPayslip","downloadPayslip","doc","text","save"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\ManageEmployees.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Payroll System</h1>\r\n      <ul>\r\n        <li v-for=\"employee in employees\" :key=\"employee.id\">\r\n          {{ employee.name }}\r\n          <button @click=\"showPayslip(employee)\">View Payslip</button>\r\n        </li>\r\n      </ul>\r\n      \r\n      <div v-if=\"selectedEmployee\">\r\n        <h2>Payslip for {{ selectedEmployee.name }}</h2>\r\n        <p>Salary: {{ selectedEmployee.salary }}</p>\r\n        <h3>Deductions</h3>\r\n        <ul>\r\n          <li>SSS: {{ selectedEmployee.deductions.sss }}</li>\r\n          <li>Pag-IBIG: {{ selectedEmployee.deductions.pagibig }}</li>\r\n          <li>PhilHealth: {{ selectedEmployee.deductions.philhealth }}</li>\r\n          <li>Tax: {{ selectedEmployee.deductions.tax }}</li>\r\n          <li><strong>Total Deductions:</strong> {{ totalDeductions }}</li>\r\n        </ul>\r\n        <h3>Earnings</h3>\r\n        <ul>\r\n          <li>Travel Expenses: {{ selectedEmployee.earnings.travel }}</li>\r\n          <li>Bonuses: {{ selectedEmployee.earnings.bonus }}</li>\r\n          <li><strong>Total Earnings:</strong> {{ totalEarnings }}</li>\r\n        </ul>\r\n        <p><strong>Net Salary Payable:</strong> {{ netSalary }}</p>\r\n        \r\n        <button @click=\"generatePayslip\">Generate Payslip</button>\r\n        <button @click=\"sendPayslip\">Send Payslip via Email</button>\r\n        <button @click=\"downloadPayslip\">Download Payslip as PDF</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import jsPDF from \"jspdf\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        employees: [\r\n          {\r\n            id: 1, \r\n            name: \"John Doe\", \r\n            salary: 50000, \r\n            deductions: { sss: 1500, pagibig: 500, philhealth: 800, tax: 2200 },\r\n            earnings: { travel: 2000, bonus: 5000 }\r\n          },\r\n          {\r\n            id: 2, \r\n            name: \"Jane Smith\", \r\n            salary: 60000, \r\n            deductions: { sss: 1800, pagibig: 600, philhealth: 900, tax: 2500 },\r\n            earnings: { travel: 3000, bonus: 6000 }\r\n          }\r\n        ],\r\n        selectedEmployee: null\r\n      };\r\n    },\r\n    computed: {\r\n      totalDeductions() {\r\n        if (!this.selectedEmployee) return 0;\r\n        return Object.values(this.selectedEmployee.deductions).reduce((a, b) => a + b, 0);\r\n      },\r\n      totalEarnings() {\r\n        if (!this.selectedEmployee) return 0;\r\n        return Object.values(this.selectedEmployee.earnings).reduce((a, b) => a + b, 0);\r\n      },\r\n      netSalary() {\r\n        if (!this.selectedEmployee) return 0;\r\n        return this.selectedEmployee.salary + this.totalEarnings - this.totalDeductions;\r\n      }\r\n    },\r\n    methods: {\r\n      showPayslip(employee) {\r\n        this.selectedEmployee = employee;\r\n      },\r\n      generatePayslip() {\r\n        alert(`Payslip for ${this.selectedEmployee.name} generated.`);\r\n      },\r\n      sendPayslip() {\r\n        alert(`Payslip for ${this.selectedEmployee.name} sent to email.`);\r\n      },\r\n      downloadPayslip() {\r\n        if (!this.selectedEmployee) return;\r\n        const doc = new jsPDF();\r\n        doc.text(`Payslip for ${this.selectedEmployee.name}`, 10, 10);\r\n        doc.text(`Salary: ${this.selectedEmployee.salary}`, 10, 20);\r\n        doc.text(\"Deductions:\", 10, 30);\r\n        doc.text(`SSS: ${this.selectedEmployee.deductions.sss}`, 10, 40);\r\n        doc.text(`Pag-IBIG: ${this.selectedEmployee.deductions.pagibig}`, 10, 50);\r\n        doc.text(`PhilHealth: ${this.selectedEmployee.deductions.philhealth}`, 10, 60);\r\n        doc.text(`Tax: ${this.selectedEmployee.deductions.tax}`, 10, 70);\r\n        doc.text(`Total Deductions: ${this.totalDeductions}`, 10, 80);\r\n        doc.text(\"Earnings:\", 10, 90);\r\n        doc.text(`Travel Expenses: ${this.selectedEmployee.earnings.travel}`, 10, 100);\r\n        doc.text(`Bonuses: ${this.selectedEmployee.earnings.bonus}`, 10, 110);\r\n        doc.text(`Total Earnings: ${this.totalEarnings}`, 10, 120);\r\n        doc.text(`Net Salary Payable: ${this.netSalary}`, 10, 130);\r\n        \r\n        doc.save(`Payslip_${this.selectedEmployee.name}.pdf`);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  button {\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}