{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      showAddModal: false,\n      showEditModal: false,\n      searchEmployeeId: '',\n      searchResult: null,\n      employees: [{\n        id: 'EMP001',\n        firstName: 'John',\n        lastName: 'Doe',\n        birthday: '1990-05-15',\n        hireDate: '2020-01-01',\n        position: 'Software Engineer',\n        civilStatus: 'Single',\n        contactInfo: '123-456-7890',\n        email: 'john.doe@example.com',\n        sss: '123-45-6789',\n        philhealth: '987-65-4321',\n        hdmf: '111-22-3333',\n        salary: 60000\n      }],\n      newEmployee: {\n        firstName: '',\n        lastName: '',\n        birthday: '',\n        hireDate: '',\n        position: '',\n        civilStatus: '',\n        contactInfo: '',\n        email: '',\n        sss: '',\n        philhealth: '',\n        hdmf: '',\n        salary: ''\n      },\n      selectedEmployee: null\n    };\n  },\n  methods: {\n    viewEmployee(employee) {\n      this.selectedEmployee = employee;\n    },\n    editEmployee(employee) {\n      this.selectedEmployee = {\n        ...employee\n      };\n      this.showEditModal = true;\n    },\n    updateEmployee() {\n      const index = this.employees.findIndex(employee => employee.id === this.selectedEmployee.id);\n      if (index !== -1) {\n        this.employees.splice(index, 1, this.selectedEmployee);\n        this.showEditModal = false;\n      }\n    },\n    addEmployee() {\n      if (this.newEmployee.firstName && this.newEmployee.lastName && this.newEmployee.position && this.newEmployee.salary && this.newEmployee.email) {\n        this.employees.push({\n          ...this.newEmployee\n        });\n        this.newEmployee = {\n          firstName: '',\n          lastName: '',\n          birthday: '',\n          hireDate: '',\n          position: '',\n          civilStatus: '',\n          contactInfo: '',\n          email: '',\n          sss: '',\n          philhealth: '',\n          hdmf: '',\n          salary: ''\n        };\n        this.showAddModal = false;\n      }\n    },\n    removeEmployee(id) {\n      this.employees = this.employees.filter(employee => employee.id !== id);\n    }\n  }\n};","map":{"version":3,"names":["data","showAddModal","showEditModal","searchEmployeeId","searchResult","employees","id","firstName","lastName","birthday","hireDate","position","civilStatus","contactInfo","email","sss","philhealth","hdmf","salary","newEmployee","selectedEmployee","methods","viewEmployee","employee","editEmployee","updateEmployee","index","findIndex","splice","addEmployee","push","removeEmployee","filter"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\ManageEmployees.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen bg-gray-50 p-1\">\r\n      <!-- Add Employee Button -->\r\n      <button @click=\"showAddModal = true\" \r\n              class=\"bg-indigo-600 text-white font-medium py-2.5 px-6 rounded-lg hover:bg-indigo-700 \r\n                     transition duration-200 ease-in-out shadow-sm mb-6 flex items-center gap-2\">\r\n        <span class=\"material-icons-outlined\"></span>\r\n        Add Employee\r\n      </button>\r\n  \r\n      <!-- Employee List -->\r\n      <div class=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n        <div class=\"p-6\">\r\n          <h2 class=\"text-s font-bold text-gray-800 mb-1\">Employee List</h2>\r\n        </div>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Employee ID</th>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Name</th>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Position</th>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Salary</th>\r\n                <th class=\"px-6 py-4 text-right text-sm font-medium text-gray-500\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"divide-y divide-gray-100\">\r\n              <tr v-for=\"employee in employees\" :key=\"employee.id\" \r\n                  class=\"hover:bg-gray-50 transition duration-200\">\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.id }}</td>\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">\r\n                  {{ employee.firstName }} {{ employee.lastName }}\r\n                </td>\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.position }}</td>\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">${{ employee.salary }}</td>\r\n                <td class=\"px-6 py-4 text-right\">\r\n                  <button @click=\"viewEmployee(employee)\"\r\n                          class=\"text-blue-600 hover:text-blue-800 font-medium text-sm transition duration-200\">\r\n                    View Info\r\n                  </button>\r\n                  <button @click=\"editEmployee(employee)\"\r\n                          class=\"text-yellow-600 hover:text-yellow-800 font-medium text-sm ml-4 transition duration-200\">\r\n                    Edit Info\r\n                  </button>\r\n                  <button @click=\"removeEmployee(employee.id)\" \r\n                          class=\"text-red-600 hover:text-red-800 font-medium text-sm ml-4 transition duration-200\">\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Employee Info Modal -->\r\n      <div v-if=\"selectedEmployee\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n        <div class=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n          <h2 class=\"text-lg font-semibold text-gray-700 mb-4\">Employee Information</h2>\r\n          <p><strong>ID:</strong> {{ selectedEmployee.id }}</p>\r\n          <p><strong>Name:</strong> {{ selectedEmployee.firstName }} {{ selectedEmployee.lastName }}</p>\r\n          <p><strong>Birthday:</strong> {{ selectedEmployee.birthday }}</p>\r\n          <p><strong>Hire Date:</strong> {{ selectedEmployee.hireDate }}</p>\r\n          <p><strong>Position:</strong> {{ selectedEmployee.position }}</p>\r\n          <p><strong>Civil Status:</strong> {{ selectedEmployee.civilStatus }}</p>\r\n          <p><strong>Contact Info:</strong> {{ selectedEmployee.contactInfo }}</p>\r\n          <p><strong>Email:</strong> {{ selectedEmployee.email }}</p>\r\n          <p><strong>SSS:</strong> {{ selectedEmployee.sss }}</p>\r\n          <p><strong>PhilHealth:</strong> {{ selectedEmployee.philhealth }}</p>\r\n          <p><strong>HDMF:</strong> {{ selectedEmployee.hdmf }}</p>\r\n          <div class=\"mt-4 flex justify-end\">\r\n            <button @click=\"selectedEmployee = null\"\r\n                    class=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 transition text-xs\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Edit Employee Modal -->\r\n      <div v-if=\"showEditModal\" \r\n           class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n        <div class=\"bg-white rounded-xl shadow-xl w-full max-w-2xl m-4 transform transition-all\">\r\n          <div class=\"p-6 border-b\">\r\n            <h2 class=\"text-2xl font-bold text-gray-800\">Edit Employee</h2>\r\n          </div>\r\n          <form @submit.prevent=\"updateEmployee\" class=\"p-6\">\r\n            <div class=\"grid grid-cols-2 gap-6\">\r\n              <div v-for=\"(value, key) in selectedEmployee\" :key=\"key\" class=\"space-y-2\">\r\n                <label :for=\"key\" class=\"block text-sm font-medium text-gray-700\">\r\n                  {{ key.charAt(0).toUpperCase() + key.slice(1) }}\r\n                </label>\r\n                <input v-model=\"selectedEmployee[key]\" \r\n                       :type=\"key === 'email' ? 'email' : key === 'salary' ? 'number' : 'text'\"\r\n                       :id=\"key\"\r\n                       class=\"w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-indigo-500 \r\n                              focus:border-indigo-500 outline-none transition duration-200\"\r\n                       required>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex justify-end gap-3 mt-6\">\r\n              <button type=\"button\" \r\n                      @click=\"showEditModal = false\"\r\n                      class=\"px-6 py-2.5 border border-gray-300 rounded-lg text-gray-700 font-medium \r\n                             hover:bg-gray-50 transition duration-200\">\r\n                Cancel\r\n              </button>\r\n              <button type=\"submit\"\r\n                      class=\"px-6 py-2.5 bg-indigo-600 text-white font-medium rounded-lg \r\n                             hover:bg-indigo-700 transition duration-200\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add Employee Modal -->\r\n      <div v-if=\"showAddModal\" \r\n           class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n        <div class=\"bg-white rounded-xl shadow-xl w-full max-w-2xl m-4 transform transition-all\">\r\n          <div class=\"p-6 border-b\">\r\n            <h2 class=\"text-2xl font-bold text-gray-800\">Add Employee</h2>\r\n          </div>\r\n          <form @submit.prevent=\"addEmployee\" class=\"p-6\">\r\n            <div class=\"grid grid-cols-2 gap-6\">\r\n              <div v-for=\"(value, key) in newEmployee\" :key=\"key\" class=\"space-y-2\">\r\n                <label :for=\"key\" class=\"block text-sm font-medium text-gray-700\">\r\n                  {{ key.charAt(0).toUpperCase() + key.slice(1) }}\r\n                </label>\r\n                <input v-model=\"newEmployee[key]\" \r\n                       :type=\"key === 'email' ? 'email' : key === 'salary' ? 'number' : 'text'\"\r\n                       :id=\"key\"\r\n                       class=\"w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-indigo-500 \r\n                              focus:border-indigo-500 outline-none transition duration-200\"\r\n                       required>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex justify-end gap-3 mt-6\">\r\n              <button type=\"button\" \r\n                      @click=\"showAddModal = false\"\r\n                      class=\"px-6 py-2.5 border border-gray-300 rounded-lg text-gray-700 font-medium \r\n                             hover:bg-gray-50 transition duration-200\">\r\n                Cancel\r\n              </button>\r\n              <button type=\"submit\"\r\n                      class=\"px-6 py-2.5 bg-indigo-600 text-white font-medium rounded-lg \r\n                             hover:bg-indigo-700 transition duration-200\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        showAddModal: false,\r\n        showEditModal: false,\r\n        searchEmployeeId: '',\r\n        searchResult: null,\r\n        employees: [\r\n          {\r\n            id: 'EMP001',\r\n            firstName: 'John',\r\n            lastName: 'Doe',\r\n            birthday: '1990-05-15',\r\n            hireDate: '2020-01-01',\r\n            position: 'Software Engineer',\r\n            civilStatus: 'Single',\r\n            contactInfo: '123-456-7890',\r\n            email: 'john.doe@example.com',\r\n            sss: '123-45-6789',\r\n            philhealth: '987-65-4321',\r\n            hdmf: '111-22-3333',\r\n            salary: 60000\r\n          }\r\n        ],\r\n        newEmployee: {\r\n          firstName: '',\r\n          lastName: '',\r\n          birthday: '',\r\n          hireDate: '',\r\n          position: '',\r\n          civilStatus: '',\r\n          contactInfo: '',\r\n          email: '',\r\n          sss: '',\r\n          philhealth: '',\r\n          hdmf: '',\r\n          salary: ''\r\n        },\r\n        selectedEmployee: null\r\n      };\r\n    },\r\n    methods: {\r\n      viewEmployee(employee) {\r\n        this.selectedEmployee = employee;\r\n      },\r\n      editEmployee(employee) {\r\n        this.selectedEmployee = { ...employee };\r\n        this.showEditModal = true;\r\n      },\r\n      updateEmployee() {\r\n        const index = this.employees.findIndex(employee => employee.id === this.selectedEmployee.id);\r\n        if (index !== -1) {\r\n          this.employees.splice(index, 1, this.selectedEmployee);\r\n          this.showEditModal = false;\r\n        }\r\n      },\r\n      addEmployee() {\r\n        if (this.newEmployee.firstName && this.newEmployee.lastName && this.newEmployee.position && this.newEmployee.salary && this.newEmployee.email) {\r\n          this.employees.push({ ...this.newEmployee });\r\n          this.newEmployee = { firstName: '', lastName: '', birthday: '', hireDate: '', position: '', civilStatus: '', contactInfo: '', email: '', sss: '', philhealth: '', hdmf: '', salary: '' };\r\n          this.showAddModal = false;\r\n        }\r\n      },\r\n      removeEmployee(id) {\r\n        this.employees = this.employees.filter(employee => employee.id !== id);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}