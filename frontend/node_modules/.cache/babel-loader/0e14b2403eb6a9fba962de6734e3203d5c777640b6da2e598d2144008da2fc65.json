{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  name: \"PhilippineCalendar\",\n  data() {\n    return {\n      currentDate: new Date(),\n      selectedDay: null,\n      showModal: false,\n      daysOfWeek: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      tasksByDay: {},\n      // Store tasks by date string (YYYY-MM-DD)\n      holidays: [{\n        date: \"January 1\",\n        name: \"New Year's Day\",\n        type: \"Regular Holiday\",\n        description: \"A public holiday marking the start of a new year according to the Gregorian calendar.\"\n      }, {\n        date: \"January 2\",\n        name: \"Special Working Holiday\",\n        type: \"Special Working\",\n        description: \"Additional holiday to create a long weekend.\"\n      }, {\n        date: \"January 23\",\n        name: \"First Philippine Republic Day\",\n        type: \"Special Working\",\n        description: \"Commemorates the establishment of the First Philippine Republic in 1899.\"\n      }, {\n        date: \"February 25\",\n        name: \"EDSA People Power Revolution\",\n        type: \"Special Non-Working\",\n        description: \"Commemorates the People Power Revolution of 1986 that peacefully overthrew President Ferdinand Marcos.\"\n      }, {\n        date: \"April 6\",\n        name: \"Maundy Thursday\",\n        type: \"Regular Holiday\",\n        description: \"Christian holiday commemorating the Last Supper of Jesus Christ with the Apostles.\"\n      }, {\n        date: \"April 7\",\n        name: \"Good Friday\",\n        type: \"Regular Holiday\",\n        description: \"Christian holiday commemorating the crucifixion of Jesus Christ.\"\n      }, {\n        date: \"April 8\",\n        name: \"Black Saturday\",\n        type: \"Special Non-Working\",\n        description: \"Christian holiday preceding Easter Sunday.\"\n      }, {\n        date: \"April 9\",\n        name: \"Araw ng Kagitingan\",\n        type: \"Regular Holiday\",\n        description: \"Day of Valor, commemorating the fall of Bataan during World War II.\"\n      }, {\n        date: \"May 1\",\n        name: \"Labor Day\",\n        type: \"Regular Holiday\",\n        description: \"Honors the contributions of workers to society.\"\n      }, {\n        date: \"June 12\",\n        name: \"Independence Day\",\n        type: \"Regular Holiday\",\n        description: \"Commemorates the Philippine Declaration of Independence from Spain in 1898.\"\n      }, {\n        date: \"July 6\",\n        name: \"Eid'l Adha\",\n        type: \"Regular Holiday\",\n        description: \"Islamic holiday, the Feast of Sacrifice.\"\n      }, {\n        date: \"August 21\",\n        name: \"Ninoy Aquino Day\",\n        type: \"Special Non-Working\",\n        description: \"Commemorates the assassination of Senator Benigno Aquino Jr.\"\n      }, {\n        date: \"August 28\",\n        name: \"National Heroes Day\",\n        type: \"Regular Holiday\",\n        description: \"Honors and remembers all Philippine national heroes.\"\n      }, {\n        date: \"September 3\",\n        name: \"Surrender of Gen. Yamashita\",\n        type: \"Special Working\",\n        description: \"Commemorates the surrender of Japanese General Tomoyuki Yamashita in 1945.\"\n      }, {\n        date: \"November 1\",\n        name: \"All Saints' Day\",\n        type: \"Special Non-Working\",\n        description: \"Christian feast day honoring all saints.\"\n      }, {\n        date: \"November 2\",\n        name: \"All Souls' Day\",\n        type: \"Special Non-Working\",\n        description: \"Christian feast day for commemorating the faithful departed.\"\n      }, {\n        date: \"November 30\",\n        name: \"Bonifacio Day\",\n        type: \"Regular Holiday\",\n        description: \"Honors Andrés Bonifacio, a Filipino revolutionary leader.\"\n      }, {\n        date: \"December 8\",\n        name: \"Feast of the Immaculate Conception\",\n        type: \"Special Non-Working\",\n        description: \"Catholic feast day celebrating the Immaculate Conception of the Virgin Mary.\"\n      }, {\n        date: \"December 24\",\n        name: \"Christmas Eve\",\n        type: \"Special Non-Working\",\n        description: \"Day before Christmas Day.\"\n      }, {\n        date: \"December 25\",\n        name: \"Christmas Day\",\n        type: \"Regular Holiday\",\n        description: \"Christian holiday celebrating the birth of Jesus Christ.\"\n      }, {\n        date: \"December 30\",\n        name: \"Rizal Day\",\n        type: \"Regular Holiday\",\n        description: \"Commemorates the execution of José Rizal, a Philippine national hero.\"\n      }, {\n        date: \"December 31\",\n        name: \"New Year's Eve\",\n        type: \"Special Non-Working\",\n        description: \"Last day of the year according to the Gregorian calendar.\"\n      }]\n    };\n  },\n  computed: {\n    currentYear() {\n      return this.currentDate.getFullYear();\n    },\n    currentMonth() {\n      return this.currentDate.getMonth();\n    },\n    currentMonthName() {\n      return new Date(this.currentYear, this.currentMonth, 1).toLocaleString('default', {\n        month: 'long'\n      });\n    },\n    calendarDays() {\n      return this.generateCalendarDays();\n    },\n    currentMonthHolidays() {\n      return this.holidays.filter(holiday => {\n        const holidayDate = this.parseHolidayDate(holiday.date);\n        return holidayDate.getMonth() === this.currentMonth;\n      }).sort((a, b) => {\n        const dateA = this.parseHolidayDate(a.date).getDate();\n        const dateB = this.parseHolidayDate(b.date).getDate();\n        return dateA - dateB;\n      });\n    }\n  },\n  methods: {\n    parseHolidayDate(dateStr) {\n      const [month, day] = dateStr.split(' ');\n      const monthIndex = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].indexOf(month);\n      return new Date(this.currentYear, monthIndex, parseInt(day));\n    },\n    formatDate(date) {\n      if (!date) return '';\n      return date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    generateCalendarDays() {\n      const days = [];\n      const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\n      const lastDayOfMonth = new Date(this.currentYear, this.currentMonth + 1, 0);\n      const firstDayWeekday = firstDayOfMonth.getDay();\n      const prevMonthLastDay = new Date(this.currentYear, this.currentMonth, 0).getDate();\n\n      // Previous month days\n      for (let i = firstDayWeekday - 1; i >= 0; i--) {\n        const dayNumber = prevMonthLastDay - i;\n        const fullDate = new Date(this.currentYear, this.currentMonth - 1, dayNumber);\n        const dateKey = fullDate.toISOString().split('T')[0];\n        days.push({\n          date: dayNumber,\n          fullDate: fullDate,\n          isCurrentMonth: false,\n          isToday: this.isToday(fullDate),\n          holiday: this.getHolidayForDate(fullDate),\n          tasks: this.tasksByDay[dateKey] || []\n        });\n      }\n\n      // Current month days\n      for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n        const fullDate = new Date(this.currentYear, this.currentMonth, i);\n        const dateKey = fullDate.toISOString().split('T')[0];\n        days.push({\n          date: i,\n          fullDate: fullDate,\n          isCurrentMonth: true,\n          isToday: this.isToday(fullDate),\n          holiday: this.getHolidayForDate(fullDate),\n          tasks: this.tasksByDay[dateKey] || []\n        });\n      }\n\n      // Next month days\n      const daysNeeded = 42 - days.length;\n      for (let i = 1; i <= daysNeeded; i++) {\n        const fullDate = new Date(this.currentYear, this.currentMonth + 1, i);\n        const dateKey = fullDate.toISOString().split('T')[0];\n        days.push({\n          date: i,\n          fullDate: fullDate,\n          isCurrentMonth: false,\n          isToday: this.isToday(fullDate),\n          holiday: this.getHolidayForDate(fullDate),\n          tasks: this.tasksByDay[dateKey] || []\n        });\n      }\n      return days;\n    },\n    isToday(date) {\n      const today = new Date();\n      return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n    },\n    getHolidayForDate(date) {\n      const month = date.toLocaleString('default', {\n        month: 'long'\n      });\n      const day = date.getDate();\n      const dateString = `${month} ${day}`;\n      return this.holidays.find(holiday => holiday.date === dateString) || null;\n    },\n    prevMonth() {\n      this.currentDate = new Date(this.currentYear, this.currentMonth - 1, 1);\n      this.closeModal();\n    },\n    nextMonth() {\n      this.currentDate = new Date(this.currentYear, this.currentMonth + 1, 1);\n      this.closeModal();\n    },\n    selectDay(day) {\n      this.selectedDay = {\n        ...day,\n        tasks: [...(day.tasks || [])]\n      };\n      this.showModal = true;\n    },\n    selectHoliday(holiday) {\n      const holidayDate = this.parseHolidayDate(holiday.date);\n      const holidayDay = this.calendarDays.find(day => day.fullDate.getDate() === holidayDate.getDate() && day.fullDate.getMonth() === holidayDate.getMonth());\n      if (holidayDay) {\n        this.selectDay(holidayDay);\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedDay = null;\n    },\n    addTask() {\n      if (!this.selectedDay.tasks) {\n        this.selectedDay.tasks = [];\n      }\n      this.selectedDay.tasks.push('');\n      this.updateTasksInStorage();\n    },\n    updateTask(day, index) {\n      if (this.selectedDay.tasks[index].trim() === '') {\n        this.removeTask(index);\n      } else {\n        this.updateTasksInStorage();\n      }\n    },\n    removeTask(index) {\n      this.selectedDay.tasks.splice(index, 1);\n      this.updateTasksInStorage();\n    },\n    updateTasksInStorage() {\n      const dateKey = this.selectedDay.fullDate.toISOString().split('T')[0];\n      this.$set(this.tasksByDay, dateKey, [...this.selectedDay.tasks]);\n      this.$forceUpdate();\n    },\n    handleEscape(e) {\n      if (e.key === 'Escape' && this.showModal) {\n        this.closeModal();\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener('keydown', this.handleEscape);\n  },\n  beforeUnmount() {\n    document.removeEventListener('keydown', this.handleEscape);\n  }\n};","map":{"version":3,"names":["name","data","currentDate","Date","selectedDay","showModal","daysOfWeek","tasksByDay","holidays","date","type","description","computed","currentYear","getFullYear","currentMonth","getMonth","currentMonthName","toLocaleString","month","calendarDays","generateCalendarDays","currentMonthHolidays","filter","holiday","holidayDate","parseHolidayDate","sort","a","b","dateA","getDate","dateB","methods","dateStr","day","split","monthIndex","indexOf","parseInt","formatDate","toLocaleDateString","weekday","year","days","firstDayOfMonth","lastDayOfMonth","firstDayWeekday","getDay","prevMonthLastDay","i","dayNumber","fullDate","dateKey","toISOString","push","isCurrentMonth","isToday","getHolidayForDate","tasks","daysNeeded","length","today","dateString","find","prevMonth","closeModal","nextMonth","selectDay","selectHoliday","holidayDay","addTask","updateTasksInStorage","updateTask","index","trim","removeTask","splice","$set","$forceUpdate","handleEscape","e","key","mounted","document","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\admind\\ListHolidays.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar-wrapper\">\r\n    <!-- Header with month/year navigation -->\r\n    <div class=\"calendar-header\">\r\n      <button @click=\"prevMonth\" class=\"nav-button\">◀</button>\r\n      <h2>{{ currentMonthName }} {{ currentYear }}</h2>\r\n      <button @click=\"nextMonth\" class=\"nav-button\">▶</button>\r\n    </div>\r\n    \r\n    <!-- Calendar grid -->\r\n    <div class=\"calendar\">\r\n      <!-- Days of week header -->\r\n      <div v-for=\"day in daysOfWeek\" :key=\"day\" class=\"calendar-cell day-name\">\r\n        {{ day }}\r\n      </div>\r\n      \r\n      <!-- Calendar days -->\r\n      <div \r\n        v-for=\"(day, index) in calendarDays\" \r\n        :key=\"index\"\r\n        :class=\"[\r\n          'calendar-cell', \r\n          { 'other-month': !day.isCurrentMonth },\r\n          { 'today': day.isToday },\r\n          { 'has-holiday': day.holiday },\r\n          { 'has-tasks': day.tasks && day.tasks.length > 0 }\r\n        ]\"\r\n        @click=\"selectDay(day)\"\r\n      >\r\n        <div class=\"date-number\">{{ day.date }}</div>\r\n        <div v-if=\"day.holiday\" class=\"holiday-indicator\" :class=\"day.holiday.type.toLowerCase().replace(' ', '-')\"></div>\r\n        <div v-if=\"day.tasks && day.tasks.length\" class=\"task-indicator\">\r\n          {{ day.tasks.length }} task{{ day.tasks.length > 1 ? 's' : '' }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Monthly holidays summary -->\r\n    <div class=\"monthly-holidays\">\r\n      <h3>{{ currentMonthName }} Holidays</h3>\r\n      <div class=\"holiday-list\">\r\n        <div \r\n          v-for=\"(holiday, index) in currentMonthHolidays\" \r\n          :key=\"index\" \r\n          class=\"holiday-item\"\r\n          :class=\"holiday.type.toLowerCase().replace(' ', '-')\"\r\n          @click=\"selectHoliday(holiday)\"\r\n        >\r\n          <div class=\"holiday-date-small\">{{ holiday.date.split(' ')[1] }}</div>\r\n          <div class=\"holiday-name-small\">{{ holiday.name }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Day Detail Modal -->\r\n    <div class=\"modal-overlay\" v-if=\"showModal\" @click.self=\"closeModal\">\r\n      <div class=\"modal-content\" :class=\"{ 'has-holiday': selectedDay.holiday }\">\r\n        <button class=\"close-button\" @click=\"closeModal\">×</button>\r\n        \r\n        <div class=\"modal-header\">\r\n          <div class=\"date-header\">{{ formatDate(selectedDay.fullDate) }}</div>\r\n          <div v-if=\"selectedDay.holiday\" class=\"holiday-section\">\r\n            <h3 class=\"holiday-name\">{{ selectedDay.holiday.name }}</h3>\r\n            <div class=\"holiday-badge\" :class=\"selectedDay.holiday.type.toLowerCase().replace(' ', '-')\">\r\n              {{ selectedDay.holiday.type }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal-body\">\r\n          <!-- Holiday Info -->\r\n          <div v-if=\"selectedDay.holiday\" class=\"holiday-info-section\">\r\n            <p class=\"holiday-description\">{{ selectedDay.holiday.description }}</p>\r\n            <div class=\"holiday-info\">\r\n              <div class=\"info-item\">\r\n                <strong>Pay Rules:</strong>\r\n                <span v-if=\"selectedDay.holiday.type === 'Regular Holiday'\">\r\n                  100% additional pay for working, or 100% pay if not working\r\n                </span>\r\n                <span v-else-if=\"selectedDay.holiday.type === 'Special Non-Working'\">\r\n                  30% additional pay for working, or no pay if not working\r\n                </span>\r\n                <span v-else>\r\n                  No additional pay for working\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Tasks Section -->\r\n          <div class=\"tasks-section\">\r\n            <h4>Tasks</h4>\r\n            <div class=\"task-list\">\r\n              <div \r\n                v-for=\"(task, index) in selectedDay.tasks\" \r\n                :key=\"index\" \r\n                class=\"task-item\"\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  v-model=\"selectedDay.tasks[index]\"\r\n                  @blur=\"updateTask(selectedDay, index)\"\r\n                  class=\"task-input\"\r\n                  placeholder=\"Enter task description\"\r\n                />\r\n                <button @click=\"removeTask(index)\" class=\"remove-task\">×</button>\r\n              </div>\r\n            </div>\r\n            <button @click=\"addTask\" class=\"add-task-btn\">+ Add Task</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PhilippineCalendar\",\r\n  data() {\r\n    return {\r\n      currentDate: new Date(),\r\n      selectedDay: null,\r\n      showModal: false,\r\n      daysOfWeek: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n      tasksByDay: {}, // Store tasks by date string (YYYY-MM-DD)\r\n      holidays: [\r\n        { \r\n          date: \"January 1\", \r\n          name: \"New Year's Day\", \r\n          type: \"Regular Holiday\", \r\n          description: \"A public holiday marking the start of a new year according to the Gregorian calendar.\"\r\n        },\r\n        { \r\n          date: \"January 2\", \r\n          name: \"Special Working Holiday\", \r\n          type: \"Special Working\",\r\n          description: \"Additional holiday to create a long weekend.\"\r\n        },\r\n        { \r\n          date: \"January 23\", \r\n          name: \"First Philippine Republic Day\", \r\n          type: \"Special Working\",\r\n          description: \"Commemorates the establishment of the First Philippine Republic in 1899.\"\r\n        },\r\n        { \r\n          date: \"February 25\", \r\n          name: \"EDSA People Power Revolution\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Commemorates the People Power Revolution of 1986 that peacefully overthrew President Ferdinand Marcos.\"\r\n        },\r\n        { \r\n          date: \"April 6\", \r\n          name: \"Maundy Thursday\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Christian holiday commemorating the Last Supper of Jesus Christ with the Apostles.\"\r\n        },\r\n        { \r\n          date: \"April 7\", \r\n          name: \"Good Friday\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Christian holiday commemorating the crucifixion of Jesus Christ.\"\r\n        },\r\n        { \r\n          date: \"April 8\", \r\n          name: \"Black Saturday\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Christian holiday preceding Easter Sunday.\"\r\n        },\r\n        { \r\n          date: \"April 9\", \r\n          name: \"Araw ng Kagitingan\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Day of Valor, commemorating the fall of Bataan during World War II.\"\r\n        },\r\n        { \r\n          date: \"May 1\", \r\n          name: \"Labor Day\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Honors the contributions of workers to society.\"\r\n        },\r\n        { \r\n          date: \"June 12\", \r\n          name: \"Independence Day\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Commemorates the Philippine Declaration of Independence from Spain in 1898.\"\r\n        },\r\n        { \r\n          date: \"July 6\", \r\n          name: \"Eid'l Adha\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Islamic holiday, the Feast of Sacrifice.\"\r\n        },\r\n        { \r\n          date: \"August 21\", \r\n          name: \"Ninoy Aquino Day\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Commemorates the assassination of Senator Benigno Aquino Jr.\"\r\n        },\r\n        { \r\n          date: \"August 28\", \r\n          name: \"National Heroes Day\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Honors and remembers all Philippine national heroes.\"\r\n        },\r\n        { \r\n          date: \"September 3\", \r\n          name: \"Surrender of Gen. Yamashita\", \r\n          type: \"Special Working\",\r\n          description: \"Commemorates the surrender of Japanese General Tomoyuki Yamashita in 1945.\"\r\n        },\r\n        { \r\n          date: \"November 1\", \r\n          name: \"All Saints' Day\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Christian feast day honoring all saints.\"\r\n        },\r\n        { \r\n          date: \"November 2\", \r\n          name: \"All Souls' Day\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Christian feast day for commemorating the faithful departed.\"\r\n        },\r\n        { \r\n          date: \"November 30\", \r\n          name: \"Bonifacio Day\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Honors Andrés Bonifacio, a Filipino revolutionary leader.\"\r\n        },\r\n        { \r\n          date: \"December 8\", \r\n          name: \"Feast of the Immaculate Conception\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Catholic feast day celebrating the Immaculate Conception of the Virgin Mary.\"\r\n        },\r\n        { \r\n          date: \"December 24\", \r\n          name: \"Christmas Eve\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Day before Christmas Day.\"\r\n        },\r\n        { \r\n          date: \"December 25\", \r\n          name: \"Christmas Day\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Christian holiday celebrating the birth of Jesus Christ.\"\r\n        },\r\n        { \r\n          date: \"December 30\", \r\n          name: \"Rizal Day\", \r\n          type: \"Regular Holiday\",\r\n          description: \"Commemorates the execution of José Rizal, a Philippine national hero.\"\r\n        },\r\n        { \r\n          date: \"December 31\", \r\n          name: \"New Year's Eve\", \r\n          type: \"Special Non-Working\",\r\n          description: \"Last day of the year according to the Gregorian calendar.\"\r\n        },\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    currentYear() {\r\n      return this.currentDate.getFullYear();\r\n    },\r\n    currentMonth() {\r\n      return this.currentDate.getMonth();\r\n    },\r\n    currentMonthName() {\r\n      return new Date(this.currentYear, this.currentMonth, 1).toLocaleString('default', { month: 'long' });\r\n    },\r\n    calendarDays() {\r\n      return this.generateCalendarDays();\r\n    },\r\n    currentMonthHolidays() {\r\n      return this.holidays.filter(holiday => {\r\n        const holidayDate = this.parseHolidayDate(holiday.date);\r\n        return holidayDate.getMonth() === this.currentMonth;\r\n      }).sort((a, b) => {\r\n        const dateA = this.parseHolidayDate(a.date).getDate();\r\n        const dateB = this.parseHolidayDate(b.date).getDate();\r\n        return dateA - dateB;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    parseHolidayDate(dateStr) {\r\n      const [month, day] = dateStr.split(' ');\r\n      const monthIndex = [\r\n        'January', 'February', 'March', 'April', 'May', 'June',\r\n        'July', 'August', 'September', 'October', 'November', 'December'\r\n      ].indexOf(month);\r\n      return new Date(this.currentYear, monthIndex, parseInt(day));\r\n    },\r\n    \r\n    formatDate(date) {\r\n      if (!date) return '';\r\n      return date.toLocaleDateString('en-US', { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric' \r\n      });\r\n    },\r\n    \r\n    generateCalendarDays() {\r\n      const days = [];\r\n      const firstDayOfMonth = new Date(this.currentYear, this.currentMonth, 1);\r\n      const lastDayOfMonth = new Date(this.currentYear, this.currentMonth + 1, 0);\r\n      const firstDayWeekday = firstDayOfMonth.getDay();\r\n      const prevMonthLastDay = new Date(this.currentYear, this.currentMonth, 0).getDate();\r\n      \r\n      // Previous month days\r\n      for (let i = firstDayWeekday - 1; i >= 0; i--) {\r\n        const dayNumber = prevMonthLastDay - i;\r\n        const fullDate = new Date(this.currentYear, this.currentMonth - 1, dayNumber);\r\n        const dateKey = fullDate.toISOString().split('T')[0];\r\n        days.push({\r\n          date: dayNumber,\r\n          fullDate: fullDate,\r\n          isCurrentMonth: false,\r\n          isToday: this.isToday(fullDate),\r\n          holiday: this.getHolidayForDate(fullDate),\r\n          tasks: this.tasksByDay[dateKey] || []\r\n        });\r\n      }\r\n      \r\n      // Current month days\r\n      for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\r\n        const fullDate = new Date(this.currentYear, this.currentMonth, i);\r\n        const dateKey = fullDate.toISOString().split('T')[0];\r\n        days.push({\r\n          date: i,\r\n          fullDate: fullDate,\r\n          isCurrentMonth: true,\r\n          isToday: this.isToday(fullDate),\r\n          holiday: this.getHolidayForDate(fullDate),\r\n          tasks: this.tasksByDay[dateKey] || []\r\n        });\r\n      }\r\n      \r\n      // Next month days\r\n      const daysNeeded = 42 - days.length;\r\n      for (let i = 1; i <= daysNeeded; i++) {\r\n        const fullDate = new Date(this.currentYear, this.currentMonth + 1, i);\r\n        const dateKey = fullDate.toISOString().split('T')[0];\r\n        days.push({\r\n          date: i,\r\n          fullDate: fullDate,\r\n          isCurrentMonth: false,\r\n          isToday: this.isToday(fullDate),\r\n          holiday: this.getHolidayForDate(fullDate),\r\n          tasks: this.tasksByDay[dateKey] || []\r\n        });\r\n      }\r\n      \r\n      return days;\r\n    },\r\n    \r\n    isToday(date) {\r\n      const today = new Date();\r\n      return date.getDate() === today.getDate() &&\r\n             date.getMonth() === today.getMonth() &&\r\n             date.getFullYear() === today.getFullYear();\r\n    },\r\n    \r\n    getHolidayForDate(date) {\r\n      const month = date.toLocaleString('default', { month: 'long' });\r\n      const day = date.getDate();\r\n      const dateString = `${month} ${day}`;\r\n      return this.holidays.find(holiday => holiday.date === dateString) || null;\r\n    },\r\n    \r\n    prevMonth() {\r\n      this.currentDate = new Date(this.currentYear, this.currentMonth - 1, 1);\r\n      this.closeModal();\r\n    },\r\n    \r\n    nextMonth() {\r\n      this.currentDate = new Date(this.currentYear, this.currentMonth + 1, 1);\r\n      this.closeModal();\r\n    },\r\n    \r\n    selectDay(day) {\r\n      this.selectedDay = { ...day, tasks: [...(day.tasks || [])] };\r\n      this.showModal = true;\r\n    },\r\n    \r\n    selectHoliday(holiday) {\r\n      const holidayDate = this.parseHolidayDate(holiday.date);\r\n      const holidayDay = this.calendarDays.find(day => \r\n        day.fullDate.getDate() === holidayDate.getDate() && \r\n        day.fullDate.getMonth() === holidayDate.getMonth()\r\n      );\r\n      if (holidayDay) {\r\n        this.selectDay(holidayDay);\r\n      }\r\n    },\r\n    \r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedDay = null;\r\n    },\r\n    \r\n    addTask() {\r\n      if (!this.selectedDay.tasks) {\r\n        this.selectedDay.tasks = [];\r\n      }\r\n      this.selectedDay.tasks.push('');\r\n      this.updateTasksInStorage();\r\n    },\r\n    \r\n    updateTask(day, index) {\r\n      if (this.selectedDay.tasks[index].trim() === '') {\r\n        this.removeTask(index);\r\n      } else {\r\n        this.updateTasksInStorage();\r\n      }\r\n    },\r\n    \r\n    removeTask(index) {\r\n      this.selectedDay.tasks.splice(index, 1);\r\n      this.updateTasksInStorage();\r\n    },\r\n    \r\n    updateTasksInStorage() {\r\n      const dateKey = this.selectedDay.fullDate.toISOString().split('T')[0];\r\n      this.$set(this.tasksByDay, dateKey, [...this.selectedDay.tasks]);\r\n      this.$forceUpdate();\r\n    },\r\n    \r\n    handleEscape(e) {\r\n      if (e.key === 'Escape' && this.showModal) {\r\n        this.closeModal();\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener('keydown', this.handleEscape);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('keydown', this.handleEscape);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles remain unchanged from your previous version */\r\n.calendar-wrapper {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  font-family: 'Roboto', Arial, sans-serif;\r\n  color: #333;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  position: relative;\r\n}\r\n\r\n/* Calendar Header */\r\n.calendar-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding: 10px 0;\r\n  border-bottom: 2px solid #f0f0f0;\r\n}\r\n\r\n.calendar-header h2 {\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  margin: 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.nav-button {\r\n  background: #3498db;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.nav-button:hover {\r\n  background: #2980b9;\r\n}\r\n\r\n/* Calendar Grid */\r\n.calendar {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 5px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.calendar-cell {\r\n  aspect-ratio: 1/1;\r\n  border: 1px solid #e0e0e0;\r\n  padding: 10px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.calendar-cell:not(.day-name) {\r\n  cursor: pointer;\r\n}\r\n\r\n.calendar-cell:hover:not(.day-name) {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.day-name {\r\n  font-weight: bold;\r\n  color: #7f8c8d;\r\n  background-color: #f7f9fa;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.date-number {\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n}\r\n\r\n.other-month {\r\n  opacity: 0.4;\r\n}\r\n\r\n.today {\r\n  background-color: #e8f4f8;\r\n  border: 2px solid #3498db;\r\n  font-weight: bold;\r\n}\r\n\r\n.has-holiday {\r\n  position: relative;\r\n}\r\n\r\n.has-tasks {\r\n  background-color: #f0f8ff;\r\n}\r\n\r\n.holiday-indicator {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 6px;\r\n}\r\n\r\n.holiday-indicator.regular-holiday {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.holiday-indicator.special-working {\r\n  background-color: #f39c12;\r\n}\r\n\r\n.holiday-indicator.special-non-working {\r\n  background-color: #9b59b6;\r\n}\r\n\r\n.task-indicator {\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 10px;\r\n  color: #4682b4;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  padding: 2px 5px;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Monthly Holidays */\r\n.monthly-holidays {\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  border-radius: 10px;\r\n}\r\n\r\n.monthly-holidays h3 {\r\n  color: #2c3e50;\r\n  margin-top: 0;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.holiday-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 10px;\r\n}\r\n\r\n.holiday-item {\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.holiday-item:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.holiday-item:before {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 5px;\r\n}\r\n\r\n.holiday-item.regular-holiday:before {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.holiday-item.special-working:before {\r\n  background-color: #f39c12;\r\n}\r\n\r\n.holiday-item.special-non-working:before {\r\n  background-color: #9b59b6;\r\n}\r\n\r\n.holiday-date-small {\r\n  font-weight: bold;\r\n  margin-right: 15px;\r\n  min-width: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.holiday-name-small {\r\n  font-weight: 400;\r\n}\r\n\r\n/* Modal Popup */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(5px);\r\n  animation: fadeIn 0.3s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  border-radius: 15px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n  overflow: hidden;\r\n  animation: slideIn 0.3s ease-out;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { transform: translateY(50px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.modal-content.has-holiday:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 8px;\r\n}\r\n\r\n.modal-content.has-holiday.regular-holiday:before {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.modal-content.has-holiday.special-working:before {\r\n  background-color: #f39c12;\r\n}\r\n\r\n.modal-content.has-holiday.special-non-working:before {\r\n  background-color: #9b59b6;\r\n}\r\n\r\n.close-button {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border: none;\r\n  color: #333;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  font-size: 24px;\r\n  line-height: 1;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.close-button:hover {\r\n  background: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.modal-header {\r\n  padding: 25px 25px 15px;\r\n}\r\n\r\n.date-header {\r\n  color: #7f8c8d;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.holiday-section {\r\n  margin-top: 10px;\r\n}\r\n\r\n.modal-body {\r\n  padding: 0 25px 25px;\r\n}\r\n\r\n.holiday-info-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.holiday-date {\r\n  color: #7f8c8d;\r\n  font-size: 14px;\r\n}\r\n\r\n.holiday-name {\r\n  font-size: 24px;\r\n  margin: 10px 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.holiday-badge {\r\n  display: inline-block;\r\n  padding: 5px 12px;\r\n  border-radius: 20px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: white;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.holiday-badge.regular-holiday {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.holiday-badge.special-working {\r\n  background-color: #f39c12;\r\n}\r\n\r\n.holiday-badge.special-non-working {\r\n  background-color: #9b59b6;\r\n}\r\n\r\n.holiday-description {\r\n  color: #34495e;\r\n  line-height: 1.6;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.holiday-info {\r\n  background-color: #f8f9fa;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.info-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.info-item:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.tasks-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.tasks-section h4 {\r\n  color: #2c3e50;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-list {\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.task-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.task-input:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n  box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);\r\n}\r\n\r\n.remove-task {\r\n  background: #e74c3c;\r\n  color: white;\r\n  border: none;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.remove-task:hover {\r\n  background: #c0392b;\r\n}\r\n\r\n.add-task-btn {\r\n  background: #3498db;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.add-task-btn:hover {\r\n  background: #2980b9;\r\n}\r\n\r\n/* Responsive Adjustments */\r\n@media (max-width: 768px) {\r\n  .calendar-cell {\r\n    padding: 5px;\r\n  }\r\n  \r\n  .date-number {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .holiday-list {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .modal-content {\r\n    width: 95%;\r\n    max-height: 80vh;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}