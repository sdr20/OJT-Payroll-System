{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AdminLogin',\n  data() {\n    return {\n      username: '',\n      password: '',\n      loginError: false,\n      errorMessage: '',\n      isLoading: false\n    };\n  },\n  methods: {\n    async login() {\n      this.isLoading = true;\n      this.loginError = false;\n      try {\n        // Simulate API call - replace with actual authentication\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Example validation - replace with your actual authentication logic\n        if (this.username === 'admin' && this.password === 'password123') {\n          await this.$store.dispatch('login', {\n            username: this.username,\n            role: 'admin'\n          });\n          this.$router.push('/admin');\n        } else {\n          throw new Error('Invalid username or password');\n        }\n      } catch (error) {\n        this.loginError = true;\n        this.errorMessage = error.message || 'Invalid username or password';\n        this.password = ''; // Clear password field on error\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  },\n  watch: {\n    username() {\n      // Clear error when user starts typing\n      this.loginError = false;\n    },\n    password() {\n      // Clear error when user starts typing\n      this.loginError = false;\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","loginError","errorMessage","isLoading","methods","login","Promise","resolve","setTimeout","$store","dispatch","role","$router","push","Error","error","message","watch"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\components\\adminlogin\\AdminLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-purple-50 to-indigo-100 flex items-center justify-center p-4\">\r\n    <div class=\"w-full max-w-md\">\r\n      <div class=\"bg-white/80 backdrop-blur-lg rounded-2xl shadow-xl p-8 space-y-6\">\r\n        <!-- Admin Brand Area -->\r\n        <div class=\"text-center space-y-2\">\r\n          <div class=\"bg-indigo-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-8 h-8 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01\" />\r\n            </svg>\r\n          </div>\r\n          <h1 class=\"text-2xl font-bold text-gray-900\">Admin Portal</h1>\r\n          <p class=\"text-gray-500 text-sm\">Secure administrative access</p>\r\n        </div>\r\n\r\n        <!-- Error Alert -->\r\n        <div v-if=\"loginError\" class=\"bg-red-50 text-red-700 p-4 rounded-lg flex items-center gap-2\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n          </svg>\r\n          <span class=\"text-sm\">{{ errorMessage }}</span>\r\n        </div>\r\n\r\n        <!-- Login Form -->\r\n        <form @submit.prevent=\"login\" class=\"space-y-4\">\r\n          <div class=\"space-y-1\">\r\n            <label for=\"username\" class=\"text-sm font-medium text-gray-700\">Admin Username</label>\r\n            <div class=\"relative\">\r\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                </svg>\r\n              </div>\r\n              <input\r\n                v-model=\"username\"\r\n                type=\"text\"\r\n                id=\"username\"\r\n                :class=\"['block w-full pl-10 pr-3 py-2.5 border rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent bg-white/50 backdrop-blur-sm transition',\r\n                        loginError ? 'border-red-300' : 'border-gray-300']\"\r\n                placeholder=\"Enter admin username\"\r\n                required\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"space-y-1\">\r\n            <label for=\"password\" class=\"text-sm font-medium text-gray-700\">Password</label>\r\n            <div class=\"relative\">\r\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n                </svg>\r\n              </div>\r\n              <input\r\n                v-model=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                :class=\"['block w-full pl-10 pr-3 py-2.5 border rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent bg-white/50 backdrop-blur-sm transition',\r\n                        loginError ? 'border-red-300' : 'border-gray-300']\"\r\n                placeholder=\"Enter your password\"\r\n                required\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex items-center justify-end\">\r\n            <button type=\"button\" class=\"text-sm text-indigo-600 hover:text-indigo-700\">\r\n              Forgot password?\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            :disabled=\"isLoading\"\r\n            class=\"w-full bg-indigo-600 text-white py-2.5 rounded-lg font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            <span v-if=\"!isLoading\">Sign in as Admin</span>\r\n            <span v-else>Signing in...</span>\r\n          </button>\r\n        </form>\r\n\r\n        <div class=\"text-center text-sm text-gray-500\">\r\n          Protected administrative area\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\nname: 'AdminLogin',\r\ndata() {\r\n  return {\r\n    username: '',\r\n    password: '',\r\n    loginError: false,\r\n    errorMessage: '',\r\n    isLoading: false\r\n  };\r\n},\r\nmethods: {\r\n  async login() {\r\n    this.isLoading = true;\r\n    this.loginError = false;\r\n    \r\n    try {\r\n      // Simulate API call - replace with actual authentication\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Example validation - replace with your actual authentication logic\r\n      if (this.username === 'admin' && this.password === 'password123') {\r\n        await this.$store.dispatch('login', { \r\n          username: this.username, \r\n          role: 'admin' \r\n        });\r\n        this.$router.push('/admin');\r\n      } else {\r\n        throw new Error('Invalid username or password');\r\n      }\r\n    } catch (error) {\r\n      this.loginError = true;\r\n      this.errorMessage = error.message || 'Invalid username or password';\r\n      this.password = ''; // Clear password field on error\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  },\r\n},\r\nwatch: {\r\n  username() {\r\n    // Clear error when user starts typing\r\n    this.loginError = false;\r\n  },\r\n  password() {\r\n    // Clear error when user starts typing\r\n    this.loginError = false;\r\n  }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any additional custom styles here */\r\n</style>"],"mappings":";AA0FA,eAAe;EACfA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI,CAACF,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACF,UAAS,GAAI,KAAK;MAEvB,IAAI;QACF;QACA,MAAM,IAAIK,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;QAEvD;QACA,IAAI,IAAI,CAACR,QAAO,KAAM,OAAM,IAAK,IAAI,CAACC,QAAO,KAAM,aAAa,EAAE;UAChE,MAAM,IAAI,CAACS,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE;YAClCX,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBY,IAAI,EAAE;UACR,CAAC,CAAC;UACF,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO;UACL,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACd,UAAS,GAAI,IAAI;QACtB,IAAI,CAACC,YAAW,GAAIa,KAAK,CAACC,OAAM,IAAK,8BAA8B;QACnE,IAAI,CAAChB,QAAO,GAAI,EAAE,EAAE;MACtB,UAAU;QACR,IAAI,CAACG,SAAQ,GAAI,KAAK;MACxB;IACF;EACF,CAAC;EACDc,KAAK,EAAE;IACLlB,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,CAACE,UAAS,GAAI,KAAK;IACzB,CAAC;IACDD,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,CAACC,UAAS,GAAI,KAAK;IACzB;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}