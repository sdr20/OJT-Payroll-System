{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  name: 'EmployeeDashboard',\n  data() {\n    return {\n      totalAbsences: 0,\n      totalLate: 0,\n      totalOnTime: 0,\n      attendanceRecords: [],\n      earnings: {\n        'Base Salary': 25000,\n        'Overtime': 2500,\n        'Travel Allowance': 1500,\n        'Meal Allowance': 1000\n      },\n      deductions: {\n        'SSS': 1200,\n        'Pag-IBIG': 800,\n        'PhilHealth': 600,\n        'Tax': 2500,\n        'Absences': 1000\n      }\n    };\n  },\n  computed: {\n    totalEarnings() {\n      return Object.values(this.earnings).reduce((a, b) => a + b, 0);\n    },\n    totalDeductions() {\n      return Object.values(this.deductions).reduce((a, b) => a + b, 0);\n    },\n    netSalary() {\n      return this.totalEarnings - this.totalDeductions;\n    }\n  },\n  created() {\n    this.fetchAttendanceRecords();\n  },\n  methods: {\n    async timeIn() {\n      try {\n        const response = await axios.post('/api/attendance/time-in', {});\n        if (response.status === 200) {\n          this.$toast.success('Time in successful!');\n          this.fetchAttendanceRecords();\n        }\n      } catch (error) {\n        console.error('Failed to time in:', error);\n        this.$toast.error('Time in failed. Please try again.');\n      }\n    },\n    async timeOut() {\n      try {\n        const response = await axios.post('/api/attendance/time-out', {});\n        if (response.status === 200) {\n          this.$toast.success('Time out successful!');\n          this.fetchAttendanceRecords();\n        }\n      } catch (error) {\n        console.error('Failed to time out:', error);\n        this.$toast.error('Time out failed. Please try again.');\n      }\n    },\n    async fetchAttendanceRecords() {\n      try {\n        const response = await axios.get('/api/attendance/records');\n        this.attendanceRecords = response.data.records;\n        this.totalAbsences = response.data.totalAbsences;\n        this.totalLate = response.data.totalLate;\n        this.totalOnTime = response.data.totalOnTime;\n      } catch (error) {\n        console.error('Failed to fetch attendance records:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","totalAbsences","totalLate","totalOnTime","attendanceRecords","earnings","deductions","computed","totalEarnings","Object","values","reduce","a","b","totalDeductions","netSalary","created","fetchAttendanceRecords","methods","timeIn","response","post","status","$toast","success","error","console","timeOut","get","records"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\EmployeeDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n    <div class=\"p-6\">\r\n      <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        <!-- Main Dashboard Section -->\r\n        <div class=\"lg:col-span-3 space-y-6\">\r\n          <!-- Header with Time Buttons -->\r\n          <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div class=\"flex justify-between items-center\">\r\n              <h1 class=\"text-2xl font-bold text-gray-800\">Dashboard</h1>\r\n              <div class=\"flex space-x-3\">\r\n                <button @click=\"timeIn\" class=\"bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 transition-colors duration-200 shadow-sm\">\r\n                  Time In\r\n                </button>\r\n                <button @click=\"timeOut\" class=\"bg-rose-500 text-white px-4 py-2 rounded-lg hover:bg-rose-600 transition-colors duration-200 shadow-sm\">\r\n                  Time Out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Stats Cards -->\r\n          <div class=\"grid grid-cols-3 gap-4\">\r\n            <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\">\r\n              <div class=\"flex flex-col\">\r\n                <span class=\"text-sm font-medium text-gray-500\">Total Absences</span>\r\n                <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ totalAbsences }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\">\r\n              <div class=\"flex flex-col\">\r\n                <span class=\"text-sm font-medium text-gray-500\">Total Late</span>\r\n                <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ totalLate }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\">\r\n              <div class=\"flex flex-col\">\r\n                <span class=\"text-sm font-medium text-gray-500\">Total On Time</span>\r\n                <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ totalOnTime }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Attendance Records Table -->\r\n          <div class=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n            <div class=\"p-6 border-b border-gray-100\">\r\n              <h2 class=\"text-lg font-semibold text-gray-800\">Attendance Records</h2>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full divide-y divide-gray-200\">\r\n                <thead class=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Employee ID</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time In</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time Out</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                  <tr v-for=\"record in attendanceRecords\" :key=\"record.id\" class=\"hover:bg-gray-50\">\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.employeeId }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.name }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.date }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeIn }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeOut }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Net Worth Section -->\r\n        <div class=\"lg:col-span-1\">\r\n          <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <h2 class=\"text-lg font-semibold text-gray-800 mb-6\">Net Worth</h2>\r\n            \r\n            <!-- Earnings Section -->\r\n            <div class=\"mb-6\">\r\n              <h3 class=\"text-sm font-medium text-gray-600 mb-3\">Earnings</h3>\r\n              <div class=\"space-y-2\">\r\n                <div v-for=\"(amount, type) in earnings\" :key=\"type\" class=\"flex justify-between items-center\">\r\n                  <span class=\"text-sm text-gray-600\">{{ type }}</span>\r\n                  <span class=\"text-sm font-medium\">₱{{ amount.toLocaleString() }}</span>\r\n                </div>\r\n                <div class=\"flex justify-between items-center pt-2 border-t border-gray-100\">\r\n                  <span class=\"text-sm font-medium text-gray-700\">Total Earnings</span>\r\n                  <span class=\"text-sm font-bold text-green-600\">₱{{ totalEarnings.toLocaleString() }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Deductions Section -->\r\n            <div class=\"mb-6\">\r\n              <h3 class=\"text-sm font-medium text-gray-600 mb-3\">Deductions</h3>\r\n              <div class=\"space-y-2\">\r\n                <div v-for=\"(amount, type) in deductions\" :key=\"type\" class=\"flex justify-between items-center\">\r\n                  <span class=\"text-sm text-gray-600\">{{ type }}</span>\r\n                  <span class=\"text-sm font-medium\">₱{{ amount.toLocaleString() }}</span>\r\n                </div>\r\n                <div class=\"flex justify-between items-center pt-2 border-t border-gray-100\">\r\n                  <span class=\"text-sm font-medium text-gray-700\">Total Deductions</span>\r\n                  <span class=\"text-sm font-bold text-red-600\">₱{{ totalDeductions.toLocaleString() }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Total Payable -->\r\n            <div class=\"pt-4 border-t-2 border-gray-200\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-base font-semibold text-gray-800\">Net Salary</span>\r\n                <span class=\"text-lg font-bold text-blue-600\">₱{{ netSalary.toLocaleString() }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeDashboard',\r\n  data() {\r\n    return {\r\n      totalAbsences: 0,\r\n      totalLate: 0,\r\n      totalOnTime: 0,\r\n      attendanceRecords: [],\r\n      earnings: {\r\n        'Base Salary': 25000,\r\n        'Overtime': 2500,\r\n        'Travel Allowance': 1500,\r\n        'Meal Allowance': 1000,\r\n      },\r\n      deductions: {\r\n        'SSS': 1200,\r\n        'Pag-IBIG': 800,\r\n        'PhilHealth': 600,\r\n        'Tax': 2500,\r\n        'Absences': 1000,\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    totalEarnings() {\r\n      return Object.values(this.earnings).reduce((a, b) => a + b, 0);\r\n    },\r\n    totalDeductions() {\r\n      return Object.values(this.deductions).reduce((a, b) => a + b, 0);\r\n    },\r\n    netSalary() {\r\n      return this.totalEarnings - this.totalDeductions;\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchAttendanceRecords();\r\n  },\r\n  methods: {\r\n    async timeIn() {\r\n      try {\r\n        const response = await axios.post('/api/attendance/time-in', {});\r\n        if (response.status === 200) {\r\n          this.$toast.success('Time in successful!');\r\n          this.fetchAttendanceRecords();\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to time in:', error);\r\n        this.$toast.error('Time in failed. Please try again.');\r\n      }\r\n    },\r\n    async timeOut() {\r\n      try {\r\n        const response = await axios.post('/api/attendance/time-out', {});\r\n        if (response.status === 200) {\r\n          this.$toast.success('Time out successful!');\r\n          this.fetchAttendanceRecords();\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to time out:', error);\r\n        this.$toast.error('Time out failed. Please try again.');\r\n      }\r\n    },\r\n    async fetchAttendanceRecords() {\r\n      try {\r\n        const response = await axios.get('/api/attendance/records');\r\n        this.attendanceRecords = response.data.records;\r\n        this.totalAbsences = response.data.totalAbsences;\r\n        this.totalLate = response.data.totalLate;\r\n        this.totalOnTime = response.data.totalOnTime;\r\n      } catch (error) {\r\n        console.error('Failed to fetch attendance records:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}