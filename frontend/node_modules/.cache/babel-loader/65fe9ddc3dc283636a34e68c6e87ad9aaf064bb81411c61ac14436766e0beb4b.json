{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      showAddModal: false,\n      selectedEmployee: null,\n      newEmployee: {\n        firstName: '',\n        lastName: '',\n        birthday: '',\n        hireDate: '',\n        position: '',\n        civilStatus: '',\n        contactInfo: '',\n        email: '',\n        sss: '',\n        philhealth: '',\n        hdmf: '',\n        salary: ''\n      },\n      adminPositions: ['Software Engineer', 'Project Manager', 'HR Specialist', 'Marketing Manager'],\n      // Admin-created positions\n      employees: [{\n        id: 'EMP001',\n        firstName: 'John',\n        lastName: 'Doe',\n        birthday: '1985-10-15',\n        hireDate: '2015-04-23',\n        position: 'Software Engineer',\n        salary: 60000,\n        deductions: {\n          sss: 500,\n          philhealth: 200,\n          pagibig: 100,\n          tax: 1000\n        },\n        earnings: {\n          travelExpenses: 200,\n          otherEarnings: 300\n        },\n        contactInfo: '123-456-7890',\n        email: 'john.doe@example.com'\n      }, {\n        id: 'EMP002',\n        firstName: 'Jane',\n        lastName: 'Smith',\n        birthday: '1990-08-30',\n        hireDate: '2016-07-01',\n        position: 'Project Manager',\n        salary: 80000,\n        deductions: {\n          sss: 600,\n          philhealth: 250,\n          pagibig: 150,\n          tax: 1500\n        },\n        earnings: {\n          travelExpenses: 250,\n          otherEarnings: 400\n        },\n        contactInfo: '987-654-3210',\n        email: 'jane.smith@example.com'\n      }]\n    };\n  },\n  computed: {\n    totalDeductions() {\n      return this.selectedEmployee ? Object.values(this.selectedEmployee.deductions).reduce((a, b) => a + b, 0) : 0;\n    },\n    totalEarnings() {\n      return this.selectedEmployee ? Object.values(this.selectedEmployee.earnings).reduce((a, b) => a + b, 0) : 0;\n    },\n    netSalary() {\n      return this.selectedEmployee ? this.selectedEmployee.salary + this.totalEarnings - this.totalDeductions : 0;\n    }\n  },\n  methods: {\n    viewEmployeeDetails(employee) {\n      this.selectedEmployee = employee;\n    },\n    generatePayslip(employee) {\n      // Placeholder: implement payslip generation logic\n      alert(`Payslip generated for ${employee.firstName} ${employee.lastName}`);\n    },\n    sendPayslipToEmail(employee) {\n      // Placeholder: implement logic to send payslip to email\n      alert(`Payslip sent to ${employee.email}`);\n    },\n    addEmployee() {\n      if (this.newEmployee.firstName && this.newEmployee.lastName && this.newEmployee.position && this.newEmployee.salary && this.newEmployee.email) {\n        this.employees.push({\n          ...this.newEmployee\n        });\n        this.newEmployee = {\n          firstName: '',\n          lastName: '',\n          birthday: '',\n          hireDate: '',\n          position: '',\n          civilStatus: '',\n          contactInfo: '',\n          email: '',\n          sss: '',\n          philhealth: '',\n          hdmf: '',\n          salary: ''\n        };\n        this.showAddModal = false;\n      }\n    },\n    editEmployee(employee) {\n      // Placeholder: edit employee logic\n    },\n    removeEmployee(id) {\n      this.employees = this.employees.filter(employee => employee.id !== id);\n    }\n  }\n};","map":{"version":3,"names":["data","showAddModal","selectedEmployee","newEmployee","firstName","lastName","birthday","hireDate","position","civilStatus","contactInfo","email","sss","philhealth","hdmf","salary","adminPositions","employees","id","deductions","pagibig","tax","earnings","travelExpenses","otherEarnings","computed","totalDeductions","Object","values","reduce","a","b","totalEarnings","netSalary","methods","viewEmployeeDetails","employee","generatePayslip","alert","sendPayslipToEmail","addEmployee","push","editEmployee","removeEmployee","filter"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\ManageEmployees.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen bg-gray-50 p-1\">\r\n      <!-- Add Employee Button -->\r\n      <button @click=\"showAddModal = true\" \r\n              class=\"bg-indigo-600 text-white font-medium py-2.5 px-6 rounded-lg hover:bg-indigo-700 \r\n                     transition duration-200 ease-in-out shadow-sm mb-6 flex items-center gap-2\">\r\n        <span class=\"material-icons-outlined\">person_add</span>\r\n        Add Employee\r\n      </button>\r\n  \r\n      <!-- Employee List -->\r\n      <div class=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n        <div class=\"p-6\">\r\n          <h2 class=\"text-s font-bold text-gray-800 mb-1\">Employee List</h2>\r\n        </div>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Employee ID</th>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Name</th>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Position</th>\r\n                <th class=\"px-6 py-4 text-left text-sm font-medium text-gray-500\">Salary</th>\r\n                <th class=\"px-6 py-4 text-right text-sm font-medium text-gray-500\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"divide-y divide-gray-100\">\r\n              <tr v-for=\"employee in employees\" :key=\"employee.id\" @click=\"viewEmployeeDetails(employee)\" \r\n                  class=\"cursor-pointer hover:bg-gray-50 transition duration-200\">\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.id }}</td>\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">\r\n                  {{ employee.firstName }} {{ employee.lastName }}\r\n                </td>\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.position }}</td>\r\n                <td class=\"px-6 py-4 text-sm text-gray-900\">${{ employee.salary }}</td>\r\n                <td class=\"px-6 py-4 text-right flex justify-end gap-3\">\r\n                  <button @click=\"editEmployee(employee)\" \r\n                          class=\"text-yellow-600 hover:text-yellow-800 transition duration-200\">\r\n                    <span class=\"material-icons-outlined\">edit</span>\r\n                  </button>\r\n                  <button @click=\"removeEmployee(employee.id)\" \r\n                          class=\"text-red-600 hover:text-red-800 transition duration-200\">\r\n                    <span class=\"material-icons-outlined\">delete</span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Employee Details Modal -->\r\n      <div v-if=\"selectedEmployee\" \r\n           class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n        <div class=\"bg-white rounded-xl shadow-xl w-full max-w-3xl m-4 transform transition-all\">\r\n          <div class=\"p-6 border-b flex justify-between items-center\">\r\n            <h2 class=\"text-2xl font-bold text-gray-800\">Employee Details</h2>\r\n          </div>\r\n          <div class=\"p-6\">\r\n            <div class=\"grid grid-cols-2 gap-6\">\r\n              <div class=\"space-y-2\">\r\n                <h3 class=\"text-lg font-semibold text-gray-700\">Employee Info</h3>\r\n                <p><strong>Name: </strong>{{ selectedEmployee.firstName }} {{ selectedEmployee.lastName }}</p>\r\n                <p><strong>Position: </strong>{{ selectedEmployee.position }}</p>\r\n                <p><strong>Salary: </strong>${{ selectedEmployee.salary }}</p>\r\n              </div>\r\n              <div class=\"space-y-2\">\r\n                <h3 class=\"text-lg font-semibold text-gray-700\">Deductions</h3>\r\n                <ul>\r\n                  <li><strong>SSS: </strong>${{ selectedEmployee.deductions.sss }}</li>\r\n                  <li><strong>PhilHealth: </strong>${{ selectedEmployee.deductions.philhealth }}</li>\r\n                  <li><strong>PAGIBIG: </strong>${{ selectedEmployee.deductions.pagibig }}</li>\r\n                  <li><strong>Tax: </strong>${{ selectedEmployee.deductions.tax }}</li>\r\n                </ul>\r\n                <p><strong>Total Deductions: </strong>${{ totalDeductions }}</p>\r\n              </div>\r\n              <div class=\"space-y-2\">\r\n                <h3 class=\"text-lg font-semibold text-gray-700\">Earnings</h3>\r\n                <ul>\r\n                  <li><strong>Travel Expenses: </strong>${{ selectedEmployee.earnings.travelExpenses }}</li>\r\n                  <li><strong>Other Earnings: </strong>${{ selectedEmployee.earnings.otherEarnings }}</li>\r\n                </ul>\r\n                <p><strong>Total Earnings: </strong>${{ totalEarnings }}</p>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"mt-6 space-y-2\">\r\n              <p><strong>Net Salary Payable: </strong>${{ netSalary }}</p>\r\n            </div>\r\n  \r\n            <div class=\"flex justify-end gap-3 mt-6\">\r\n              <button type=\"button\" \r\n                      @click=\"selectedEmployee = null\"\r\n                      class=\"px-6 py-2.5 border border-gray-300 rounded-lg text-gray-700 font-medium \r\n                             hover:bg-gray-50 transition duration-200\">\r\n                Close\r\n              </button>\r\n              <button type=\"button\" \r\n                      @click=\"generatePayslip(selectedEmployee)\"\r\n                      class=\"px-6 py-2.5 bg-indigo-600 text-white font-medium rounded-lg \r\n                             hover:bg-indigo-700 transition duration-200\">\r\n                Generate Payslip\r\n              </button>\r\n              <button type=\"button\" \r\n                      @click=\"sendPayslipToEmail(selectedEmployee)\"\r\n                      class=\"px-6 py-2.5 bg-green-600 text-white font-medium rounded-lg \r\n                             hover:bg-green-700 transition duration-200\">\r\n                Send Payslip to Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add Employee Modal -->\r\n      <div v-if=\"showAddModal\" \r\n           class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n        <div class=\"bg-white rounded-xl shadow-xl w-full max-w-2xl m-4 transform transition-all\">\r\n          <div class=\"p-6 border-b\">\r\n            <h2 class=\"text-2xl font-bold text-gray-800\">Add Employee</h2>\r\n          </div>\r\n          <form @submit.prevent=\"addEmployee\" class=\"p-6\">\r\n            <div class=\"grid grid-cols-2 gap-6\">\r\n              <div v-for=\"(value, key) in newEmployee\" :key=\"key\" class=\"space-y-2\">\r\n                <label :for=\"key\" class=\"block text-sm font-medium text-gray-700\">\r\n                  {{ key.charAt(0).toUpperCase() + key.slice(1) }}\r\n                </label>\r\n                <input v-model=\"newEmployee[key]\" \r\n                       :type=\"key === 'email' ? 'email' : key === 'salary' ? 'number' : 'text'\"\r\n                       :id=\"key\"\r\n                       class=\"w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-indigo-500 \r\n                              focus:border-indigo-500 outline-none transition duration-200\"\r\n                       required>\r\n              </div>\r\n              <div class=\"space-y-2\">\r\n                <label :for=\"key\" class=\"block text-sm font-medium text-gray-700\">\r\n                  Position\r\n                </label>\r\n                <select v-model=\"newEmployee.position\"\r\n                        id=\"position\"\r\n                        class=\"w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-indigo-500 \r\n                               focus:border-indigo-500 outline-none transition duration-200\" required>\r\n                  <option v-for=\"position in adminPositions\" :key=\"position\" :value=\"position\">\r\n                    {{ position }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex justify-end gap-3 mt-6\">\r\n              <button type=\"button\" \r\n                      @click=\"showAddModal = false\"\r\n                      class=\"px-6 py-2.5 border border-gray-300 rounded-lg text-gray-700 font-medium \r\n                             hover:bg-gray-50 transition duration-200\">\r\n                Cancel\r\n              </button>\r\n              <button type=\"submit\"\r\n                      class=\"px-6 py-2.5 bg-indigo-600 text-white font-medium rounded-lg \r\n                             hover:bg-indigo-700 transition duration-200\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        showAddModal: false,\r\n        selectedEmployee: null,\r\n        newEmployee: {\r\n          firstName: '',\r\n          lastName: '',\r\n          birthday: '',\r\n          hireDate: '',\r\n          position: '',\r\n          civilStatus: '',\r\n          contactInfo: '',\r\n          email: '',\r\n          sss: '',\r\n          philhealth: '',\r\n          hdmf: '',\r\n          salary: ''\r\n        },\r\n        adminPositions: ['Software Engineer', 'Project Manager', 'HR Specialist', 'Marketing Manager'],  // Admin-created positions\r\n        employees: [\r\n          {\r\n            id: 'EMP001',\r\n            firstName: 'John',\r\n            lastName: 'Doe',\r\n            birthday: '1985-10-15',\r\n            hireDate: '2015-04-23',\r\n            position: 'Software Engineer',\r\n            salary: 60000,\r\n            deductions: { sss: 500, philhealth: 200, pagibig: 100, tax: 1000 },\r\n            earnings: { travelExpenses: 200, otherEarnings: 300 },\r\n            contactInfo: '123-456-7890',\r\n            email: 'john.doe@example.com'\r\n          },\r\n          {\r\n            id: 'EMP002',\r\n            firstName: 'Jane',\r\n            lastName: 'Smith',\r\n            birthday: '1990-08-30',\r\n            hireDate: '2016-07-01',\r\n            position: 'Project Manager',\r\n            salary: 80000,\r\n            deductions: { sss: 600, philhealth: 250, pagibig: 150, tax: 1500 },\r\n            earnings: { travelExpenses: 250, otherEarnings: 400 },\r\n            contactInfo: '987-654-3210',\r\n            email: 'jane.smith@example.com'\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    computed: {\r\n      totalDeductions() {\r\n        return this.selectedEmployee ? Object.values(this.selectedEmployee.deductions).reduce((a, b) => a + b, 0) : 0;\r\n      },\r\n      totalEarnings() {\r\n        return this.selectedEmployee ? Object.values(this.selectedEmployee.earnings).reduce((a, b) => a + b, 0) : 0;\r\n      },\r\n      netSalary() {\r\n        return this.selectedEmployee ? (this.selectedEmployee.salary + this.totalEarnings - this.totalDeductions) : 0;\r\n      }\r\n    },\r\n    methods: {\r\n      viewEmployeeDetails(employee) {\r\n        this.selectedEmployee = employee;\r\n      },\r\n      generatePayslip(employee) {\r\n        // Placeholder: implement payslip generation logic\r\n        alert(`Payslip generated for ${employee.firstName} ${employee.lastName}`);\r\n      },\r\n      sendPayslipToEmail(employee) {\r\n        // Placeholder: implement logic to send payslip to email\r\n        alert(`Payslip sent to ${employee.email}`);\r\n      },\r\n      addEmployee() {\r\n        if (this.newEmployee.firstName && this.newEmployee.lastName && this.newEmployee.position && this.newEmployee.salary && this.newEmployee.email) {\r\n          this.employees.push({ ...this.newEmployee });\r\n          this.newEmployee = { firstName: '', lastName: '', birthday: '', hireDate: '', position: '', civilStatus: '', contactInfo: '', email: '', sss: '', philhealth: '', hdmf: '', salary: '' };\r\n          this.showAddModal = false;\r\n        }\r\n      },\r\n      editEmployee(employee) {\r\n        // Placeholder: edit employee logic\r\n      },\r\n      removeEmployee(id) {\r\n        this.employees = this.employees.filter(employee => employee.id !== id);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}