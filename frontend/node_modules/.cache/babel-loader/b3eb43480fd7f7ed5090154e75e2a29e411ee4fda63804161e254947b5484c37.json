{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedDate: new Date().toISOString().split('T')[0],\n      attendanceRecords: [],\n      statusMessage: ''\n    };\n  },\n  computed: {\n    filteredAttendance() {\n      return this.attendanceRecords.filter(record => record.date === this.selectedDate);\n    }\n  },\n  created() {\n    this.fetchAttendance();\n  },\n  methods: {\n    async fetchAttendance() {\n      try {\n        const response = await axios.get(`http://localhost:7777/api/attendance?date=${this.selectedDate}`);\n        this.attendanceRecords = response.data || [];\n      } catch (error) {\n        console.error('Error fetching attendance:', error);\n        this.showErrorMessage('Failed to load attendance records.');\n      }\n    },\n    showSuccessMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => this.statusMessage = '', 3000);\n    },\n    showErrorMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => this.statusMessage = '', 3000);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedDate","Date","toISOString","split","attendanceRecords","statusMessage","computed","filteredAttendance","filter","record","date","created","fetchAttendance","methods","response","get","error","console","showErrorMessage","showSuccessMessage","message","setTimeout"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\EmployeeAttendance.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen bg-gray-50 p-4\">\r\n      <!-- Calendar Selection -->\r\n      <div class=\"bg-white p-4 rounded-lg shadow-md max-w-xs w-full mb-6\">\r\n        <label for=\"attendanceDate\" class=\"block text-gray-700 font-medium text-sm mb-1\">Select Date</label>\r\n        <input type=\"date\" v-model=\"selectedDate\" id=\"attendanceDate\"\r\n               class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\"\r\n               @change=\"fetchAttendance\">\r\n      </div>\r\n  \r\n      <!-- Employees Information -->\r\n      <div class=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        <div class=\"p-3 border-b border-gray-200\">\r\n          <h2 class=\"text-lg font-semibold text-gray-700\">Employees Information</h2>\r\n        </div>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full divide-y divide-gray-200\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-6 py-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">Employee ID</th>\r\n                <th class=\"px-6 py-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                <th class=\"px-6 py-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">Position</th>\r\n                <th class=\"px-6 py-4 text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"bg-white divide-y divide-gray-200\">\r\n              <tr v-for=\"employee in filteredAttendance\" :key=\"employee.id\" class=\"hover:bg-gray-50 transition-colors\">\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">{{ employee.id }}</td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">{{ employee.name }}</td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">{{ employee.position }}</td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">{{ employee.status }}</td>\r\n              </tr>\r\n              <tr v-if=\"filteredAttendance.length === 0\">\r\n                <td colspan=\"4\" class=\"px-6 py-4 text-center text-sm text-gray-500\">No attendance records for this date.</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Status Message -->\r\n      <div v-if=\"statusMessage\" \r\n           :class=\"statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\"\r\n           class=\"fixed bottom-4 right-4 p-4 rounded-lg shadow-md z-50\">\r\n        {{ statusMessage }}\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedDate: new Date().toISOString().split('T')[0],\r\n        attendanceRecords: [],\r\n        statusMessage: ''\r\n      };\r\n    },\r\n    computed: {\r\n      filteredAttendance() {\r\n        return this.attendanceRecords.filter(record => record.date === this.selectedDate);\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchAttendance();\r\n    },\r\n    methods: {\r\n      async fetchAttendance() {\r\n        try {\r\n          const response = await axios.get(`http://localhost:7777/api/attendance?date=${this.selectedDate}`);\r\n          this.attendanceRecords = response.data || [];\r\n        } catch (error) {\r\n          console.error('Error fetching attendance:', error);\r\n          this.showErrorMessage('Failed to load attendance records.');\r\n        }\r\n      },\r\n      showSuccessMessage(message) {\r\n        this.statusMessage = message;\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n      },\r\n      showErrorMessage(message) {\r\n        this.statusMessage = message;\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .transition-colors {\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n  </style>"],"mappings":";;AAkDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpDC,iBAAiB,EAAE,EAAE;MACrBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACH,iBAAiB,CAACI,MAAM,CAACC,MAAK,IAAKA,MAAM,CAACC,IAAG,KAAM,IAAI,CAACV,YAAY,CAAC;IACnF;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,6CAA6C,IAAI,CAACf,YAAY,EAAE,CAAC;QAClG,IAAI,CAACI,iBAAgB,GAAIU,QAAQ,CAACf,IAAG,IAAK,EAAE;MAC9C,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,IAAI,CAACE,gBAAgB,CAAC,oCAAoC,CAAC;MAC7D;IACF,CAAC;IACDC,kBAAkBA,CAACC,OAAO,EAAE;MAC1B,IAAI,CAACf,aAAY,GAAIe,OAAO;MAC5BC,UAAU,CAAC,MAAM,IAAI,CAAChB,aAAY,GAAI,EAAE,EAAE,IAAI,CAAC;IACjD,CAAC;IACDa,gBAAgBA,CAACE,OAAO,EAAE;MACxB,IAAI,CAACf,aAAY,GAAIe,OAAO;MAC5BC,UAAU,CAAC,MAAM,IAAI,CAAChB,aAAY,GAAI,EAAE,EAAE,IAAI,CAAC;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}