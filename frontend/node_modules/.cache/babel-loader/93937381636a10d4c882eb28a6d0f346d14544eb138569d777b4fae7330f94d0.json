{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  name: 'EmployeeDashboard',\n  data() {\n    return {\n      employeeData: {\n        name: '',\n        employeeId: '',\n        position: '',\n        earnings: [],\n        deductions: [],\n        attendance: []\n      },\n      attendanceRecords: [],\n      totalAbsences: 0,\n      totalLate: 0,\n      totalOnTime: 0,\n      isTimedIn: false,\n      isLoading: false\n    };\n  },\n  computed: {\n    employeeInitials() {\n      return this.employeeData.name ? this.employeeData.name.split(' ').map(word => word[0]).join('').toUpperCase() : '';\n    },\n    currentPayPeriod() {\n      const now = new Date();\n      return `${now.toLocaleString('default', {\n        month: 'long'\n      })} 1-15, ${now.getFullYear()}`;\n    },\n    totalEarnings() {\n      return this.employeeData.earnings?.reduce((sum, item) => sum + item.amount, 0) || 0;\n    },\n    totalDeductions() {\n      return this.employeeData.deductions?.reduce((sum, item) => sum + item.amount, 0) || 0;\n    },\n    netSalary() {\n      return this.totalEarnings - this.totalDeductions;\n    }\n  },\n  methods: {\n    async fetchEmployeeData() {\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) {\n          throw new Error('No user ID found in localStorage');\n        }\n        const response = await axios.get(`http://localhost:7777/api/employees/${userId}`);\n        this.employeeData = response.data || {};\n        this.attendanceRecords = response.data.attendance || [];\n\n        // Check today's record to determine if employee is timed in\n        const today = new Date().toISOString().split('T')[0];\n        const todayRecord = this.attendanceRecords.find(record => record.date === today);\n        this.isTimedIn = todayRecord && todayRecord.timeIn && !todayRecord.timeOut;\n        this.totalAbsences = response.data.totalAbsences || 0;\n        this.totalLate = response.data.totalLate || 0;\n        this.totalOnTime = response.data.totalOnTime || 0;\n      } catch (error) {\n        console.error('Error fetching employee data:', error);\n        alert('Failed to load employee data. Please try again.');\n      }\n    },\n    async timeIn() {\n      this.isLoading = true;\n      try {\n        const userId = this.employeeData.employeeId;\n        const response = await axios.post(`http://localhost:7777/api/employees/time-in`, {\n          userId,\n          time: new Date().toISOString()\n        });\n        if (response.status === 200) {\n          await this.fetchEmployeeData();\n          this.isTimedIn = true;\n          alert('Successfully timed in!');\n        }\n      } catch (error) {\n        console.error('Error during Time In:', error);\n        alert('Failed to record Time In. Please try again.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async timeOut() {\n      this.isLoading = true;\n      try {\n        const userId = this.employeeData.employeeId;\n        const response = await axios.post(`http://localhost:7777/api/employees/time-out`, {\n          userId,\n          time: new Date().toISOString()\n        });\n        if (response.status === 200) {\n          await this.fetchEmployeeData();\n          this.isTimedIn = false;\n          alert('Successfully timed out!');\n        }\n      } catch (error) {\n        console.error('Error during Time Out:', error);\n        alert('Failed to record Time Out. Please try again.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    getStatusClass(status) {\n      switch (status?.toLowerCase()) {\n        case 'on time':\n          return 'text-green-600 font-medium';\n        case 'late':\n          return 'text-yellow-600 font-medium';\n        case 'absent':\n          return 'text-red-600 font-medium';\n        default:\n          return 'text-gray-600';\n      }\n    }\n  },\n  async created() {\n    await this.fetchEmployeeData();\n  }\n};","map":{"version":3,"names":["axios","name","data","employeeData","employeeId","position","earnings","deductions","attendance","attendanceRecords","totalAbsences","totalLate","totalOnTime","isTimedIn","isLoading","computed","employeeInitials","split","map","word","join","toUpperCase","currentPayPeriod","now","Date","toLocaleString","month","getFullYear","totalEarnings","reduce","sum","item","amount","totalDeductions","netSalary","methods","fetchEmployeeData","userId","localStorage","getItem","Error","response","get","today","toISOString","todayRecord","find","record","date","timeIn","timeOut","error","console","alert","post","time","status","getStatusClass","toLowerCase","created"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\employee\\EmployeeDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n    <div class=\"p-4\">\r\n      <!-- Employee Info Header -->\r\n      <div class=\"mb-6 bg-white rounded-xl shadow-sm p-6\">\r\n        <div class=\"flex items-center space-x-4\">\r\n          <div class=\"h-12 w-12 rounded-full bg-blue-100 flex items-center justify-center\">\r\n            <span class=\"text-blue-600 font-semibold text-lg\">{{ employeeInitials }}</span>\r\n          </div>\r\n          <div>\r\n            <h1 class=\"text-xl font-bold text-gray-800\">{{ employeeData.name }}</h1>\r\n            <p class=\"text-sm text-gray-500\">ID: {{ employeeData.employeeId }} | {{ employeeData.position }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        <!-- Dashboard Content -->\r\n        <div class=\"lg:col-span-3 space-y-6\">\r\n          <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div class=\"flex justify-between items-center\">\r\n              <div class=\"text-sm text-gray-500\">\r\n                Current Pay Period: {{ currentPayPeriod }}\r\n              </div>\r\n              <div class=\"flex space-x-3\">\r\n                <button \r\n                  @click=\"timeIn\" \r\n                  class=\"bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 transition-colors duration-200 shadow-sm disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                  :disabled=\"isTimedIn || isLoading\"\r\n                >\r\n                  {{ isLoading && !isTimedIn ? 'Processing...' : 'Time In' }}\r\n                </button>\r\n                <button \r\n                  @click=\"timeOut\" \r\n                  class=\"bg-rose-500 text-white px-4 py-2 rounded-lg hover:bg-rose-600 transition-colors duration-200 shadow-sm disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                  :disabled=\"!isTimedIn || isLoading\"\r\n                >\r\n                  {{ isLoading && isTimedIn ? 'Processing...' : 'Time Out' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Attendance Table -->\r\n          <div class=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n            <div class=\"p-6 border-b border-gray-100\">\r\n              <h2 class=\"text-lg font-semibold text-gray-800\">My Attendance Records</h2>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full divide-y divide-gray-200\">\r\n                <thead class=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time In</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time Out</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                  <tr v-for=\"record in attendanceRecords\" :key=\"record.id\" class=\"hover:bg-gray-50\">\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.date }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeIn || '--' }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeOut || '--' }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                      <span :class=\"getStatusClass(record.status)\">\r\n                        {{ record.status }}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Salary Section -->\r\n        <div class=\"lg:col-span-1\">\r\n          <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <h2 class=\"text-lg font-semibold text-gray-800\">Salary Details</h2>\r\n            <div class=\"pt-4 border-t-2 border-gray-200\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-base font-semibold text-gray-800\">Net Salary</span>\r\n                <span class=\"text-lg font-bold text-blue-600\">â‚±{{ netSalary.toLocaleString() }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeDashboard',\r\n  data() {\r\n    return {\r\n      employeeData: {\r\n        name: '',\r\n        employeeId: '',\r\n        position: '',\r\n        earnings: [],\r\n        deductions: [],\r\n        attendance: []\r\n      },\r\n      attendanceRecords: [],\r\n      totalAbsences: 0,\r\n      totalLate: 0,\r\n      totalOnTime: 0,\r\n      isTimedIn: false,\r\n      isLoading: false\r\n    };\r\n  },\r\n  computed: {\r\n    employeeInitials() {\r\n      return this.employeeData.name\r\n        ? this.employeeData.name.split(' ').map(word => word[0]).join('').toUpperCase()\r\n        : '';\r\n    },\r\n    currentPayPeriod() {\r\n      const now = new Date();\r\n      return `${now.toLocaleString('default', { month: 'long' })} 1-15, ${now.getFullYear()}`;\r\n    },\r\n    totalEarnings() {\r\n      return this.employeeData.earnings?.reduce((sum, item) => sum + item.amount, 0) || 0;\r\n    },\r\n    totalDeductions() {\r\n      return this.employeeData.deductions?.reduce((sum, item) => sum + item.amount, 0) || 0;\r\n    },\r\n    netSalary() {\r\n      return this.totalEarnings - this.totalDeductions;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchEmployeeData() {\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) {\r\n          throw new Error('No user ID found in localStorage');\r\n        }\r\n        \r\n        const response = await axios.get(`http://localhost:7777/api/employees/${userId}`);\r\n        this.employeeData = response.data || {};\r\n        this.attendanceRecords = response.data.attendance || [];\r\n        \r\n        // Check today's record to determine if employee is timed in\r\n        const today = new Date().toISOString().split('T')[0];\r\n        const todayRecord = this.attendanceRecords.find(record => record.date === today);\r\n        this.isTimedIn = todayRecord && todayRecord.timeIn && !todayRecord.timeOut;\r\n\r\n        this.totalAbsences = response.data.totalAbsences || 0;\r\n        this.totalLate = response.data.totalLate || 0;\r\n        this.totalOnTime = response.data.totalOnTime || 0;\r\n      } catch (error) {\r\n        console.error('Error fetching employee data:', error);\r\n        alert('Failed to load employee data. Please try again.');\r\n      }\r\n    },\r\n    async timeIn() {\r\n      this.isLoading = true;\r\n      try {\r\n        const userId = this.employeeData.employeeId;\r\n        const response = await axios.post(`http://localhost:7777/api/employees/time-in`, { \r\n          userId,\r\n          time: new Date().toISOString()\r\n        });\r\n        \r\n        if (response.status === 200) {\r\n          await this.fetchEmployeeData();\r\n          this.isTimedIn = true;\r\n          alert('Successfully timed in!');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during Time In:', error);\r\n        alert('Failed to record Time In. Please try again.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async timeOut() {\r\n      this.isLoading = true;\r\n      try {\r\n        const userId = this.employeeData.employeeId;\r\n        const response = await axios.post(`http://localhost:7777/api/employees/time-out`, { \r\n          userId,\r\n          time: new Date().toISOString()\r\n        });\r\n        \r\n        if (response.status === 200) {\r\n          await this.fetchEmployeeData();\r\n          this.isTimedIn = false;\r\n          alert('Successfully timed out!');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during Time Out:', error);\r\n        alert('Failed to record Time Out. Please try again.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    getStatusClass(status) {\r\n      switch (status?.toLowerCase()) {\r\n        case 'on time':\r\n          return 'text-green-600 font-medium';\r\n        case 'late':\r\n          return 'text-yellow-600 font-medium';\r\n        case 'absent':\r\n          return 'text-red-600 font-medium';\r\n        default:\r\n          return 'text-gray-600';\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchEmployeeData();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add some additional styling for better UX */\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.hover\\:bg-gray-50:hover {\r\n  background-color: #f9fafb;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}