{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  name: \"EmployeeHolidays\",\n  data() {\n    return {\n      currentMonthIndex: new Date().getMonth(),\n      months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      holidays: [{\n        date: \"January 1\",\n        name: \"New Year's Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 0\n      }, {\n        date: \"January 23\",\n        name: \"First Philippine Republic Day\",\n        type: \"Special Working\",\n        monthIndex: 0\n      }, {\n        date: \"February 25\",\n        name: \"EDSA People Power Revolution\",\n        type: \"Special Non-Working\",\n        monthIndex: 1\n      }, {\n        date: \"March 31\",\n        name: \"Holi Festival (Hindu Community)\",\n        type: \"Special Working\",\n        monthIndex: 2\n      }, {\n        date: \"April 6\",\n        name: \"Maundy Thursday\",\n        type: \"Regular Holiday\",\n        monthIndex: 3\n      }, {\n        date: \"April 7\",\n        name: \"Good Friday\",\n        type: \"Regular Holiday\",\n        monthIndex: 3\n      }, {\n        date: \"April 9\",\n        name: \"Araw ng Kagitingan\",\n        type: \"Regular Holiday\",\n        monthIndex: 3\n      }, {\n        date: \"May 1\",\n        name: \"Labor Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 4\n      }, {\n        date: \"June 12\",\n        name: \"Independence Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 5\n      }, {\n        date: \"July 6\",\n        name: \"Eid'l Adha (Feast of Sacrifice)\",\n        type: \"Regular Holiday\",\n        monthIndex: 6\n      }, {\n        date: \"August 21\",\n        name: \"Ninoy Aquino Day\",\n        type: \"Special Non-Working\",\n        monthIndex: 7\n      }, {\n        date: \"August 28\",\n        name: \"National Heroes Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 7\n      }, {\n        date: \"September 3\",\n        name: \"Surrender of Gen. Yamashita\",\n        type: \"Special Working\",\n        monthIndex: 8\n      }, {\n        date: \"October 31\",\n        name: \"All Saints' Day (Observance)\",\n        type: \"Special Working\",\n        monthIndex: 9\n      }, {\n        date: \"November 1\",\n        name: \"All Saints' Day\",\n        type: \"Special Non-Working\",\n        monthIndex: 10\n      }, {\n        date: \"November 2\",\n        name: \"All Souls' Day\",\n        type: \"Special Non-Working\",\n        monthIndex: 10\n      }, {\n        date: \"November 30\",\n        name: \"Bonifacio Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 10\n      }, {\n        date: \"December 8\",\n        name: \"Feast of the Immaculate Conception\",\n        type: \"Special Non-Working\",\n        monthIndex: 11\n      }, {\n        date: \"December 24\",\n        name: \"Christmas Eve\",\n        type: \"Special Non-Working\",\n        monthIndex: 11\n      }, {\n        date: \"December 25\",\n        name: \"Christmas Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 11\n      }, {\n        date: \"December 30\",\n        name: \"Rizal Day\",\n        type: \"Regular Holiday\",\n        monthIndex: 11\n      }, {\n        date: \"December 31\",\n        name: \"New Year's Eve\",\n        type: \"Special Non-Working\",\n        monthIndex: 11\n      }]\n    };\n  },\n  computed: {\n    filteredHolidays() {\n      return this.holidays.filter(h => h.monthIndex === this.currentMonthIndex);\n    }\n  },\n  methods: {\n    prevMonth() {\n      if (this.currentMonthIndex > 0) {\n        this.currentMonthIndex--;\n      }\n    },\n    nextMonth() {\n      if (this.currentMonthIndex < this.months.length - 1) {\n        this.currentMonthIndex++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","currentMonthIndex","Date","getMonth","months","holidays","date","type","monthIndex","computed","filteredHolidays","filter","h","methods","prevMonth","nextMonth","length"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\EmployeeHolidays.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-holidays\">\r\n    <div class=\"header-container\">\r\n      <!-- Month Navigation -->\r\n      <div class=\"month-navigation\">\r\n        <button @click=\"prevMonth\" :disabled=\"currentMonthIndex === 0\">◀ Prev</button>\r\n        <div class=\"month-column\">\r\n          <span>{{ months[currentMonthIndex] }}</span>\r\n        </div>\r\n        <button @click=\"nextMonth\" :disabled=\"currentMonthIndex === months.length - 1\">Next ▶</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Holiday Boxes -->\r\n    <div class=\"holidays-container\">\r\n      <h2>{{ months[currentMonthIndex] }} Holidays</h2>\r\n      <div v-if=\"filteredHolidays.length > 0\" class=\"holiday-grid\">\r\n        <div v-for=\"(holiday, index) in filteredHolidays\" :key=\"index\" class=\"holiday-box\">\r\n          <strong>{{ holiday.date }}</strong>\r\n          <p>{{ holiday.name }}</p>\r\n          <span :class=\"holiday.type === 'Regular Holiday' ? 'holiday-type regular' : 'holiday-type special'\">\r\n            {{ holiday.type }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <p v-else>No holidays this month.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"EmployeeHolidays\",\r\n  data() {\r\n    return {\r\n      currentMonthIndex: new Date().getMonth(),\r\n      months: [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n      ],\r\n      holidays: [\r\n        { date: \"January 1\", name: \"New Year's Day\", type: \"Regular Holiday\", monthIndex: 0 },\r\n        { date: \"January 23\", name: \"First Philippine Republic Day\", type: \"Special Working\", monthIndex: 0 },\r\n        { date: \"February 25\", name: \"EDSA People Power Revolution\", type: \"Special Non-Working\", monthIndex: 1 },\r\n        { date: \"March 31\", name: \"Holi Festival (Hindu Community)\", type: \"Special Working\", monthIndex: 2 },\r\n        { date: \"April 6\", name: \"Maundy Thursday\", type: \"Regular Holiday\", monthIndex: 3 },\r\n        { date: \"April 7\", name: \"Good Friday\", type: \"Regular Holiday\", monthIndex: 3 },\r\n        { date: \"April 9\", name: \"Araw ng Kagitingan\", type: \"Regular Holiday\", monthIndex: 3 },\r\n        { date: \"May 1\", name: \"Labor Day\", type: \"Regular Holiday\", monthIndex: 4 },\r\n        { date: \"June 12\", name: \"Independence Day\", type: \"Regular Holiday\", monthIndex: 5 },\r\n        { date: \"July 6\", name: \"Eid'l Adha (Feast of Sacrifice)\", type: \"Regular Holiday\", monthIndex: 6 },\r\n        { date: \"August 21\", name: \"Ninoy Aquino Day\", type: \"Special Non-Working\", monthIndex: 7 },\r\n        { date: \"August 28\", name: \"National Heroes Day\", type: \"Regular Holiday\", monthIndex: 7 },\r\n        { date: \"September 3\", name: \"Surrender of Gen. Yamashita\", type: \"Special Working\", monthIndex: 8 },\r\n        { date: \"October 31\", name: \"All Saints' Day (Observance)\", type: \"Special Working\", monthIndex: 9 },\r\n        { date: \"November 1\", name: \"All Saints' Day\", type: \"Special Non-Working\", monthIndex: 10 },\r\n        { date: \"November 2\", name: \"All Souls' Day\", type: \"Special Non-Working\", monthIndex: 10 },\r\n        { date: \"November 30\", name: \"Bonifacio Day\", type: \"Regular Holiday\", monthIndex: 10 },\r\n        { date: \"December 8\", name: \"Feast of the Immaculate Conception\", type: \"Special Non-Working\", monthIndex: 11 },\r\n        { date: \"December 24\", name: \"Christmas Eve\", type: \"Special Non-Working\", monthIndex: 11 },\r\n        { date: \"December 25\", name: \"Christmas Day\", type: \"Regular Holiday\", monthIndex: 11 },\r\n        { date: \"December 30\", name: \"Rizal Day\", type: \"Regular Holiday\", monthIndex: 11 },\r\n        { date: \"December 31\", name: \"New Year's Eve\", type: \"Special Non-Working\", monthIndex: 11 },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredHolidays() {\r\n      return this.holidays.filter(h => h.monthIndex === this.currentMonthIndex);\r\n    }\r\n  },\r\n  methods: {\r\n    prevMonth() {\r\n      if (this.currentMonthIndex > 0) {\r\n        this.currentMonthIndex--;\r\n      }\r\n    },\r\n    nextMonth() {\r\n      if (this.currentMonthIndex < this.months.length - 1) {\r\n        this.currentMonthIndex++;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.employee-holidays {\r\n  text-align: left;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n/* Header Container */\r\n.header-container {\r\n  display: flex;\r\n  justify-content: flex-start; /* Move to the left */\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n}\r\n\r\n/* Month Navigation */\r\n.month-navigation {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start; /* Move buttons to the left */\r\n}\r\n\r\n.month-navigation button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.month-navigation button:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Month Column */\r\n.month-column {\r\n  background: #f0f0f0;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  min-width: 120px;\r\n  text-align: center;\r\n  margin: 0 10px;\r\n}\r\n\r\n/* Holiday Containers */\r\n.holidays-container {\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n  width: 80%;\r\n  margin-left: 0; /* Align to left */\r\n}\r\n\r\n\r\n/* Holiday Grid */\r\n.holiday-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Individual Holiday Boxes */\r\n.holiday-box {\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  transition: transform 0.2s ease-in-out;\r\n}\r\n\r\n/* .holiday-box:hover {\r\n  transform: scale(1.05);\r\n} */\r\n\r\n.holiday-box strong {\r\n  font-size: 18px;\r\n  color: #007bff;\r\n}\r\n\r\n.holiday-box p {\r\n  font-size: 16px;\r\n  margin: 5px 0;\r\n}\r\n\r\n/* Holiday Type Styling */\r\n.holiday-type {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border-radius: 15px;\r\n  display: inline-block;\r\n  margin-top: 5px;\r\n}\r\n\r\n.holiday-type.regular {\r\n  background: #28a745;\r\n}\r\n\r\n.holiday-type.special {\r\n  background: #ff5733;\r\n}\r\n</style>\r\n"],"mappings":";;AA+BA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACxCC,MAAM,EAAE,CACN,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAS,CAChE;MACDC,QAAQ,EAAE,CACR;QAAEC,IAAI,EAAE,WAAW;QAAEP,IAAI,EAAE,gBAAgB;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACrF;QAAEF,IAAI,EAAE,YAAY;QAAEP,IAAI,EAAE,+BAA+B;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACrG;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,8BAA8B;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACzG;QAAEF,IAAI,EAAE,UAAU;QAAEP,IAAI,EAAE,iCAAiC;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACrG;QAAEF,IAAI,EAAE,SAAS;QAAEP,IAAI,EAAE,iBAAiB;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACpF;QAAEF,IAAI,EAAE,SAAS;QAAEP,IAAI,EAAE,aAAa;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EAChF;QAAEF,IAAI,EAAE,SAAS;QAAEP,IAAI,EAAE,oBAAoB;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACvF;QAAEF,IAAI,EAAE,OAAO;QAAEP,IAAI,EAAE,WAAW;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EAC5E;QAAEF,IAAI,EAAE,SAAS;QAAEP,IAAI,EAAE,kBAAkB;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACrF;QAAEF,IAAI,EAAE,QAAQ;QAAEP,IAAI,EAAE,iCAAiC;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACnG;QAAEF,IAAI,EAAE,WAAW;QAAEP,IAAI,EAAE,kBAAkB;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAE,CAAC,EAC3F;QAAEF,IAAI,EAAE,WAAW;QAAEP,IAAI,EAAE,qBAAqB;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EAC1F;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,6BAA6B;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACpG;QAAEF,IAAI,EAAE,YAAY;QAAEP,IAAI,EAAE,8BAA8B;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAE,CAAC,EACpG;QAAEF,IAAI,EAAE,YAAY;QAAEP,IAAI,EAAE,iBAAiB;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAG,CAAC,EAC5F;QAAEF,IAAI,EAAE,YAAY;QAAEP,IAAI,EAAE,gBAAgB;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAG,CAAC,EAC3F;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,eAAe;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAG,CAAC,EACvF;QAAEF,IAAI,EAAE,YAAY;QAAEP,IAAI,EAAE,oCAAoC;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAG,CAAC,EAC/G;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,eAAe;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAG,CAAC,EAC3F;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,eAAe;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAG,CAAC,EACvF;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,WAAW;QAAEQ,IAAI,EAAE,iBAAiB;QAAEC,UAAU,EAAE;MAAG,CAAC,EACnF;QAAEF,IAAI,EAAE,aAAa;QAAEP,IAAI,EAAE,gBAAgB;QAAEQ,IAAI,EAAE,qBAAqB;QAAEC,UAAU,EAAE;MAAG,CAAC;IAEhG,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACL,QAAQ,CAACM,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACJ,UAAS,KAAM,IAAI,CAACP,iBAAiB,CAAC;IAC3E;EACF,CAAC;EACDY,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACb,iBAAgB,GAAI,CAAC,EAAE;QAC9B,IAAI,CAACA,iBAAiB,EAAE;MAC1B;IACF,CAAC;IACDc,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACd,iBAAgB,GAAI,IAAI,CAACG,MAAM,CAACY,MAAK,GAAI,CAAC,EAAE;QACnD,IAAI,CAACf,iBAAiB,EAAE;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}