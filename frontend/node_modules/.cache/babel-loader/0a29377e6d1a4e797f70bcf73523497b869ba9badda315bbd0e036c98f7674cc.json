{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'EmployeeLogin',\n  data() {\n    return {\n      loginData: {\n        username: '',\n        password: ''\n      },\n      newEmployee: {\n        firstName: '',\n        lastName: '',\n        birthday: '',\n        hireDate: '',\n        position: '',\n        civilStatus: '',\n        contactNumber: '',\n        email: '',\n        username: '',\n        password: ''\n      },\n      loginError: '',\n      showRegisterModal: false\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:5000/api/login', this.loginData);\n        if (response.data.success) {\n          alert('Login successful!');\n          this.$router.push('/dashboard'); // Redirect to dashboard\n        } else {\n          this.loginError = 'Invalid credentials, please try again.';\n        }\n      } catch (error) {\n        console.error('Login failed:', error);\n        this.loginError = 'Login failed. Please try again.';\n      }\n    },\n    async register() {\n      try {\n        const response = await axios.post('http://localhost:5000/api/register', this.newEmployee);\n        if (response.status === 201) {\n          alert('Registration successful!');\n          this.showRegisterModal = false;\n        }\n      } catch (error) {\n        console.error('Failed to register:', error);\n        alert('Registration failed. Please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginData","username","password","newEmployee","firstName","lastName","birthday","hireDate","position","civilStatus","contactNumber","email","loginError","showRegisterModal","methods","login","response","post","success","alert","$router","push","error","console","register","status"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\components\\employeelogin\\EmployeeLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-cyan-100 flex items-center justify-center p-4\">\r\n    <div class=\"w-full max-w-md\">\r\n      <div class=\"bg-white/80 backdrop-blur-lg rounded-2xl shadow-xl p-8 space-y-6\">\r\n        <div class=\"text-center space-y-2\">\r\n          <div class=\"bg-blue-500 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-8 h-8 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n            </svg>\r\n          </div>\r\n          <h1 class=\"text-2xl font-bold text-gray-900\">Employee Portal</h1>\r\n          <p class=\"text-gray-500 text-sm\">Welcome to your workspace</p>\r\n        </div>\r\n\r\n        <form @submit.prevent=\"login\" class=\"space-y-4\">\r\n          <div class=\"space-y-1\">\r\n            <label for=\"username\" class=\"text-sm font-medium text-gray-700\">Username or Email</label>\r\n            <input v-model=\"loginData.username\" type=\"text\" id=\"username\" class=\"block w-full p-2 border rounded-lg\" placeholder=\"Enter your username or email\" required>\r\n          </div>\r\n\r\n          <div class=\"space-y-1\">\r\n            <label for=\"password\" class=\"text-sm font-medium text-gray-700\">Password</label>\r\n            <input v-model=\"loginData.password\" type=\"password\" id=\"password\" class=\"block w-full p-2 border rounded-lg\" placeholder=\"Enter your password\" required>\r\n          </div>\r\n\r\n          <div v-if=\"loginError\" class=\"text-red-500 text-sm text-center\">\r\n            {{ loginError }}\r\n          </div>\r\n\r\n          <button type=\"submit\" class=\"w-full bg-blue-500 text-white py-2.5 rounded-lg\">Sign in</button>\r\n        </form>\r\n\r\n        <div class=\"text-center\">\r\n          <p class=\"text-sm text-gray-700\">Don't have an account? <a href=\"#\" @click=\"showRegisterModal = true\" class=\"text-blue-500 hover:underline\">Create an account</a></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Register Modal -->\r\n    <div v-if=\"showRegisterModal\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div class=\"bg-white p-8 rounded shadow-md w-full max-w-4xl\">\r\n        <h2 class=\"text-2xl font-bold mb-4\">Create an Account</h2>\r\n        <form @submit.prevent=\"register\" class=\"grid grid-cols-3 gap-4\">\r\n          <input v-model=\"newEmployee.firstName\" type=\"text\" placeholder=\"First Name\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.lastName\" type=\"text\" placeholder=\"Last Name\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.birthday\" type=\"date\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.hireDate\" type=\"date\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.position\" type=\"text\" placeholder=\"Position\" class=\"border p-2 rounded\" required>\r\n          <select v-model=\"newEmployee.civilStatus\" class=\"border p-2 rounded\" required>\r\n            <option value=\"\" disabled selected>Civil Status</option>\r\n            <option value=\"Single\">Single</option>\r\n            <option value=\"Married\">Married</option>\r\n            <option value=\"Divorced\">Divorced</option>\r\n            <option value=\"Widowed\">Widowed</option>\r\n          </select>\r\n          <input v-model=\"newEmployee.email\" type=\"email\" placeholder=\"Email\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.contactNumber\" type=\"text\" placeholder=\"Contact Number\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.username\" type=\"text\" placeholder=\"Username\" class=\"border p-2 rounded\" required>\r\n          <input v-model=\"newEmployee.password\" type=\"password\" placeholder=\"Password (min 8 characters)\" class=\"border p-2 rounded\" required minlength=\"8\">\r\n          \r\n          <div class=\"col-span-3 flex justify-end space-x-2\">\r\n            <button type=\"button\" @click=\"showRegisterModal = false\" class=\"bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-700\">Cancel</button>\r\n            <button type=\"submit\" class=\"bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-700\">Create Account</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeLogin',\r\n  data() {\r\n    return {\r\n      loginData: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      newEmployee: {\r\n        firstName: '',\r\n        lastName: '',\r\n        birthday: '',\r\n        hireDate: '',\r\n        position: '',\r\n        civilStatus: '',\r\n        contactNumber: '',\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n      },\r\n      loginError: '',\r\n      showRegisterModal: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/login', this.loginData);\r\n        if (response.data.success) {\r\n          alert('Login successful!');\r\n          this.$router.push('/dashboard'); // Redirect to dashboard\r\n        } else {\r\n          this.loginError = 'Invalid credentials, please try again.';\r\n        }\r\n      } catch (error) {\r\n        console.error('Login failed:', error);\r\n        this.loginError = 'Login failed. Please try again.';\r\n      }\r\n    },\r\n    async register() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/register', this.newEmployee);\r\n        if (response.status === 201) {\r\n          alert('Registration successful!');\r\n          this.showRegisterModal = false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to register:', error);\r\n        alert('Registration failed. Please try again.');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-enter-active,\r\n.modal-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n.modal-enter-from,\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"mappings":";AAuEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE;QACXC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,aAAa,EAAE,EAAE;QACjBC,KAAK,EAAE,EAAE;QACTV,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDU,UAAU,EAAE,EAAE;MACdC,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACjB,SAAS,CAAC;QACpF,IAAIgB,QAAQ,CAACjB,IAAI,CAACmB,OAAO,EAAE;UACzBC,KAAK,CAAC,mBAAmB,CAAC;UAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE;QACnC,OAAO;UACL,IAAI,CAACT,UAAS,GAAI,wCAAwC;QAC5D;MACF,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrC,IAAI,CAACV,UAAS,GAAI,iCAAiC;MACrD;IACF,CAAC;IACD,MAAMY,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAE,IAAI,CAACd,WAAW,CAAC;QACzF,IAAIa,QAAQ,CAACS,MAAK,KAAM,GAAG,EAAE;UAC3BN,KAAK,CAAC,0BAA0B,CAAC;UACjC,IAAI,CAACN,iBAAgB,GAAI,KAAK;QAChC;MACF,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CH,KAAK,CAAC,wCAAwC,CAAC;MACjD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}