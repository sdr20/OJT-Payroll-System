{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-6xl mx-auto\"\n};\nconst _hoisted_3 = {\n  class: \"bg-white p-5 rounded-xl shadow-md\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-center text-gray-500\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"text-center text-red-500\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_7 = {\n  class: \"bg-white divide-y divide-gray-200\"\n};\nconst _hoisted_8 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_9 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_10 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_11 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_12 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_13 = {\n  class: \"px-6 py-4 text-sm font-medium flex gap-2\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Table to Display Salary Slips \"), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"text-xl font-semibold text-gray-700 mb-4\"\n  }, \"Salary Slips\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Loading salary slips...\")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"table\", _hoisted_6, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-50\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Employee Name\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Earnings\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Deductions\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Net Salary\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Salary Month\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employees, employee => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employee.id\n    }, [_createElementVNode(\"td\", _hoisted_8, _toDisplayString(employee.name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, \"P \" + _toDisplayString($options.formatCurrency(employee.totalEarnings)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, \"P \" + _toDisplayString($options.formatCurrency(employee.totalDeductions)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_11, \"P \" + _toDisplayString($options.calculateNetSalary(employee)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, _toDisplayString($options.formatDate(employee.salaryMonth)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_13, [_createElementVNode(\"button\", {\n      onClick: $event => $options.generatePayslip(employee.id),\n      class: \"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\"\n    }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"span\", {\n      class: \"material-icons text-green-600\"\n    }, \"description\", -1 /* HOISTED */), _createTextVNode(\" Generate \")]))], 8 /* PROPS */, _hoisted_14), _createElementVNode(\"button\", {\n      onClick: $event => $options.sendPayslipEmail(employee.id),\n      class: \"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\"\n    }, [...(_cache[1] || (_cache[1] = [_createElementVNode(\"span\", {\n      class: \"material-icons text-blue-600\"\n    }, \"email\", -1 /* HOISTED */), _createTextVNode(\" Email \")]))], 8 /* PROPS */, _hoisted_15)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","$data","loading","_hoisted_4","error","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_Fragment","_renderList","employees","employee","id","_hoisted_8","name","_hoisted_9","$options","formatCurrency","totalEarnings","_hoisted_10","totalDeductions","_hoisted_11","calculateNetSalary","_hoisted_12","formatDate","salaryMonth","_hoisted_13","onClick","$event","generatePayslip","_createTextVNode","_hoisted_14","sendPayslipEmail","_hoisted_15"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\SalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Table to Display Salary Slips -->\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md\">\r\n        <h2 class=\"text-xl font-semibold text-gray-700 mb-4\">Salary Slips</h2>\r\n        <div v-if=\"loading\" class=\"text-center text-gray-500\">Loading salary slips...</div>\r\n        <div v-else-if=\"error\" class=\"text-center text-red-500\">{{ error }}</div>\r\n        <table v-else class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Employee Name</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Earnings</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Deductions</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Net Salary</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Salary Month</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"employee in employees\" :key=\"employee.id\">\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.name }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P {{ formatCurrency(employee.totalEarnings) }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P {{ formatCurrency(employee.totalDeductions) }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P {{ calculateNetSalary(employee) }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ formatDate(employee.salaryMonth) }}</td>\r\n              <td class=\"px-6 py-4 text-sm font-medium flex gap-2\">\r\n                <button @click=\"generatePayslip(employee.id)\" class=\"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons text-green-600\">description</span> Generate\r\n                </button>\r\n                <button @click=\"sendPayslipEmail(employee.id)\" class=\"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons text-blue-600\">email</span> Email\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SalarySlips',\r\n  data() {\r\n    return {\r\n      employees: [],\r\n      loading: true,\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchEmployees() {\r\n      try {\r\n        // Simulating API call (Replace with real API)\r\n        this.employees = [\r\n          { id: 1, name: 'John Doe', totalEarnings: 50000, totalDeductions: 5000, salaryMonth: '2025-02-20' },\r\n          { id: 2, name: 'Jane Smith', totalEarnings: 60000, totalDeductions: 7000, salaryMonth: '2025-02-22' },\r\n        ];\r\n      } catch (err) {\r\n        this.error = 'Failed to load salary slips';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    calculateNetSalary(employee) {\r\n      return this.formatCurrency(employee.totalEarnings - employee.totalDeductions);\r\n    },\r\n    formatCurrency(amount) {\r\n      return new Intl.NumberFormat('en-PH', { style: 'currency', currency: 'PHP' }).format(amount).replace('â‚±', '');\r\n    },\r\n    formatDate(date) {\r\n      return new Date(date).toLocaleDateString('en-PH', { year: 'numeric', month: 'long', day: 'numeric' });\r\n    },\r\n    generatePayslip(employeeId) {\r\n      console.log(`Generating payslip for employee ID: ${employeeId}`);\r\n      alert(`Payslip generated for Employee ID: ${employeeId}`);\r\n    },\r\n    sendPayslipEmail(employeeId) {\r\n      console.log(`Sending payslip email for employee ID: ${employeeId}`);\r\n      alert(`Payslip email sent to Employee ID: ${employeeId}`);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchEmployees();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Ensure Material Icons are loaded */\r\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}