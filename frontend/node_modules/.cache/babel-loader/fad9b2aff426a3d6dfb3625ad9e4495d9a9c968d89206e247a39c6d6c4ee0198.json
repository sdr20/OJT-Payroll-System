{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-6xl mx-auto\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PayHeadModal = _resolveComponent(\"PayHeadModal\");\n  const _component_PayHeadTable = _resolveComponent(\"PayHeadTable\");\n  const _component_EmployeePayrollTable = _resolveComponent(\"EmployeePayrollTable\");\n  const _component_AddPayheadModal = _resolveComponent(\"AddPayheadModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"mb-4 py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.showAddModal = true)\n  }, \"Add Pay Head\"), $data.showAddModal ? (_openBlock(), _createBlock(_component_PayHeadModal, {\n    key: 0,\n    onClose: _cache[1] || (_cache[1] = $event => $data.showAddModal = false),\n    onSave: $options.addPayHead,\n    payHead: $data.newPayHead\n  }, null, 8, [\"onSave\", \"payHead\"])) : _createCommentVNode(\"\", true), $data.showUpdateModal ? (_openBlock(), _createBlock(_component_PayHeadModal, {\n    key: 1,\n    onClose: _cache[2] || (_cache[2] = $event => $data.showUpdateModal = false),\n    onSave: $options.updatePayHead,\n    payHead: $data.selectedPayHead,\n    isUpdate: \"\"\n  }, null, 8, [\"onSave\", \"payHead\"])) : _createCommentVNode(\"\", true), _createVNode(_component_PayHeadTable, {\n    payHeads: $data.payHeads,\n    onUpdate: $options.showUpdatePayHeadModal,\n    onDelete: $options.deletePayHead\n  }, null, 8, [\"payHeads\", \"onUpdate\", \"onDelete\"]), _createVNode(_component_EmployeePayrollTable, {\n    employees: $data.employees,\n    onAddPayhead: $options.openAddPayheadModal\n  }, null, 8, [\"employees\", \"onAddPayhead\"]), $data.showAddPayheadModal ? (_openBlock(), _createBlock(_component_AddPayheadModal, {\n    key: 2,\n    onClose: _cache[3] || (_cache[3] = $event => $data.showAddPayheadModal = false),\n    onSave: $options.savePayheads,\n    availablePayheads: $data.availablePayheads,\n    selectedEmployeePayheads: $data.selectedEmployeePayheads,\n    onAddPayhead: $options.addPayheadToEmployee,\n    onRemovePayhead: $options.removePayheadFromEmployee,\n    totalPayableSalary: $options.totalPayableSalary\n  }, null, 8, [\"onSave\", \"availablePayheads\", \"selectedEmployeePayheads\", \"onAddPayhead\", \"onRemovePayhead\", \"totalPayableSalary\"])) : _createCommentVNode(\"\", true)]), $data.statusMessage ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([$data.statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700', \"fixed bottom-4 right-4 p-4 rounded-lg shadow-md z-50\"])\n  }, _toDisplayString($data.statusMessage), 3)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$data","showAddModal","_createBlock","_component_PayHeadModal","key","onClose","onSave","$options","addPayHead","payHead","newPayHead","_createCommentVNode","showUpdateModal","updatePayHead","selectedPayHead","isUpdate","_createVNode","_component_PayHeadTable","payHeads","onUpdate","showUpdatePayHeadModal","onDelete","deletePayHead","_component_EmployeePayrollTable","employees","onAddPayhead","openAddPayheadModal","showAddPayheadModal","_component_AddPayheadModal","savePayheads","availablePayheads","selectedEmployeePayheads","addPayheadToEmployee","onRemovePayhead","removePayheadFromEmployee","totalPayableSalary","statusMessage","_normalizeClass","includes"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\ManagePayHeads.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Add Pay Head Button -->\r\n      <button class=\"mb-4 py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\" \r\n              @click=\"showAddModal = true\">Add Pay Head</button>\r\n      \r\n      <!-- Add Pay Head Modal -->\r\n      <PayHeadModal v-if=\"showAddModal\" @close=\"showAddModal = false\" @save=\"addPayHead\" :payHead=\"newPayHead\" />\r\n\r\n      <!-- Update Pay Head Modal -->\r\n      <PayHeadModal v-if=\"showUpdateModal\" @close=\"showUpdateModal = false\" @save=\"updatePayHead\" :payHead=\"selectedPayHead\" isUpdate />\r\n\r\n      <!-- Table to Display Pay Heads -->\r\n      <PayHeadTable :payHeads=\"payHeads\" @update=\"showUpdatePayHeadModal\" @delete=\"deletePayHead\" />\r\n\r\n      <!-- Employee Payroll Information -->\r\n      <EmployeePayrollTable :employees=\"employees\" @addPayhead=\"openAddPayheadModal\" />\r\n\r\n      <!-- Add Payhead to Employee Modal -->\r\n      <AddPayheadModal v-if=\"showAddPayheadModal\" \r\n                       @close=\"showAddPayheadModal = false\" \r\n                       @save=\"savePayheads\" \r\n                       :availablePayheads=\"availablePayheads\" \r\n                       :selectedEmployeePayheads=\"selectedEmployeePayheads\" \r\n                       @addPayhead=\"addPayheadToEmployee\" \r\n                       @removePayhead=\"removePayheadFromEmployee\" \r\n                       :totalPayableSalary=\"totalPayableSalary\" />\r\n    </div>\r\n\r\n    <!-- Status Message -->\r\n    <div v-if=\"statusMessage\" \r\n         :class=\"statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\"\r\n         class=\"fixed bottom-4 right-4 p-4 rounded-lg shadow-md z-50\">\r\n      {{ statusMessage }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport PayHeadModal from '@/components/payhead/PayHeadModal.vue';\r\nimport PayHeadTable from '@/components/payhead/PayHeadTable.vue';\r\nimport EmployeePayrollTable from '@/components/payhead/EmployeePayrollTable.vue';\r\nimport AddPayheadModal from '@/components/payhead/AddPayheadModal.vue';\r\n\r\nexport default {\r\n  name: 'ManagePayHeads',\r\n  components: {\r\n    PayHeadModal,\r\n    PayHeadTable,\r\n    EmployeePayrollTable,\r\n    AddPayheadModal\r\n  },\r\n  data() {\r\n    return {\r\n      payHeads: [],\r\n      employees: [],\r\n      newPayHead: {\r\n        name: '',\r\n        amount: '',\r\n        type: 'Earnings'\r\n      },\r\n      selectedPayHead: {\r\n        id: '',\r\n        name: '',\r\n        amount: '',\r\n        type: 'Earnings'\r\n      },\r\n      showAddModal: false,\r\n      showUpdateModal: false,\r\n      showAddPayheadModal: false,\r\n      selectedEmployee: null,\r\n      selectedEmployeePayheads: [],\r\n      availablePayheads: [],\r\n      statusMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    totalPayableSalary() {\r\n      const earnings = this.selectedEmployeePayheads.filter(p => p.type === 'Earnings').reduce((sum, p) => sum + p.amount, 0);\r\n      const deductions = this.selectedEmployeePayheads.filter(p => p.type === 'Deductions').reduce((sum, p) => sum + p.amount, 0);\r\n      return earnings - deductions;\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchPayHeads();\r\n    await this.fetchEmployees();\r\n  },\r\n  methods: {\r\n    async fetchPayHeads() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/payheads');\r\n        this.payHeads = response.data || [];\r\n      } catch (error) {\r\n        console.error('Error fetching pay heads:', error);\r\n        this.showErrorMessage('Failed to fetch pay heads.');\r\n      }\r\n    },\r\n    async fetchEmployees() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees');\r\n        this.employees = response.data.map(emp => ({\r\n          ...emp,\r\n          totalEarnings: this.calculateNetSalary(emp),\r\n          totalDeduction: (emp.deductions?.sss || 0) + (emp.deductions?.philhealth || 0) + (emp.deductions?.pagibig || 0),\r\n          totalSalary: emp.salary\r\n        })) || [];\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        this.showErrorMessage('Failed to fetch employees.');\r\n      }\r\n    },\r\n    async addPayHead(payHead) {\r\n      try {\r\n        const response = await axios.post('http://localhost:7777/api/payheads', payHead);\r\n        this.payHeads.push(response.data);\r\n        this.showAddModal = false;\r\n        this.showSuccessMessage('Pay head added successfully!');\r\n      } catch (error) {\r\n        console.error('Error adding pay head:', error);\r\n        this.showErrorMessage('Failed to add pay head.');\r\n      }\r\n    },\r\n    showUpdatePayHeadModal(payHead) {\r\n      this.selectedPayHead = { ...payHead };\r\n      this.showUpdateModal = true;\r\n    },\r\n    async updatePayHead(updatedPayHead) {\r\n      try {\r\n        const response = await axios.put(`http://localhost:7777/api/payheads/${updatedPayHead.id}`, updatedPayHead);\r\n        const index = this.payHeads.findIndex(ph => ph.id === updatedPayHead.id);\r\n        if (index !== -1) {\r\n          this.payHeads.splice(index, 1, response.data);\r\n          this.showUpdateModal = false;\r\n          this.showSuccessMessage('Pay head updated successfully!');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating pay head:', error);\r\n        this.showErrorMessage('Failed to update pay head.');\r\n      }\r\n    },\r\n    async deletePayHead(id) {\r\n      try {\r\n        await axios.delete(`http://localhost:7777/api/payheads/${id}`);\r\n        this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\r\n        this.showSuccessMessage('Pay head deleted successfully!');\r\n      } catch (error) {\r\n        console.error('Error deleting pay head:', error);\r\n        this.showErrorMessage('Failed to delete pay head.');\r\n      }\r\n    },\r\n    openAddPayheadModal(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.selectedEmployeePayheads = []; // Reset or fetch existing payheads for employee from backend if implemented\r\n      this.availablePayheads = [...this.payHeads];\r\n      this.showAddPayheadModal = true;\r\n    },\r\n    addPayheadToEmployee(payhead) {\r\n      this.selectedEmployeePayheads.push(payhead);\r\n      this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id);\r\n    },\r\n    removePayheadFromEmployee(payhead) {\r\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\r\n      this.availablePayheads.push(payhead);\r\n    },\r\n    async savePayheads() {\r\n      try {\r\n        // Assuming backend has an endpoint to save payheads for an employee\r\n        await axios.put(`http://localhost:7777/api/employees/${this.selectedEmployee.id}/payheads`, {\r\n          payheads: this.selectedEmployeePayheads\r\n        });\r\n        this.showAddPayheadModal = false;\r\n        this.showSuccessMessage('Payheads saved to employee successfully!');\r\n        await this.fetchEmployees(); // Refresh employee list to reflect changes\r\n      } catch (error) {\r\n        console.error('Error saving payheads:', error);\r\n        this.showErrorMessage('Failed to save payheads.');\r\n      }\r\n    },\r\n    calculateNetSalary(employee) {\r\n      const totalDeductions = (employee.deductions?.sss || 0) + \r\n                              (employee.deductions?.philhealth || 0) + \r\n                              (employee.deductions?.pagibig || 0);\r\n      const totalEarnings = (employee.earnings?.travelExpenses || 0) + \r\n                            (employee.earnings?.otherEarnings || 0);\r\n      return employee.salary + totalEarnings - totalDeductions;\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.transition-all {\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA6D;;EACjEA,KAAK,EAAC;AAAmB;;;;;;uBADhCC,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJC,mBAAA,CA0BM,OA1BNC,UA0BM,GAxBJD,mBAAA,CAC0D;IADlDH,KAAK,EAAC,8GAA8G;IACnHK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,YAAY;KAAS,cAAY,GAG7BD,KAAA,CAAAC,YAAY,I,cAAhCC,YAAA,CAA2GC,uBAAA;IARjHC,GAAA;IAQyCC,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,YAAY;IAAWK,MAAI,EAAEC,QAAA,CAAAC,UAAU;IAAGC,OAAO,EAAET,KAAA,CAAAU;wCARnGC,mBAAA,YAW0BX,KAAA,CAAAY,eAAe,I,cAAnCV,YAAA,CAAkIC,uBAAA;IAXxIC,GAAA;IAW4CC,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAY,eAAe;IAAWN,MAAI,EAAEC,QAAA,CAAAM,aAAa;IAAGJ,OAAO,EAAET,KAAA,CAAAc,eAAe;IAAEC,QAAQ,EAAR;wCAX7HJ,mBAAA,YAcMK,YAAA,CAA8FC,uBAAA;IAA/EC,QAAQ,EAAElB,KAAA,CAAAkB,QAAQ;IAAGC,QAAM,EAAEZ,QAAA,CAAAa,sBAAsB;IAAGC,QAAM,EAAEd,QAAA,CAAAe;qDAG7EN,YAAA,CAAiFO,+BAAA;IAA1DC,SAAS,EAAExB,KAAA,CAAAwB,SAAS;IAAGC,YAAU,EAAElB,QAAA,CAAAmB;8CAGnC1B,KAAA,CAAA2B,mBAAmB,I,cAA1CzB,YAAA,CAO4D0B,0BAAA;IA3BlExB,GAAA;IAqBwBC,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAA2B,mBAAmB;IAC1BrB,MAAI,EAAEC,QAAA,CAAAsB,YAAY;IAClBC,iBAAiB,EAAE9B,KAAA,CAAA8B,iBAAiB;IACpCC,wBAAwB,EAAE/B,KAAA,CAAA+B,wBAAwB;IAClDN,YAAU,EAAElB,QAAA,CAAAyB,oBAAoB;IAChCC,eAAa,EAAE1B,QAAA,CAAA2B,yBAAyB;IACxCC,kBAAkB,EAAE5B,QAAA,CAAA4B;uIA3B5CxB,mBAAA,W,GA+BeX,KAAA,CAAAoC,aAAa,I,cAAxB3C,mBAAA,CAIM;IAnCVW,GAAA;IAgCUZ,KAAK,EAhCf6C,eAAA,EAgCiBrC,KAAA,CAAAoC,aAAa,CAACE,QAAQ,4EACxB,sDAAsD;sBAC5DtC,KAAA,CAAAoC,aAAa,SAlCtBzB,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}