{"ast":null,"code":"export default {\n  name: 'EmployeeSalarySlips',\n  data() {\n    return {\n      employee: null,\n      loading: true,\n      error: null,\n      isGenerating: false,\n      isSending: false\n    };\n  },\n  mounted() {\n    this.fetchEmployeeData();\n  },\n  methods: {\n    formatNumber(number) {\n      return number.toLocaleString();\n    },\n    async fetchEmployeeData() {\n      try {\n        this.loading = true;\n        const userId = localStorage.getItem('userId');\n        if (!userId) {\n          throw new Error('User not logged in');\n        }\n        const response = await fetch(`http://localhost:7777/api/employee/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch employee data');\n        }\n        const data = await response.json();\n        this.employee = data;\n      } catch (error) {\n        this.error = error.message;\n      } finally {\n        this.loading = true;\n      }\n    },\n    async generatePayslip() {\n      try {\n        this.isGenerating = true;\n        const response = await fetch(`http://localhost:7777/api/employee/${this.employee.id}/generate-payslip`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to generate payslip');\n        }\n        this.$notify({\n          type: 'success',\n          message: 'Payslip generated successfully!'\n        });\n      } catch (error) {\n        this.$notify({\n          type: 'error',\n          message: error.message\n        });\n      } finally {\n        this.isGenerating = false;\n      }\n    },\n    async sendPayslipEmail() {\n      try {\n        this.isSending = true;\n        const response = await fetch(`http://localhost:7777/api/employee/${this.employee.id}/send-email`, {\n          method: 'POST'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to send email');\n        }\n        this.$notify({\n          type: 'success',\n          message: 'Payslip sent via email successfully!'\n        });\n      } catch (error) {\n        this.$notify({\n          type: 'error',\n          message: error.message\n        });\n      } finally {\n        this.isSending = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","employee","loading","error","isGenerating","isSending","mounted","fetchEmployeeData","methods","formatNumber","number","toLocaleString","userId","localStorage","getItem","Error","response","fetch","ok","json","message","generatePayslip","id","method","$notify","type","sendPayslipEmail"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\EmployeeSalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-4xl mx-auto mt-8\">\r\n    <!-- Loading State -->\r\n    <div v-if=\"loading\" class=\"bg-white rounded-lg shadow p-8\">\r\n      <div class=\"flex justify-center items-center h-48\">\r\n        <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error State -->\r\n    <div v-else-if=\"error\" class=\"bg-red-50 border-l-4 border-red-500 p-4 rounded-lg\">\r\n      <div class=\"flex\">\r\n        <div class=\"flex-shrink-0\">\r\n          <svg class=\"h-5 w-5 text-red-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n          </svg>\r\n        </div>\r\n        <div class=\"ml-3\">\r\n          <p class=\"text-red-700\">{{ error }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <div v-else-if=\"employee\" class=\"bg-white rounded-lg shadow\">\r\n      <!-- Header -->\r\n      <div class=\"px-6 py-4 border-b border-gray-200\">\r\n        <h2 class=\"text-xl font-semibold text-gray-800\">Employee Salary Details</h2>\r\n      </div>\r\n\r\n      <!-- Employee Information -->\r\n      <div class=\"p-6\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\r\n          <div>\r\n            <p class=\"text-sm text-gray-500\">Employee ID</p>\r\n            <p class=\"font-medium\">{{ employee.id }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-sm text-gray-500\">Name</p>\r\n            <p class=\"font-medium\">{{ employee.name }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-sm text-gray-500\">Container Slip</p>\r\n            <p class=\"font-medium\">{{ employee.containerSlip }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Salary Information -->\r\n        <div class=\"bg-gray-50 rounded-lg p-6 mb-6\">\r\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div>\r\n              <p class=\"text-sm text-gray-500\">Earnings</p>\r\n              <p class=\"text-lg font-semibold\">₱{{ formatNumber(employee.earnings) }}</p>\r\n            </div>\r\n            <div>\r\n              <p class=\"text-sm text-gray-500\">Deductions</p>\r\n              <p class=\"text-lg font-semibold text-red-600\">₱{{ formatNumber(employee.deduction) }}</p>\r\n            </div>\r\n            <div>\r\n              <p class=\"text-sm text-gray-500\">Total Salary</p>\r\n              <p class=\"text-lg font-semibold text-green-600\">₱{{ formatNumber(employee.totalSalary) }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Action Buttons -->\r\n        <div class=\"flex flex-col sm:flex-row gap-3\">\r\n          <button \r\n            @click=\"generatePayslip\"\r\n            :disabled=\"isGenerating\"\r\n            class=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 flex items-center justify-center\"\r\n          >\r\n            <span v-if=\"isGenerating\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></span>\r\n            <svg v-else class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n            </svg>\r\n            Generate Payslip\r\n          </button>\r\n          \r\n          <button \r\n            @click=\"sendPayslipEmail\"\r\n            :disabled=\"isSending\"\r\n            class=\"flex-1 bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 flex items-center justify-center\"\r\n          >\r\n            <span v-if=\"isSending\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></span>\r\n            <svg v-else class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n            </svg>\r\n            Send via Email\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'EmployeeSalarySlips',\r\n  data() {\r\n    return {\r\n      employee: null,\r\n      loading: true,\r\n      error: null,\r\n      isGenerating: false,\r\n      isSending: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchEmployeeData()\r\n  },\r\n  methods: {\r\n    formatNumber(number) {\r\n      return number.toLocaleString()\r\n    },\r\n    async fetchEmployeeData() {\r\n      try {\r\n        this.loading = true\r\n        const userId = localStorage.getItem('userId')\r\n        if (!userId) {\r\n          throw new Error('User not logged in')\r\n        }\r\n        const response = await fetch(`http://localhost:7777/api/employee/${userId}`)\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch employee data')\r\n        }\r\n        const data = await response.json()\r\n        this.employee = data\r\n      } catch (error) {\r\n        this.error = error.message\r\n      } finally {\r\n        this.loading = true\r\n      }\r\n    },\r\n    async generatePayslip() {\r\n      try {\r\n        this.isGenerating = true\r\n        const response = await fetch(\r\n          `http://localhost:7777/api/employee/${this.employee.id}/generate-payslip`,\r\n          { method: 'POST' }\r\n        )\r\n        if (!response.ok) {\r\n          throw new Error('Failed to generate payslip')\r\n        }\r\n        this.$notify({\r\n          type: 'success',\r\n          message: 'Payslip generated successfully!'\r\n        })\r\n      } catch (error) {\r\n        this.$notify({\r\n          type: 'error',\r\n          message: error.message\r\n        })\r\n      } finally {\r\n        this.isGenerating = false\r\n      }\r\n    },\r\n    async sendPayslipEmail() {\r\n      try {\r\n        this.isSending = true\r\n        const response = await fetch(\r\n          `http://localhost:7777/api/employee/${this.employee.id}/send-email`,\r\n          { method: 'POST' }\r\n        )\r\n        if (!response.ok) {\r\n          throw new Error('Failed to send email')\r\n        }\r\n        this.$notify({\r\n          type: 'success',\r\n          message: 'Payslip sent via email successfully!'\r\n        })\r\n      } catch (error) {\r\n        this.$notify({\r\n          type: 'error',\r\n          message: error.message\r\n        })\r\n      } finally {\r\n        this.isSending = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAiGA,eAAe;EACbA,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,MAAM,EAAE;MACnB,OAAOA,MAAM,CAACC,cAAc,CAAC;IAC/B,CAAC;IACD,MAAMJ,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,CAACL,OAAM,GAAI,IAAG;QAClB,MAAMU,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ;QAC5C,IAAI,CAACF,MAAM,EAAE;UACX,MAAM,IAAIG,KAAK,CAAC,oBAAoB;QACtC;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,sCAAsCL,MAAM,EAAE;QAC3E,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIH,KAAK,CAAC,+BAA+B;QACjD;QACA,MAAMf,IAAG,GAAI,MAAMgB,QAAQ,CAACG,IAAI,CAAC;QACjC,IAAI,CAAClB,QAAO,GAAID,IAAG;MACrB,EAAE,OAAOG,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACiB,OAAM;MAC3B,UAAU;QACR,IAAI,CAAClB,OAAM,GAAI,IAAG;MACpB;IACF,CAAC;IACD,MAAMmB,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,IAAI,CAACjB,YAAW,GAAI,IAAG;QACvB,MAAMY,QAAO,GAAI,MAAMC,KAAK,CAC1B,sCAAsC,IAAI,CAAChB,QAAQ,CAACqB,EAAE,mBAAmB,EACzE;UAAEC,MAAM,EAAE;QAAO,CACnB;QACA,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIH,KAAK,CAAC,4BAA4B;QAC9C;QACA,IAAI,CAACS,OAAO,CAAC;UACXC,IAAI,EAAE,SAAS;UACfL,OAAO,EAAE;QACX,CAAC;MACH,EAAE,OAAOjB,KAAK,EAAE;QACd,IAAI,CAACqB,OAAO,CAAC;UACXC,IAAI,EAAE,OAAO;UACbL,OAAO,EAAEjB,KAAK,CAACiB;QACjB,CAAC;MACH,UAAU;QACR,IAAI,CAAChB,YAAW,GAAI,KAAI;MAC1B;IACF,CAAC;IACD,MAAMsB,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,IAAI,CAACrB,SAAQ,GAAI,IAAG;QACpB,MAAMW,QAAO,GAAI,MAAMC,KAAK,CAC1B,sCAAsC,IAAI,CAAChB,QAAQ,CAACqB,EAAE,aAAa,EACnE;UAAEC,MAAM,EAAE;QAAO,CACnB;QACA,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIH,KAAK,CAAC,sBAAsB;QACxC;QACA,IAAI,CAACS,OAAO,CAAC;UACXC,IAAI,EAAE,SAAS;UACfL,OAAO,EAAE;QACX,CAAC;MACH,EAAE,OAAOjB,KAAK,EAAE;QACd,IAAI,CAACqB,OAAO,CAAC;UACXC,IAAI,EAAE,OAAO;UACbL,OAAO,EAAEjB,KAAK,CAACiB;QACjB,CAAC;MACH,UAAU;QACR,IAAI,CAACf,SAAQ,GAAI,KAAI;MACvB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}