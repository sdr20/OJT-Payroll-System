{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  name: 'ManagePayHeads',\n  data() {\n    return {\n      payHeads: [{\n        id: 1,\n        name: 'Basic Salary',\n        amount: 30000,\n        type: 'Earnings'\n      }, {\n        id: 2,\n        name: 'Health Insurance',\n        amount: 2000,\n        type: 'Deductions'\n      }, {\n        id: 3,\n        name: 'Bonus',\n        amount: 5000,\n        type: 'Earnings'\n      }, {\n        id: 4,\n        name: 'Tax',\n        amount: 3000,\n        type: 'Deductions'\n      }, {\n        id: 5,\n        name: 'Overtime',\n        amount: 2000,\n        type: 'Earnings'\n      }, {\n        id: 6,\n        name: 'Loan',\n        amount: 1000,\n        type: 'Deductions'\n      }\n      // Add more pay head data as needed\n      ],\n      employees: [{\n        id: 1,\n        name: 'John Doe',\n        position: 'Software Engineer',\n        totalDeduction: 2000,\n        totalEarnings: 30000,\n        totalSalary: 28000,\n        payheads: []\n      }, {\n        id: 2,\n        name: 'Jane Smith',\n        position: 'Product Manager',\n        totalDeduction: 1500,\n        totalEarnings: 35000,\n        totalSalary: 33500,\n        payheads: []\n      }\n      // Add more employee data as needed\n      ],\n      // ... (Other data properties remain the same)\n      selectedEmployeePayheads: [],\n      availablePayheads: [],\n      selectedPayheadIds: new Set()\n    };\n  },\n  computed: {\n    // ... (computed properties remain the same)\n  },\n  methods: {\n    // ... (Other methods remain the same)\n\n    openAddPayheadModal(employee) {\n      this.selectedEmployee = employee;\n      this.selectedEmployeePayheads = employee.payheads ? [...employee.payheads] : [];\n      this.availablePayheads = this.payHeads.filter(p => !this.selectedEmployeePayheads.find(sp => sp.id === p.id));\n      this.selectedPayheadIds = new Set(this.selectedEmployeePayheads.map(p => p.id));\n      this.showAddPayheadModal = true;\n    },\n    togglePayhead(payhead) {\n      if (this.isSelected(payhead)) {\n        this.removePayheadFromEmployee(payhead);\n      } else {\n        this.addPayheadToEmployee(payhead);\n      }\n    },\n    isSelected(payhead) {\n      return this.selectedPayheadIds.has(payhead.id);\n    },\n    addPayheadToEmployee(payhead) {\n      this.selectedEmployeePayheads.push(payhead);\n      this.selectedPayheadIds.add(payhead.id);\n      //this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id); //Don't filter here\n    },\n    removePayheadFromEmployee(payhead) {\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\n      this.selectedPayheadIds.delete(payhead.id);\n      this.availablePayheads.push(payhead);\n    },\n    savePayheads() {\n      this.selectedEmployee.payheads = [...this.selectedEmployeePayheads];\n      this.showAddPayheadModal = false;\n    }\n  }\n};","map":{"version":3,"names":["name","data","payHeads","id","amount","type","employees","position","totalDeduction","totalEarnings","totalSalary","payheads","selectedEmployeePayheads","availablePayheads","selectedPayheadIds","Set","computed","methods","openAddPayheadModal","employee","selectedEmployee","filter","p","find","sp","map","showAddPayheadModal","togglePayhead","payhead","isSelected","removePayheadFromEmployee","addPayheadToEmployee","has","push","add","delete","savePayheads"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\ManagePayHeads.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-1\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md\">\r\n        </div>\r\n\r\n      <div v-if=\"showAddPayheadModal\" class=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n        <div class=\"bg-white p-6 rounded-xl shadow-md max-w-md w-full\">\r\n          <h2 class=\"text-xl font-bold mb-4\">Add Payhead to Employee</h2>\r\n\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-gray-700 mb-1 font-medium text-sm\">Available Payheads</label>\r\n            <div class=\"space-y-2 max-h-48 overflow-y-auto\"> <div v-for=\"payhead in availablePayheads\" :key=\"payhead.id\" class=\"flex justify-between items-center p-2 border border-gray-200 rounded-lg\">\r\n                <span>{{ payhead.name }} ({{ payhead.type }})</span>\r\n                <button @click=\"togglePayhead(payhead)\" :class=\"{'bg-green-50 text-green-600 hover:bg-green-100': !isSelected(payhead), 'bg-gray-300 text-gray-500 hover:bg-gray-400': isSelected(payhead)}\"\r\n                  class=\"font-semibold py-1 px-2 rounded-lg transition-all duration-200 text-xs\" :disabled=\"isSelected(payhead)\">\r\n                  {{ isSelected(payhead) ? 'Added' : 'Add' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-gray-700 mb-1 font-medium text-sm\">Payheads Added to Employee</label>\r\n            <div class=\"space-y-2 max-h-48 overflow-y-auto\"> <div v-for=\"payhead in selectedEmployeePayheads\" :key=\"payhead.id\" class=\"flex justify-between items-center p-2 border border-gray-200 rounded-lg\">\r\n                <span>{{ payhead.name }} ({{ payhead.type }})</span>\r\n                <button @click=\"removePayheadFromEmployee(payhead)\" class=\"bg-red-50 text-red-600 font-semibold py-1 px-2 rounded-lg hover:bg-red-100 transition-all duration-200 text-xs\">X</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-gray-700 mb-1 font-medium text-sm\">Total Payhead</label>\r\n            <div class=\"p-2 border border-gray-200 rounded-lg\">\r\n              <span>Total Payable Salary: P {{ totalPayableSalary.toLocaleString() }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex justify-end gap-3\">\r\n            <button type=\"button\" @click=\"showAddPayheadModal = false\" class=\"py-2 px-4 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-all duration-200\">Cancel</button>\r\n            <button type=\"button\" @click=\"savePayheads\" class=\"py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ManagePayHeads',\r\n  data() {\r\n    return {\r\n      payHeads: [\r\n        { id: 1, name: 'Basic Salary', amount: 30000, type: 'Earnings' },\r\n        { id: 2, name: 'Health Insurance', amount: 2000, type: 'Deductions' },\r\n        { id: 3, name: 'Bonus', amount: 5000, type: 'Earnings' },\r\n        { id: 4, name: 'Tax', amount: 3000, type: 'Deductions' },\r\n        { id: 5, name: 'Overtime', amount: 2000, type: 'Earnings' },\r\n        { id: 6, name: 'Loan', amount: 1000, type: 'Deductions' },\r\n        // Add more pay head data as needed\r\n      ],\r\n      employees: [\r\n        { id: 1, name: 'John Doe', position: 'Software Engineer', totalDeduction: 2000, totalEarnings: 30000, totalSalary: 28000, payheads: [] },\r\n        { id: 2, name: 'Jane Smith', position: 'Product Manager', totalDeduction: 1500, totalEarnings: 35000, totalSalary: 33500, payheads: [] },\r\n        // Add more employee data as needed\r\n      ],\r\n      // ... (Other data properties remain the same)\r\n      selectedEmployeePayheads: [],\r\n      availablePayheads: [],\r\n      selectedPayheadIds: new Set(),\r\n    };\r\n  },\r\n  computed: {\r\n    // ... (computed properties remain the same)\r\n  },\r\n  methods: {\r\n    // ... (Other methods remain the same)\r\n\r\n    openAddPayheadModal(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.selectedEmployeePayheads = employee.payheads ? [...employee.payheads] : [];\r\n      this.availablePayheads = this.payHeads.filter(p => !this.selectedEmployeePayheads.find(sp => sp.id === p.id));\r\n      this.selectedPayheadIds = new Set(this.selectedEmployeePayheads.map(p => p.id));\r\n      this.showAddPayheadModal = true;\r\n    },\r\n    togglePayhead(payhead) {\r\n      if (this.isSelected(payhead)) {\r\n        this.removePayheadFromEmployee(payhead);\r\n      } else {\r\n        this.addPayheadToEmployee(payhead);\r\n      }\r\n    },\r\n    isSelected(payhead) {\r\n      return this.selectedPayheadIds.has(payhead.id);\r\n    },\r\n    addPayheadToEmployee(payhead) {\r\n      this.selectedEmployeePayheads.push(payhead);\r\n      this.selectedPayheadIds.add(payhead.id);\r\n      //this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id); //Don't filter here\r\n    },\r\n    removePayheadFromEmployee(payhead) {\r\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\r\n      this.selectedPayheadIds.delete(payhead.id);\r\n      this.availablePayheads.push(payhead);\r\n    },\r\n    savePayheads() {\r\n      this.selectedEmployee.payheads = [...this.selectedEmployeePayheads];\r\n      this.showAddPayheadModal = false;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Added styling for scrollable divs */\r\n.max-h-48 {\r\n  max-height: 12rem; /* Adjust as needed */\r\n}\r\n\r\n.overflow-y-auto {\r\n  overflow-y: auto;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}