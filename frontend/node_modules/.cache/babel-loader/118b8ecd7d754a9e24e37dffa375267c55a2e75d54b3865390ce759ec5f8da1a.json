{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EmployeeSalarySlips',\n  data() {\n    return {\n      employee: null\n    };\n  },\n  mounted() {\n    this.fetchEmployeeData();\n  },\n  methods: {\n    async fetchEmployeeData() {\n      try {\n        const userId = localStorage.getItem('userId'); // Assume user ID is stored in localStorage\n        if (!userId) {\n          alert(\"User not logged in.\");\n          return;\n        }\n        const response = await axios.get(`http://localhost:7777/api/employee/${userId}`);\n        this.employee = response.data;\n      } catch (error) {\n        console.error(\"Error fetching employee data:\", error);\n      }\n    },\n    async generatePayslip() {\n      try {\n        await axios.post(`http://localhost:7777/api/employee/${this.employee.id}/generate-payslip`);\n        alert(\"Payslip generated successfully!\");\n      } catch (error) {\n        console.error(\"Error generating payslip:\", error);\n      }\n    },\n    async sendPayslipEmail() {\n      try {\n        await axios.post(`http://localhost:7777/api/employee/${this.employee.id}/send-email`);\n        alert(\"Payslip sent via email!\");\n      } catch (error) {\n        console.error(\"Error sending email:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","employee","mounted","fetchEmployeeData","methods","userId","localStorage","getItem","alert","response","get","error","console","generatePayslip","post","id","sendPayslipEmail"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\EmployeeSalarySlips.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1 class=\"text-2xl font-bold mb-4\">Employee Salary Slips</h1>\r\n    <p class=\"text-gray-700 mb-4\">Here you can view your salary slips.</p>\r\n\r\n    <table class=\"min-w-full bg-white border border-gray-300\">\r\n      <thead>\r\n        <tr class=\"bg-gray-200\">\r\n          <th class=\"border px-4 py-2\">ID</th>\r\n          <th class=\"border px-4 py-2\">Name</th>\r\n          <th class=\"border px-4 py-2\">Earnings</th>\r\n          <th class=\"border px-4 py-2\">Deduction</th>\r\n          <th class=\"border px-4 py-2\">Total Salary</th>\r\n          <th class=\"border px-4 py-2\">Container Slip</th>\r\n          <th class=\"border px-4 py-2\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-if=\"employee\">\r\n          <td class=\"border px-4 py-2\">{{ employee.id }}</td>\r\n          <td class=\"border px-4 py-2\">{{ employee.name }}</td>\r\n          <td class=\"border px-4 py-2\">₱{{ employee.earnings.toLocaleString() }}</td>\r\n          <td class=\"border px-4 py-2\">₱{{ employee.deduction.toLocaleString() }}</td>\r\n          <td class=\"border px-4 py-2 font-bold\">₱{{ employee.totalSalary.toLocaleString() }}</td>\r\n          <td class=\"border px-4 py-2\">{{ employee.containerSlip }}</td>\r\n          <td class=\"border px-4 py-2\">\r\n            <button \r\n              @click=\"generatePayslip\"\r\n              class=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-700 mr-2\"\r\n            >\r\n              Generate Payslip\r\n            </button>\r\n            <button \r\n              @click=\"sendPayslipEmail\"\r\n              class=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-700\"\r\n            >\r\n              Send Email\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr v-else>\r\n          <td colspan=\"7\" class=\"text-center py-4 text-gray-500\">Loading employee data...</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeSalarySlips',\r\n  data() {\r\n    return {\r\n      employee: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchEmployeeData();\r\n  },\r\n  methods: {\r\n    async fetchEmployeeData() {\r\n      try {\r\n        const userId = localStorage.getItem('userId'); // Assume user ID is stored in localStorage\r\n        if (!userId) {\r\n          alert(\"User not logged in.\");\r\n          return;\r\n        }\r\n        const response = await axios.get(`http://localhost:7777/api/employee/${userId}`);\r\n        this.employee = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching employee data:\", error);\r\n      }\r\n    },\r\n    async generatePayslip() {\r\n      try {\r\n        await axios.post(`http://localhost:7777/api/employee/${this.employee.id}/generate-payslip`);\r\n        alert(\"Payslip generated successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error generating payslip:\", error);\r\n      }\r\n    },\r\n    async sendPayslipEmail() {\r\n      try {\r\n        await axios.post(`http://localhost:7777/api/employee/${this.employee.id}/send-email`);\r\n        alert(\"Payslip sent via email!\");\r\n      } catch (error) {\r\n        console.error(\"Error sending email:\", error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"AAiDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC/C,IAAI,CAACF,MAAM,EAAE;UACXG,KAAK,CAAC,qBAAqB,CAAC;UAC5B;QACF;QACA,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,sCAAsCL,MAAM,EAAE,CAAC;QAChF,IAAI,CAACJ,QAAO,GAAIQ,QAAQ,CAACT,IAAI;MAC/B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACD,MAAME,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMf,KAAK,CAACgB,IAAI,CAAC,sCAAsC,IAAI,CAACb,QAAQ,CAACc,EAAE,mBAAmB,CAAC;QAC3FP,KAAK,CAAC,iCAAiC,CAAC;MAC1C,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAMK,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMlB,KAAK,CAACgB,IAAI,CAAC,sCAAsC,IAAI,CAACb,QAAQ,CAACc,EAAE,aAAa,CAAC;QACrFP,KAAK,CAAC,yBAAyB,CAAC;MAClC,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}