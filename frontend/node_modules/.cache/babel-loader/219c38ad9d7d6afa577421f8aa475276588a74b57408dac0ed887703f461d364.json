{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport axios from 'axios';\nimport PayHeadModal from '@/components/payhead/PayHeadModal.vue';\nimport PayHeadTable from '@/components/payhead/PayHeadTable.vue';\nimport EmployeePayrollTable from '@/components/payhead/EmployeePayrollTable.vue';\nimport AddPayheadModal from '@/components/payhead/AddPayheadModal.vue';\nexport default {\n  name: 'ManagePayHeads',\n  components: {\n    PayHeadModal,\n    PayHeadTable,\n    EmployeePayrollTable,\n    AddPayheadModal\n  },\n  data() {\n    return {\n      payHeads: [],\n      employees: [],\n      newPayHead: {\n        name: '',\n        amount: '',\n        type: 'Earnings'\n      },\n      selectedPayHead: {\n        id: '',\n        name: '',\n        amount: '',\n        type: 'Earnings'\n      },\n      showAddModal: false,\n      showUpdateModal: false,\n      showAddPayheadModal: false,\n      selectedEmployee: null,\n      selectedEmployeePayheads: [],\n      availablePayheads: [],\n      statusMessage: ''\n    };\n  },\n  computed: {\n    totalPayableSalary() {\n      const earnings = this.selectedEmployeePayheads.filter(p => p.type === 'Earnings').reduce((sum, p) => sum + p.amount, 0);\n      const deductions = this.selectedEmployeePayheads.filter(p => p.type === 'Deductions').reduce((sum, p) => sum + p.amount, 0);\n      return earnings - deductions;\n    }\n  },\n  async created() {\n    await this.fetchPayHeads();\n    await this.fetchEmployees();\n  },\n  methods: {\n    async fetchPayHeads() {\n      try {\n        const response = await axios.get('http://localhost:7777/api/payheads');\n        this.payHeads = response.data || [];\n      } catch (error) {\n        console.error('Error fetching pay heads:', error);\n        this.showErrorMessage('Failed to fetch pay heads.');\n      }\n    },\n    async fetchEmployees() {\n      try {\n        const response = await axios.get('http://localhost:7777/api/employees');\n        this.employees = response.data.map(emp => ({\n          ...emp,\n          totalEarnings: this.calculateNetSalary(emp),\n          totalDeduction: (emp.deductions?.sss || 0) + (emp.deductions?.philhealth || 0) + (emp.deductions?.pagibig || 0),\n          totalSalary: emp.salary\n        })) || [];\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n        this.showErrorMessage('Failed to fetch employees.');\n      }\n    },\n    async addPayHead(payHead) {\n      try {\n        const response = await axios.post('http://localhost:7777/api/payheads', payHead);\n        this.payHeads.push(response.data);\n        this.showAddModal = false;\n        this.showSuccessMessage('Pay head added successfully!');\n      } catch (error) {\n        console.error('Error adding pay head:', error);\n        this.showErrorMessage('Failed to add pay head.');\n      }\n    },\n    showUpdatePayHeadModal(payHead) {\n      this.selectedPayHead = {\n        ...payHead\n      };\n      this.showUpdateModal = true;\n    },\n    async updatePayHead(updatedPayHead) {\n      try {\n        const response = await axios.put(`http://localhost:7777/api/payheads/${updatedPayHead.id}`, updatedPayHead);\n        const index = this.payHeads.findIndex(ph => ph.id === updatedPayHead.id);\n        if (index !== -1) {\n          this.payHeads.splice(index, 1, response.data);\n          this.showUpdateModal = false;\n          this.showSuccessMessage('Pay head updated successfully!');\n        }\n      } catch (error) {\n        console.error('Error updating pay head:', error);\n        this.showErrorMessage('Failed to update pay head.');\n      }\n    },\n    async deletePayHead(id) {\n      try {\n        await axios.delete(`http://localhost:7777/api/payheads/${id}`);\n        this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\n        this.showSuccessMessage('Pay head deleted successfully!');\n      } catch (error) {\n        console.error('Error deleting pay head:', error);\n        this.showErrorMessage('Failed to delete pay head.');\n      }\n    },\n    openAddPayheadModal(employee) {\n      this.selectedEmployee = employee;\n      this.selectedEmployeePayheads = []; // Reset or fetch existing payheads for employee from backend if implemented\n      this.availablePayheads = [...this.payHeads];\n      this.showAddPayheadModal = true;\n    },\n    addPayheadToEmployee(payhead) {\n      this.selectedEmployeePayheads.push(payhead);\n      this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id);\n    },\n    removePayheadFromEmployee(payhead) {\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\n      this.availablePayheads.push(payhead);\n    },\n    async savePayheads() {\n      try {\n        // Assuming backend has an endpoint to save payheads for an employee\n        await axios.put(`http://localhost:7777/api/employees/${this.selectedEmployee.id}/payheads`, {\n          payheads: this.selectedEmployeePayheads\n        });\n        this.showAddPayheadModal = false;\n        this.showSuccessMessage('Payheads saved to employee successfully!');\n        await this.fetchEmployees(); // Refresh employee list to reflect changes\n      } catch (error) {\n        console.error('Error saving payheads:', error);\n        this.showErrorMessage('Failed to save payheads.');\n      }\n    },\n    calculateNetSalary(employee) {\n      const totalDeductions = (employee.deductions?.sss || 0) + (employee.deductions?.philhealth || 0) + (employee.deductions?.pagibig || 0);\n      const totalEarnings = (employee.earnings?.travelExpenses || 0) + (employee.earnings?.otherEarnings || 0);\n      return employee.salary + totalEarnings - totalDeductions;\n    },\n    showSuccessMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => this.statusMessage = '', 3000);\n    },\n    showErrorMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => this.statusMessage = '', 3000);\n    }\n  }\n};","map":{"version":3,"names":["axios","PayHeadModal","PayHeadTable","EmployeePayrollTable","AddPayheadModal","name","components","data","payHeads","employees","newPayHead","amount","type","selectedPayHead","id","showAddModal","showUpdateModal","showAddPayheadModal","selectedEmployee","selectedEmployeePayheads","availablePayheads","statusMessage","computed","totalPayableSalary","earnings","filter","p","reduce","sum","deductions","created","fetchPayHeads","fetchEmployees","methods","response","get","error","console","showErrorMessage","map","emp","totalEarnings","calculateNetSalary","totalDeduction","sss","philhealth","pagibig","totalSalary","salary","addPayHead","payHead","post","push","showSuccessMessage","showUpdatePayHeadModal","updatePayHead","updatedPayHead","put","index","findIndex","ph","splice","deletePayHead","delete","openAddPayheadModal","employee","addPayheadToEmployee","payhead","removePayheadFromEmployee","savePayheads","payheads","totalDeductions","travelExpenses","otherEarnings","message","setTimeout"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\ManagePayHeads.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Add Pay Head Button -->\r\n      <button class=\"mb-4 py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\" \r\n              @click=\"showAddModal = true\">Add Pay Head</button>\r\n      \r\n      <!-- Add Pay Head Modal -->\r\n      <PayHeadModal v-if=\"showAddModal\" @close=\"showAddModal = false\" @save=\"addPayHead\" :payHead=\"newPayHead\" />\r\n\r\n      <!-- Update Pay Head Modal -->\r\n      <PayHeadModal v-if=\"showUpdateModal\" @close=\"showUpdateModal = false\" @save=\"updatePayHead\" :payHead=\"selectedPayHead\" isUpdate />\r\n\r\n      <!-- Table to Display Pay Heads -->\r\n      <PayHeadTable :payHeads=\"payHeads\" @update=\"showUpdatePayHeadModal\" @delete=\"deletePayHead\" />\r\n\r\n      <!-- Employee Payroll Information -->\r\n      <EmployeePayrollTable :employees=\"employees\" @addPayhead=\"openAddPayheadModal\" />\r\n\r\n      <!-- Add Payhead to Employee Modal -->\r\n      <AddPayheadModal v-if=\"showAddPayheadModal\" \r\n                       @close=\"showAddPayheadModal = false\" \r\n                       @save=\"savePayheads\" \r\n                       :availablePayheads=\"availablePayheads\" \r\n                       :selectedEmployeePayheads=\"selectedEmployeePayheads\" \r\n                       @addPayhead=\"addPayheadToEmployee\" \r\n                       @removePayhead=\"removePayheadFromEmployee\" \r\n                       :totalPayableSalary=\"totalPayableSalary\" />\r\n    </div>\r\n\r\n    <!-- Status Message -->\r\n    <div v-if=\"statusMessage\" \r\n         :class=\"statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\"\r\n         class=\"fixed bottom-4 right-4 p-4 rounded-lg shadow-md z-50\">\r\n      {{ statusMessage }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport PayHeadModal from '@/components/payhead/PayHeadModal.vue';\r\nimport PayHeadTable from '@/components/payhead/PayHeadTable.vue';\r\nimport EmployeePayrollTable from '@/components/payhead/EmployeePayrollTable.vue';\r\nimport AddPayheadModal from '@/components/payhead/AddPayheadModal.vue';\r\n\r\nexport default {\r\n  name: 'ManagePayHeads',\r\n  components: {\r\n    PayHeadModal,\r\n    PayHeadTable,\r\n    EmployeePayrollTable,\r\n    AddPayheadModal\r\n  },\r\n  data() {\r\n    return {\r\n      payHeads: [],\r\n      employees: [],\r\n      newPayHead: {\r\n        name: '',\r\n        amount: '',\r\n        type: 'Earnings'\r\n      },\r\n      selectedPayHead: {\r\n        id: '',\r\n        name: '',\r\n        amount: '',\r\n        type: 'Earnings'\r\n      },\r\n      showAddModal: false,\r\n      showUpdateModal: false,\r\n      showAddPayheadModal: false,\r\n      selectedEmployee: null,\r\n      selectedEmployeePayheads: [],\r\n      availablePayheads: [],\r\n      statusMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    totalPayableSalary() {\r\n      const earnings = this.selectedEmployeePayheads.filter(p => p.type === 'Earnings').reduce((sum, p) => sum + p.amount, 0);\r\n      const deductions = this.selectedEmployeePayheads.filter(p => p.type === 'Deductions').reduce((sum, p) => sum + p.amount, 0);\r\n      return earnings - deductions;\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchPayHeads();\r\n    await this.fetchEmployees();\r\n  },\r\n  methods: {\r\n    async fetchPayHeads() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/payheads');\r\n        this.payHeads = response.data || [];\r\n      } catch (error) {\r\n        console.error('Error fetching pay heads:', error);\r\n        this.showErrorMessage('Failed to fetch pay heads.');\r\n      }\r\n    },\r\n    async fetchEmployees() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees');\r\n        this.employees = response.data.map(emp => ({\r\n          ...emp,\r\n          totalEarnings: this.calculateNetSalary(emp),\r\n          totalDeduction: (emp.deductions?.sss || 0) + (emp.deductions?.philhealth || 0) + (emp.deductions?.pagibig || 0),\r\n          totalSalary: emp.salary\r\n        })) || [];\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        this.showErrorMessage('Failed to fetch employees.');\r\n      }\r\n    },\r\n    async addPayHead(payHead) {\r\n      try {\r\n        const response = await axios.post('http://localhost:7777/api/payheads', payHead);\r\n        this.payHeads.push(response.data);\r\n        this.showAddModal = false;\r\n        this.showSuccessMessage('Pay head added successfully!');\r\n      } catch (error) {\r\n        console.error('Error adding pay head:', error);\r\n        this.showErrorMessage('Failed to add pay head.');\r\n      }\r\n    },\r\n    showUpdatePayHeadModal(payHead) {\r\n      this.selectedPayHead = { ...payHead };\r\n      this.showUpdateModal = true;\r\n    },\r\n    async updatePayHead(updatedPayHead) {\r\n      try {\r\n        const response = await axios.put(`http://localhost:7777/api/payheads/${updatedPayHead.id}`, updatedPayHead);\r\n        const index = this.payHeads.findIndex(ph => ph.id === updatedPayHead.id);\r\n        if (index !== -1) {\r\n          this.payHeads.splice(index, 1, response.data);\r\n          this.showUpdateModal = false;\r\n          this.showSuccessMessage('Pay head updated successfully!');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating pay head:', error);\r\n        this.showErrorMessage('Failed to update pay head.');\r\n      }\r\n    },\r\n    async deletePayHead(id) {\r\n      try {\r\n        await axios.delete(`http://localhost:7777/api/payheads/${id}`);\r\n        this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\r\n        this.showSuccessMessage('Pay head deleted successfully!');\r\n      } catch (error) {\r\n        console.error('Error deleting pay head:', error);\r\n        this.showErrorMessage('Failed to delete pay head.');\r\n      }\r\n    },\r\n    openAddPayheadModal(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.selectedEmployeePayheads = []; // Reset or fetch existing payheads for employee from backend if implemented\r\n      this.availablePayheads = [...this.payHeads];\r\n      this.showAddPayheadModal = true;\r\n    },\r\n    addPayheadToEmployee(payhead) {\r\n      this.selectedEmployeePayheads.push(payhead);\r\n      this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id);\r\n    },\r\n    removePayheadFromEmployee(payhead) {\r\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\r\n      this.availablePayheads.push(payhead);\r\n    },\r\n    async savePayheads() {\r\n      try {\r\n        // Assuming backend has an endpoint to save payheads for an employee\r\n        await axios.put(`http://localhost:7777/api/employees/${this.selectedEmployee.id}/payheads`, {\r\n          payheads: this.selectedEmployeePayheads\r\n        });\r\n        this.showAddPayheadModal = false;\r\n        this.showSuccessMessage('Payheads saved to employee successfully!');\r\n        await this.fetchEmployees(); // Refresh employee list to reflect changes\r\n      } catch (error) {\r\n        console.error('Error saving payheads:', error);\r\n        this.showErrorMessage('Failed to save payheads.');\r\n      }\r\n    },\r\n    calculateNetSalary(employee) {\r\n      const totalDeductions = (employee.deductions?.sss || 0) + \r\n                              (employee.deductions?.philhealth || 0) + \r\n                              (employee.deductions?.pagibig || 0);\r\n      const totalEarnings = (employee.earnings?.travelExpenses || 0) + \r\n                            (employee.earnings?.otherEarnings || 0);\r\n      return employee.salary + totalEarnings - totalDeductions;\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.transition-all {\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}