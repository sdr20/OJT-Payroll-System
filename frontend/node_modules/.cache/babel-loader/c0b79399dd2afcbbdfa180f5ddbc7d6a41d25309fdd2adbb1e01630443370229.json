{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"employee-list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"employee-details\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Employee List\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employees, employee => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: employee.id,\n      onClick: $event => $options.selectEmployee(employee)\n    }, _toDisplayString(employee.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.selectedEmployee ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, \"Payslip for \" + _toDisplayString($data.selectedEmployee.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Position:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedEmployee.position), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Basic Salary:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedEmployee.basicSalary), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Allowances:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedEmployee.allowances), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Deductions:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedEmployee.deductions), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Total Earnings:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.totalEarnings), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Net Salary:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.netSalary), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.generatePayslip && $options.generatePayslip(...args))\n  }, \"Generate Payslip\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendPayslip && $options.sendPayslip(...args))\n  }, \"Send Payslip\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","employees","employee","id","onClick","$event","$options","selectEmployee","name","_hoisted_2","selectedEmployee","_hoisted_3","_toDisplayString","_createTextVNode","position","basicSalary","allowances","deductions","totalEarnings","netSalary","_cache","args","generatePayslip","sendPayslip","_createCommentVNode"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\ManageEmployees.vue"],"sourcesContent":["<template>\r\n    <div class=\"employee-list\">\r\n      <h2>Employee List</h2>\r\n      <ul>\r\n        <li v-for=\"employee in employees\" :key=\"employee.id\" @click=\"selectEmployee(employee)\">\r\n          {{ employee.name }}\r\n        </li>\r\n      </ul>\r\n      \r\n      <div v-if=\"selectedEmployee\" class=\"employee-details\">\r\n        <h3>Payslip for {{ selectedEmployee.name }}</h3>\r\n        <p><strong>Position:</strong> {{ selectedEmployee.position }}</p>\r\n        <p><strong>Basic Salary:</strong> {{ selectedEmployee.basicSalary }}</p>\r\n        <p><strong>Allowances:</strong> {{ selectedEmployee.allowances }}</p>\r\n        <p><strong>Deductions:</strong> {{ selectedEmployee.deductions }}</p>\r\n        <p><strong>Total Earnings:</strong> {{ totalEarnings }}</p>\r\n        <p><strong>Net Salary:</strong> {{ netSalary }}</p>\r\n        \r\n        <button @click=\"generatePayslip\">Generate Payslip</button>\r\n        <button @click=\"sendPayslip\">Send Payslip</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        employees: [\r\n          { id: 1, name: 'John Doe', position: 'Manager', basicSalary: 50000, allowances: 10000, deductions: 5000 },\r\n          { id: 2, name: 'Jane Smith', position: 'Developer', basicSalary: 45000, allowances: 8000, deductions: 4000 },\r\n        ],\r\n        selectedEmployee: null\r\n      };\r\n    },\r\n    computed: {\r\n      totalEarnings() {\r\n        if (!this.selectedEmployee) return 0;\r\n        return this.selectedEmployee.basicSalary + this.selectedEmployee.allowances;\r\n      },\r\n      netSalary() {\r\n        if (!this.selectedEmployee) return 0;\r\n        return this.totalEarnings - this.selectedEmployee.deductions;\r\n      }\r\n    },\r\n    methods: {\r\n      selectEmployee(employee) {\r\n        this.selectedEmployee = employee;\r\n      },\r\n      generatePayslip() {\r\n        alert(`Payslip generated for ${this.selectedEmployee.name}`);\r\n      },\r\n      sendPayslip() {\r\n        alert(`Payslip sent to ${this.selectedEmployee.name}`);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .employee-list ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .employee-list li {\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  \r\n  .employee-list li:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n  \r\n  .employee-details {\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAe;mBAD9B;;EAAAC,GAAA;EASmCD,KAAK,EAAC;;;uBARrCE,mBAAA,CAoBM,OApBNC,UAoBM,G,0BAnBJC,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKG,SAAA,QANbC,WAAA,CAI+BC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBP,mBAAA,CAEK;MAF8BD,GAAG,EAAEQ,QAAQ,CAACC,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACL,QAAQ;wBAC/EA,QAAQ,CAACM,IAAI,wBAL1BC,UAAA;oCASiBT,KAAA,CAAAU,gBAAgB,I,cAA3Bf,mBAAA,CAWM,OAXNgB,UAWM,GAVJd,mBAAA,CAAgD,YAA5C,cAAY,GAAAe,gBAAA,CAAGZ,KAAA,CAAAU,gBAAgB,CAACF,IAAI,kBACxCX,mBAAA,CAAiE,Y,0BAA9DA,mBAAA,CAA0B,gBAAlB,WAAS,sBAX5BgB,gBAAA,CAWqC,GAAC,GAAAD,gBAAA,CAAGZ,KAAA,CAAAU,gBAAgB,CAACI,QAAQ,iB,GAC1DjB,mBAAA,CAAwE,Y,0BAArEA,mBAAA,CAA8B,gBAAtB,eAAa,sBAZhCgB,gBAAA,CAYyC,GAAC,GAAAD,gBAAA,CAAGZ,KAAA,CAAAU,gBAAgB,CAACK,WAAW,iB,GACjElB,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAA4B,gBAApB,aAAW,sBAb9BgB,gBAAA,CAauC,GAAC,GAAAD,gBAAA,CAAGZ,KAAA,CAAAU,gBAAgB,CAACM,UAAU,iB,GAC9DnB,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAA4B,gBAApB,aAAW,sBAd9BgB,gBAAA,CAcuC,GAAC,GAAAD,gBAAA,CAAGZ,KAAA,CAAAU,gBAAgB,CAACO,UAAU,iB,GAC9DpB,mBAAA,CAA2D,Y,0BAAxDA,mBAAA,CAAgC,gBAAxB,iBAAe,sBAflCgB,gBAAA,CAe2C,GAAC,GAAAD,gBAAA,CAAGN,QAAA,CAAAY,aAAa,iB,GACpDrB,mBAAA,CAAmD,Y,0BAAhDA,mBAAA,CAA4B,gBAApB,aAAW,sBAhB9BgB,gBAAA,CAgBuC,GAAC,GAAAD,gBAAA,CAAGN,QAAA,CAAAa,SAAS,iB,GAE5CtB,mBAAA,CAA0D;IAAjDO,OAAK,EAAAgB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEf,QAAA,CAAAgB,eAAA,IAAAhB,QAAA,CAAAgB,eAAA,IAAAD,IAAA,CAAe;KAAE,kBAAgB,GACjDxB,mBAAA,CAAkD;IAAzCO,OAAK,EAAAgB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEf,QAAA,CAAAiB,WAAA,IAAAjB,QAAA,CAAAiB,WAAA,IAAAF,IAAA,CAAW;KAAE,cAAY,E,KAnBjDG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}