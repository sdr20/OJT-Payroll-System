{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen p-1\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-8xl mx-auto\"\n};\nconst _hoisted_3 = {\n  class: \"bg-white rounded-lg shadow-sm p-4 mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"grid grid-cols-1 md:grid-cols-5 gap-4\"\n};\nconst _hoisted_5 = {\n  class: \"relative\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"material-icons text-sm\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"material-icons text-sm\"\n};\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  class: \"bg-white rounded-lg shadow-sm overflow-hidden\"\n};\nconst _hoisted_13 = {\n  class: \"overflow-x-auto\"\n};\nconst _hoisted_14 = {\n  class: \"min-w-full divide-y divide-gray-200 mb-4\"\n};\nconst _hoisted_15 = {\n  class: \"bg-white divide-y divide-gray-200\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = {\n  class: \"px-4 py-3 text-sm text-gray-900\"\n};\nconst _hoisted_18 = {\n  class: \"px-4 py-3 text-sm text-gray-500\"\n};\nconst _hoisted_19 = {\n  class: \"px-4 py-3 text-sm text-gray-500\"\n};\nconst _hoisted_20 = {\n  class: \"px-4 py-3 text-sm text-gray-900\"\n};\nconst _hoisted_21 = {\n  class: \"px-4 py-3 text-sm text-blue-600\"\n};\nconst _hoisted_22 = {\n  key: 0\n};\nconst _hoisted_23 = {\n  key: 1\n};\nconst _hoisted_24 = {\n  class: \"flex items-center justify-between px-4 py-3 bg-gray-50\"\n};\nconst _hoisted_25 = {\n  class: \"text-xs text-gray-700\"\n};\nconst _hoisted_26 = {\n  class: \"flex gap-2\"\n};\nconst _hoisted_27 = [\"disabled\"];\nconst _hoisted_28 = [\"disabled\"];\nconst _hoisted_29 = {\n  key: 0,\n  class: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\n};\nconst _hoisted_30 = {\n  class: \"bg-white rounded-lg shadow-xl w-full max-w-5xl h-[80vh] flex flex-col\"\n};\nconst _hoisted_31 = {\n  class: \"flex items-center justify-between p-4 border-b\"\n};\nconst _hoisted_32 = {\n  class: \"text-base font-medium text-gray-800 flex items-center gap-1\"\n};\nconst _hoisted_33 = {\n  class: \"flex items-center gap-2\"\n};\nconst _hoisted_34 = [\"disabled\"];\nconst _hoisted_35 = {\n  class: \"flex flex-1 overflow-hidden\"\n};\nconst _hoisted_36 = {\n  class: \"w-1/2 p-4 overflow-y-auto border-r\"\n};\nconst _hoisted_37 = {\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_38 = {\n  class: \"bg-gray-50 sticky top-0\"\n};\nconst _hoisted_39 = {\n  class: \"material-icons text-xs\"\n};\nconst _hoisted_40 = {\n  class: \"material-icons text-xs\"\n};\nconst _hoisted_41 = {\n  class: \"divide-y divide-gray-200\"\n};\nconst _hoisted_42 = [\"onClick\"];\nconst _hoisted_43 = {\n  class: \"px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_44 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_45 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_46 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_47 = {\n  class: \"px-4 py-2\"\n};\nconst _hoisted_48 = [\"onClick\", \"disabled\"];\nconst _hoisted_49 = {\n  key: 0\n};\nconst _hoisted_50 = {\n  key: 0\n};\nconst _hoisted_51 = {\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_52 = {\n  class: \"bg-gray-50 sticky top-0\"\n};\nconst _hoisted_53 = {\n  class: \"material-icons text-xs\"\n};\nconst _hoisted_54 = {\n  class: \"material-icons text-xs\"\n};\nconst _hoisted_55 = {\n  class: \"divide-y divide-gray-200\"\n};\nconst _hoisted_56 = [\"onClick\"];\nconst _hoisted_57 = {\n  class: \"px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_58 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_59 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_60 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_61 = {\n  class: \"px-4 py-2\"\n};\nconst _hoisted_62 = [\"onClick\", \"disabled\"];\nconst _hoisted_63 = {\n  key: 0\n};\nconst _hoisted_64 = {\n  class: \"w-1/2 p-4 overflow-y-auto\"\n};\nconst _hoisted_65 = {\n  key: 0,\n  class: \"flex flex-col h-full\"\n};\nconst _hoisted_66 = {\n  class: \"mb-4\"\n};\nconst _hoisted_67 = {\n  class: \"text-sm text-gray-600\"\n};\nconst _hoisted_68 = [\"src\"];\nconst _hoisted_69 = {\n  key: 0,\n  class: \"mt-3 p-3 bg-red-50 text-red-700 rounded text-sm flex items-center gap-1\"\n};\nconst _hoisted_70 = {\n  key: 1,\n  class: \"text-sm text-gray-500 text-center mt-4\"\n};\nconst _hoisted_71 = {\n  key: 1,\n  class: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\n};\nconst _hoisted_72 = {\n  class: \"bg-white rounded-lg shadow-xl w-full max-w-md p-6\"\n};\nconst _hoisted_73 = {\n  class: \"mb-4\"\n};\nconst _hoisted_74 = [\"value\"];\nconst _hoisted_75 = {\n  class: \"mb-4\"\n};\nconst _hoisted_76 = [\"value\"];\nconst _hoisted_77 = {\n  class: \"flex justify-end gap-2\"\n};\nconst _hoisted_78 = [\"disabled\"];\nconst _hoisted_79 = {\n  key: 2,\n  class: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\n};\nconst _hoisted_80 = {\n  class: \"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[80vh] flex flex-col\"\n};\nconst _hoisted_81 = {\n  class: \"flex items-center justify-between p-4 border-b\"\n};\nconst _hoisted_82 = {\n  class: \"p-4 overflow-y-auto\"\n};\nconst _hoisted_83 = {\n  key: 0,\n  class: \"mb-4\"\n};\nconst _hoisted_84 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_85 = {\n  key: 1\n};\nconst _hoisted_86 = [\"value\"];\nconst _hoisted_87 = {\n  class: \"text-sm text-gray-900\"\n};\nconst _hoisted_88 = {\n  key: 2,\n  class: \"text-sm text-gray-500 text-center py-4\"\n};\nconst _hoisted_89 = {\n  class: \"p-4 border-t flex justify-end gap-2\"\n};\nconst _hoisted_90 = [\"disabled\"];\nconst _hoisted_91 = {\n  class: \"material-icons text-sm\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[26] || (_cache[26] = _createElementVNode(\"span\", {\n    class: \"material-icons absolute left-2 top-2 text-gray-400 text-sm\"\n  }, \"search\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search employee by name...\",\n    class: \"w-full pl-8 pr-3 py-2 text-sm rounded-md border border-gray-200 focus:ring-2 focus:ring-blue-400 focus:border-transparent\"\n  }, null, 512), [[_vModelText, $data.searchQuery]])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.refreshData && $options.refreshData(...args)),\n    class: \"flex items-center justify-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-sm py-2 px-4 rounded-md\",\n    disabled: $data.isLoading\n  }, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.isLoading ? 'sync' : 'refresh'), 1), _createTextVNode(\" \" + _toDisplayString($data.isLoading ? 'Refreshing...' : 'Refresh Data'), 1)], 8, _hoisted_6), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.generateAllPayslips && $options.generateAllPayslips(...args)),\n    class: \"flex items-center justify-center gap-1 bg-green-500 hover:bg-green-600 text-white text-sm py-2 px-4 rounded-md\",\n    disabled: $data.isLoading || $data.isGeneratingAll\n  }, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString($data.isGeneratingAll ? 'sync' : 'description'), 1), _createTextVNode(\" \" + _toDisplayString($data.isGeneratingAll ? 'Generating...' : 'Generate All'), 1)], 8, _hoisted_8), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.showPrintModal && $options.showPrintModal(...args)),\n    class: \"flex items-center justify-center gap-1 bg-purple-500 hover:bg-purple-600 text-white text-sm py-2 px-4 rounded-md\",\n    disabled: $data.isLoading\n  }, _cache[27] || (_cache[27] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"print\", -1), _createTextVNode(\" Print All \")]), 8, _hoisted_10), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.showUpdatePositionModal && $options.showUpdatePositionModal(...args)),\n    class: \"flex items-center justify-center gap-1 bg-orange-500 hover:bg-orange-600 text-white text-sm py-2 px-4 rounded-md\",\n    disabled: $data.isLoading\n  }, _cache[28] || (_cache[28] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"edit\", -1), _createTextVNode(\" Update Position \")]), 8, _hoisted_11)])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"table\", _hoisted_14, [_cache[31] || (_cache[31] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-50\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-gray-400 text-sm\"\n  }, \"person\"), _createTextVNode(\" Name \")])]), _createElementVNode(\"th\", {\n    class: \"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-gray-400 text-sm\"\n  }, \"badge\"), _createTextVNode(\" Employee ID \")])]), _createElementVNode(\"th\", {\n    class: \"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-gray-400 text-sm\"\n  }, \"work\"), _createTextVNode(\" Position \")])]), _createElementVNode(\"th\", {\n    class: \"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-gray-400 text-sm\"\n  }, \"payments\"), _createTextVNode(\" Hourly Rate \")])]), _createElementVNode(\"th\", {\n    class: \"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-gray-400 text-sm\"\n  }, \"account_balance_wallet\"), _createTextVNode(\" Basic Salary \")])])])], -1)), _createElementVNode(\"tbody\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employee.id,\n      class: \"hover:bg-blue-50 transition-colors cursor-pointer\",\n      onClick: $event => $options.showPayslipHistory(employee)\n    }, [_createElementVNode(\"td\", _hoisted_17, _toDisplayString(employee.name), 1), _createElementVNode(\"td\", _hoisted_18, _toDisplayString(employee.empNo), 1), _createElementVNode(\"td\", _hoisted_19, _toDisplayString($options.getPositionName(employee.position)), 1), _createElementVNode(\"td\", _hoisted_20, \" ₱\" + _toDisplayString($options.getHourlyRate(employee.position).toLocaleString()), 1), _createElementVNode(\"td\", _hoisted_21, \" ₱\" + _toDisplayString($options.getPositionSalary(employee.position).toLocaleString()), 1)], 8, _hoisted_16);\n  }), 128)), $options.paginatedEmployees.length === 0 && !$data.isLoading ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_22, _cache[29] || (_cache[29] = [_createElementVNode(\"td\", {\n    colspan: \"5\",\n    class: \"px-4 py-8 text-center\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex flex-col items-center gap-2\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-gray-400 text-3xl\"\n  }, \"search_off\"), _createElementVNode(\"p\", {\n    class: \"text-sm text-gray-500\"\n  }, \"No employees found.\")])], -1)]))) : _createCommentVNode(\"\", true), $data.isLoading ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_23, _cache[30] || (_cache[30] = [_createElementVNode(\"td\", {\n    colspan: \"5\",\n    class: \"px-4 py-8 text-center\"\n  }, [_createElementVNode(\"div\", {\n    class: \"flex flex-col items-center gap-2\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-blue-500 animate-spin text-3xl\"\n  }, \"sync\"), _createElementVNode(\"p\", {\n    class: \"text-sm text-gray-500\"\n  }, \"Loading employees...\")])], -1)]))) : _createCommentVNode(\"\", true)])])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, \" Showing page \" + _toDisplayString($data.currentPage) + \" of \" + _toDisplayString($options.totalPages), 1), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1 || $data.isLoading,\n    class: \"inline-flex items-center px-3 py-1 text-xs bg-white border border-gray-300 rounded text-gray-700 hover:bg-gray-50\"\n  }, _cache[32] || (_cache[32] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm mr-1\"\n  }, \"chevron_left\", -1), _createTextVNode(\" Previous \")]), 8, _hoisted_27), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages || $data.isLoading,\n    class: \"inline-flex items-center px-3 py-1 text-xs bg-white border border-gray-300 rounded text-gray-700 hover:bg-gray-50\"\n  }, _cache[33] || (_cache[33] = [_createTextVNode(\" Next \"), _createElementVNode(\"span\", {\n    class: \"material-icons text-sm ml-1\"\n  }, \"chevron_right\", -1)]), 8, _hoisted_28)])])]), $data.showHistoryModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"h2\", _hoisted_32, [_cache[34] || (_cache[34] = _createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"history\", -1)), _createTextVNode(\" Payslip History - \" + _toDisplayString($data.selectedEmployee?.name), 1)]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = _withModifiers($event => $options.generatePayslipNow($data.selectedEmployee), [\"stop\"])),\n    class: \"flex items-center justify-center gap-1 bg-yellow-500 hover:bg-yellow-600 text-white text-sm py-2 px-4 rounded-md\",\n    disabled: $data.isLoading || $data.payslipGenerationStatus.generating\n  }, [_cache[35] || (_cache[35] = _createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"play_arrow\", -1)), _createTextVNode(\" \" + _toDisplayString($data.payslipGenerationStatus.generating ? 'Generating...' : 'Generate Now'), 1)], 8, _hoisted_34), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = $event => $data.showHistoryModal = false),\n    class: \"p-1 hover:bg-gray-100 rounded-full\"\n  }, _cache[36] || (_cache[36] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"close\", -1)]))])]), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_cache[52] || (_cache[52] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mb-2\"\n  }, \"Previous Position Payslips\", -1)), _createElementVNode(\"table\", _hoisted_37, [_createElementVNode(\"thead\", _hoisted_38, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\",\n    onClick: _cache[9] || (_cache[9] = $event => $options.sortPreviousPayslips('payDate'))\n  }, [_cache[37] || (_cache[37] = _createTextVNode(\" Pay Date \")), _createElementVNode(\"span\", _hoisted_39, _toDisplayString($data.sortPreviousField === 'payDate' ? $data.sortPreviousAsc ? 'arrow_upward' : 'arrow_downward' : ''), 1)]), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\",\n    onClick: _cache[10] || (_cache[10] = $event => $options.sortPreviousPayslips('position'))\n  }, [_cache[38] || (_cache[38] = _createTextVNode(\" Position \")), _createElementVNode(\"span\", _hoisted_40, _toDisplayString($data.sortPreviousField === 'position' ? $data.sortPreviousAsc ? 'arrow_upward' : 'arrow_downward' : ''), 1)]), _cache[39] || (_cache[39] = _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Salary\", -1)), _cache[40] || (_cache[40] = _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Status\", -1)), _cache[41] || (_cache[41] = _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Action\", -1))])]), _createElementVNode(\"tbody\", _hoisted_41, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedPreviousPayslips, payslip => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: `${payslip.salaryMonth}-${payslip.paydayType}`,\n      class: _normalizeClass([\"hover:bg-blue-50 cursor-pointer\", {\n        'bg-blue-100': $data.selectedPayslip?.salaryMonth === payslip.salaryMonth && $data.selectedPayslip?.paydayType === payslip.paydayType\n      }]),\n      onClick: $event => $options.selectPayslip(payslip)\n    }, [_createElementVNode(\"td\", _hoisted_43, _toDisplayString(payslip.paydayType === 'mid-month' ? payslip.expectedPaydays.midMonthPayday : payslip.expectedPaydays.endMonthPayday), 1), _createElementVNode(\"td\", _hoisted_44, _toDisplayString($options.getPositionName(payslip.position)), 1), _createElementVNode(\"td\", _hoisted_45, \" ₱\" + _toDisplayString(payslip.salary.toLocaleString()), 1), _createElementVNode(\"td\", _hoisted_46, _toDisplayString(payslip.payslipDataUrl ? 'Generated' : 'Pending'), 1), _createElementVNode(\"td\", _hoisted_47, [!payslip.payslipDataUrl ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: _withModifiers($event => $options.generatePayslip(payslip), [\"stop\"]),\n      class: \"inline-flex items-center gap-1 px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600\",\n      disabled: !$options.canGeneratePayslip(payslip) || $data.payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating\n    }, [_cache[42] || (_cache[42] = _createElementVNode(\"span\", {\n      class: \"material-icons text-sm\"\n    }, \"description\", -1)), _createTextVNode(\" \" + _toDisplayString($data.payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating ? 'Generating...' : 'Generate'), 1)], 8, _hoisted_48)) : _createCommentVNode(\"\", true)])], 10, _hoisted_42);\n  }), 128)), $options.sortedPreviousPayslips.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_49, _cache[43] || (_cache[43] = [_createElementVNode(\"td\", {\n    colspan: \"5\",\n    class: \"px-4 py-4 text-center text-sm text-gray-500\"\n  }, \"No previous payslips available.\", -1)]))) : _createCommentVNode(\"\", true)])]), $options.hasUpdatedPosition ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, [_cache[51] || (_cache[51] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mt-6 mb-2\"\n  }, \"New Position Payslips\", -1)), _createElementVNode(\"table\", _hoisted_51, [_createElementVNode(\"thead\", _hoisted_52, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\",\n    onClick: _cache[11] || (_cache[11] = $event => $options.sortNewPayslips('payDate'))\n  }, [_cache[44] || (_cache[44] = _createTextVNode(\" Pay Date \")), _createElementVNode(\"span\", _hoisted_53, _toDisplayString($data.sortNewField === 'payDate' ? $data.sortNewAsc ? 'arrow_upward' : 'arrow_downward' : ''), 1)]), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\",\n    onClick: _cache[12] || (_cache[12] = $event => $options.sortNewPayslips('position'))\n  }, [_cache[45] || (_cache[45] = _createTextVNode(\" Position \")), _createElementVNode(\"span\", _hoisted_54, _toDisplayString($data.sortNewField === 'position' ? $data.sortNewAsc ? 'arrow_upward' : 'arrow_downward' : ''), 1)]), _cache[46] || (_cache[46] = _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Salary\", -1)), _cache[47] || (_cache[47] = _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Status\", -1)), _cache[48] || (_cache[48] = _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Action\", -1))])]), _createElementVNode(\"tbody\", _hoisted_55, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedNewPayslips, payslip => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: `${payslip.salaryMonth}-${payslip.paydayType}`,\n      class: _normalizeClass([\"hover:bg-blue-50 cursor-pointer\", {\n        'bg-blue-100': $data.selectedPayslip?.salaryMonth === payslip.salaryMonth && $data.selectedPayslip?.paydayType === payslip.paydayType\n      }]),\n      onClick: $event => $options.selectPayslip(payslip)\n    }, [_createElementVNode(\"td\", _hoisted_57, _toDisplayString(payslip.paydayType === 'mid-month' ? payslip.expectedPaydays.midMonthPayday : payslip.expectedPaydays.endMonthPayday), 1), _createElementVNode(\"td\", _hoisted_58, _toDisplayString($options.getPositionName(payslip.position)), 1), _createElementVNode(\"td\", _hoisted_59, \" ₱\" + _toDisplayString(payslip.salary.toLocaleString()), 1), _createElementVNode(\"td\", _hoisted_60, _toDisplayString(payslip.payslipDataUrl ? 'Generated' : 'Pending'), 1), _createElementVNode(\"td\", _hoisted_61, [!payslip.payslipDataUrl ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: _withModifiers($event => $options.generatePayslip(payslip), [\"stop\"]),\n      class: \"inline-flex items-center gap-1 px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600\",\n      disabled: !$options.canGeneratePayslip(payslip) || $data.payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating\n    }, [_cache[49] || (_cache[49] = _createElementVNode(\"span\", {\n      class: \"material-icons text-sm\"\n    }, \"description\", -1)), _createTextVNode(\" \" + _toDisplayString($data.payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating ? 'Generating...' : 'Generate'), 1)], 8, _hoisted_62)) : _createCommentVNode(\"\", true)])], 10, _hoisted_56);\n  }), 128)), $options.sortedNewPayslips.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_63, _cache[50] || (_cache[50] = [_createElementVNode(\"td\", {\n    colspan: \"5\",\n    class: \"px-4 py-4 text-center text-sm text-gray-500\"\n  }, \"No new payslips available.\", -1)]))) : _createCommentVNode(\"\", true)])])])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_64, [_cache[55] || (_cache[55] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mb-2\"\n  }, \"Payslip Preview\", -1)), $data.selectedPayslip && $data.selectedPayslip.payslipDataUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_65, [_createElementVNode(\"div\", _hoisted_66, [_createElementVNode(\"p\", _hoisted_67, \" Position: \" + _toDisplayString($options.getPositionName($data.selectedPayslip.position)) + \" | Salary: ₱\" + _toDisplayString($data.selectedPayslip.salary.toLocaleString()), 1)]), _createElementVNode(\"iframe\", {\n    src: $data.selectedPayslip.payslipDataUrl,\n    class: \"w-full h-[50vh] rounded border mb-4\",\n    onLoad: _cache[13] || (_cache[13] = (...args) => $options.onIframeLoad && $options.onIframeLoad(...args)),\n    onError: _cache[14] || (_cache[14] = (...args) => $options.onIframeError && $options.onIframeError(...args))\n  }, null, 40, _hoisted_68), _createElementVNode(\"button\", {\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.downloadPayslip && $options.downloadPayslip(...args)),\n    class: \"flex items-center justify-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-sm py-2 px-4 rounded-md\"\n  }, _cache[53] || (_cache[53] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"download\", -1), _createTextVNode(\" Download PDF \")])), $data.iframeError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_69, _cache[54] || (_cache[54] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"error\", -1), _createTextVNode(\" Error loading payslip. Please try again. \")]))) : _createCommentVNode(\"\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_70, \" Select a payslip from the list to preview. \"))])])])])) : _createCommentVNode(\"\", true), $data.showUpdateModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_71, [_createElementVNode(\"div\", _hoisted_72, [_cache[61] || (_cache[61] = _createElementVNode(\"h2\", {\n    class: \"text-base font-medium text-gray-800 mb-4 flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"edit\"), _createTextVNode(\" Update Employee Position \")], -1)), _createElementVNode(\"div\", _hoisted_73, [_cache[57] || (_cache[57] = _createElementVNode(\"label\", {\n    class: \"block text-sm text-gray-700 mb-1\"\n  }, \"Select Employee\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.selectedEmployeeForUpdate = $event),\n    class: \"w-full p-2 border rounded text-sm\"\n  }, [_cache[56] || (_cache[56] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Select an employee\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employees, emp => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: emp.id,\n      value: emp.id\n    }, _toDisplayString(emp.name) + \" (\" + _toDisplayString($options.getPositionName(emp.position)) + \") \", 9, _hoisted_74);\n  }), 128))], 512), [[_vModelSelect, $data.selectedEmployeeForUpdate]])]), _createElementVNode(\"div\", _hoisted_75, [_cache[59] || (_cache[59] = _createElementVNode(\"label\", {\n    class: \"block text-sm text-gray-700 mb-1\"\n  }, \"New Position\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.newPosition = $event),\n    class: \"w-full p-2 border rounded text-sm\"\n  }, [_cache[58] || (_cache[58] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\"\n  }, \"Select a position\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.positions, pos => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: pos.name,\n      value: pos.name\n    }, _toDisplayString(pos.name) + \" (₱\" + _toDisplayString(pos.salary.toLocaleString()) + \") \", 9, _hoisted_76);\n  }), 128))], 512), [[_vModelSelect, $data.newPosition]])]), _createElementVNode(\"div\", _hoisted_77, [_createElementVNode(\"button\", {\n    onClick: _cache[18] || (_cache[18] = $event => $data.showUpdateModal = false),\n    class: \"px-4 py-2 text-sm text-gray-700 bg-gray-200 rounded hover:bg-gray-300\"\n  }, \" Cancel \"), _createElementVNode(\"button\", {\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.updateEmployeePosition && $options.updateEmployeePosition(...args)),\n    class: \"flex items-center gap-1 px-4 py-2 text-sm text-white bg-orange-500 rounded hover:bg-orange-600\",\n    disabled: !$data.selectedEmployeeForUpdate || !$data.newPosition || $data.isLoading\n  }, _cache[60] || (_cache[60] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"save\", -1), _createTextVNode(\" Update \")]), 8, _hoisted_78)])])])) : _createCommentVNode(\"\", true), $data.showPrintAllModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_79, [_createElementVNode(\"div\", _hoisted_80, [_createElementVNode(\"div\", _hoisted_81, [_cache[63] || (_cache[63] = _createElementVNode(\"h2\", {\n    class: \"text-base font-medium text-gray-800 flex items-center gap-1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"print\"), _createTextVNode(\" Print Payslips \")], -1)), _createElementVNode(\"button\", {\n    onClick: _cache[20] || (_cache[20] = $event => $data.showPrintAllModal = false),\n    class: \"p-1 hover:bg-gray-100 rounded-full\"\n  }, _cache[62] || (_cache[62] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"close\", -1)]))]), _createElementVNode(\"div\", _hoisted_82, [_cache[65] || (_cache[65] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mb-2\"\n  }, \"Select Employees to Print\", -1)), $data.employeesWithPayslips.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_83, [_createElementVNode(\"label\", _hoisted_84, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $data.selectAll = $event),\n    onChange: _cache[22] || (_cache[22] = (...args) => $options.toggleSelectAll && $options.toggleSelectAll(...args)),\n    class: \"large-checkbox mr-2\"\n  }, null, 544), [[_vModelCheckbox, $data.selectAll]]), _cache[64] || (_cache[64] = _createElementVNode(\"span\", {\n    class: \"text-sm text-gray-900 font-medium\"\n  }, \"Select All\", -1))])])) : _createCommentVNode(\"\", true), $data.employeesWithPayslips.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_85, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employeesWithPayslips, emp => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: emp.id,\n      class: \"flex items-center py-2 border-b\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => $data.selectedEmployeesForPrint = $event),\n      value: emp.id,\n      class: \"large-checkbox mr-2\"\n    }, null, 8, _hoisted_86), [[_vModelCheckbox, $data.selectedEmployeesForPrint]]), _createElementVNode(\"span\", _hoisted_87, _toDisplayString(emp.name) + \" - Most Recent: \" + _toDisplayString(emp.latestPayslipDate), 1)]);\n  }), 128))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_88, \" No employees with generated payslips found in history. \"))]), _createElementVNode(\"div\", _hoisted_89, [_createElementVNode(\"button\", {\n    onClick: _cache[24] || (_cache[24] = $event => $data.showPrintAllModal = false),\n    class: \"px-4 py-2 text-sm text-gray-700 bg-gray-200 rounded hover:bg-gray-300\"\n  }, \" Cancel \"), _createElementVNode(\"button\", {\n    onClick: _cache[25] || (_cache[25] = (...args) => $options.printSelectedPayslips && $options.printSelectedPayslips(...args)),\n    class: \"flex items-center gap-1 px-4 py-2 text-sm text-white bg-purple-500 rounded hover:bg-purple-600\",\n    disabled: $data.selectedEmployeesForPrint.length === 0 || $data.isPrinting\n  }, [_cache[66] || (_cache[66] = _createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"print\", -1)), _createTextVNode(\" \" + _toDisplayString($data.isPrinting ? 'Printing...' : 'Print Selected'), 1)], 8, _hoisted_90)])])])) : _createCommentVNode(\"\", true), $data.statusMessage ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    class: _normalizeClass([$data.statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700', 'fixed bottom-4 right-4 p-3 rounded shadow-lg z-50 flex items-center gap-1 animate-fade-in text-sm'])\n  }, [_createElementVNode(\"span\", _hoisted_91, _toDisplayString($data.statusMessage.includes('successfully') ? 'check_circle' : 'error'), 1), _createTextVNode(\" \" + _toDisplayString($data.statusMessage), 1)], 2)) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_cache","$event","$data","searchQuery","type","placeholder","onClick","args","$options","refreshData","disabled","isLoading","_hoisted_7","_toDisplayString","_createTextVNode","_hoisted_6","generateAllPayslips","isGeneratingAll","_hoisted_9","_hoisted_8","showPrintModal","_hoisted_10","showUpdatePositionModal","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_Fragment","_renderList","paginatedEmployees","employee","id","showPayslipHistory","_hoisted_17","name","_hoisted_18","empNo","_hoisted_19","getPositionName","position","_hoisted_20","getHourlyRate","toLocaleString","_hoisted_21","getPositionSalary","_hoisted_16","length","_hoisted_22","colspan","_createCommentVNode","_hoisted_23","_hoisted_24","_hoisted_25","currentPage","totalPages","_hoisted_26","prevPage","_hoisted_27","nextPage","_hoisted_28","showHistoryModal","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","selectedEmployee","_hoisted_33","_withModifiers","generatePayslipNow","payslipGenerationStatus","generating","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","sortPreviousPayslips","_hoisted_39","sortPreviousField","sortPreviousAsc","_hoisted_40","_hoisted_41","sortedPreviousPayslips","payslip","salaryMonth","paydayType","_normalizeClass","selectedPayslip","selectPayslip","_hoisted_43","expectedPaydays","midMonthPayday","endMonthPayday","_hoisted_44","_hoisted_45","salary","_hoisted_46","payslipDataUrl","_hoisted_47","generatePayslip","canGeneratePayslip","_hoisted_48","_hoisted_42","_hoisted_49","hasUpdatedPosition","_hoisted_50","_hoisted_51","_hoisted_52","sortNewPayslips","_hoisted_53","sortNewField","sortNewAsc","_hoisted_54","_hoisted_55","sortedNewPayslips","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_56","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","src","onLoad","onIframeLoad","onError","onIframeError","_hoisted_68","downloadPayslip","iframeError","_hoisted_69","_hoisted_70","showUpdateModal","_hoisted_71","_hoisted_72","_hoisted_73","selectedEmployeeForUpdate","value","employees","emp","_hoisted_74","_hoisted_75","newPosition","positions","pos","_hoisted_76","_hoisted_77","updateEmployeePosition","_hoisted_78","showPrintAllModal","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","employeesWithPayslips","_hoisted_83","_hoisted_84","selectAll","onChange","toggleSelectAll","_hoisted_85","selectedEmployeesForPrint","_hoisted_86","_hoisted_87","latestPayslipDate","_hoisted_88","_hoisted_89","printSelectedPayslips","isPrinting","_hoisted_90","statusMessage","includes","_hoisted_91"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\admind\\SalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen p-1\">\r\n    <div class=\"max-w-8xl mx-auto\">\r\n      <!-- Header Section -->\r\n      <div class=\"bg-white rounded-lg shadow-sm p-4 mb-4\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\r\n          <div class=\"relative\">\r\n            <span class=\"material-icons absolute left-2 top-2 text-gray-400 text-sm\">search</span>\r\n            <input\r\n              v-model=\"searchQuery\"\r\n              type=\"text\"\r\n              placeholder=\"Search employee by name...\"\r\n              class=\"w-full pl-8 pr-3 py-2 text-sm rounded-md border border-gray-200 focus:ring-2 focus:ring-blue-400 focus:border-transparent\"\r\n            />\r\n          </div>\r\n          <button\r\n            @click=\"refreshData\"\r\n            class=\"flex items-center justify-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-sm py-2 px-4 rounded-md\"\r\n            :disabled=\"isLoading\"\r\n          >\r\n            <span class=\"material-icons text-sm\">{{ isLoading ? 'sync' : 'refresh' }}</span>\r\n            {{ isLoading ? 'Refreshing...' : 'Refresh Data' }}\r\n          </button>\r\n          <button\r\n            @click=\"generateAllPayslips\"\r\n            class=\"flex items-center justify-center gap-1 bg-green-500 hover:bg-green-600 text-white text-sm py-2 px-4 rounded-md\"\r\n            :disabled=\"isLoading || isGeneratingAll\"\r\n          >\r\n            <span class=\"material-icons text-sm\">{{ isGeneratingAll ? 'sync' : 'description' }}</span>\r\n            {{ isGeneratingAll ? 'Generating...' : 'Generate All' }}\r\n          </button>\r\n          <button\r\n            @click=\"showPrintModal\"\r\n            class=\"flex items-center justify-center gap-1 bg-purple-500 hover:bg-purple-600 text-white text-sm py-2 px-4 rounded-md\"\r\n            :disabled=\"isLoading\"\r\n          >\r\n            <span class=\"material-icons text-sm\">print</span>\r\n            Print All\r\n          </button>\r\n          <button\r\n            @click=\"showUpdatePositionModal\"\r\n            class=\"flex items-center justify-center gap-1 bg-orange-500 hover:bg-orange-600 text-white text-sm py-2 px-4 rounded-md\"\r\n            :disabled=\"isLoading\"\r\n          >\r\n            <span class=\"material-icons text-sm\">edit</span>\r\n            Update Position\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Employee List -->\r\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full divide-y divide-gray-200 mb-4\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\">\r\n                  <div class=\"flex items-center gap-1\">\r\n                    <span class=\"material-icons text-gray-400 text-sm\">person</span>\r\n                    Name\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\">\r\n                  <div class=\"flex items-center gap-1\">\r\n                    <span class=\"material-icons text-gray-400 text-sm\">badge</span>\r\n                    Employee ID\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\">\r\n                  <div class=\"flex items-center gap-1\">\r\n                    <span class=\"material-icons text-gray-400 text-sm\">work</span>\r\n                    Position\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\">\r\n                  <div class=\"flex items-center gap-1\">\r\n                    <span class=\"material-icons text-gray-400 text-sm\">payments</span>\r\n                    Hourly Rate\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 tracking-wider\">\r\n                  <div class=\"flex items-center gap-1\">\r\n                    <span class=\"material-icons text-gray-400 text-sm\">account_balance_wallet</span>\r\n                    Basic Salary\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"bg-white divide-y divide-gray-200\">\r\n              <tr\r\n                v-for=\"employee in paginatedEmployees\"\r\n                :key=\"employee.id\"\r\n                class=\"hover:bg-blue-50 transition-colors cursor-pointer\"\r\n                @click=\"showPayslipHistory(employee)\"\r\n              >\r\n                <td class=\"px-4 py-3 text-sm text-gray-900\">{{ employee.name }}</td>\r\n                <td class=\"px-4 py-3 text-sm text-gray-500\">{{ employee.empNo }}</td>\r\n                <td class=\"px-4 py-3 text-sm text-gray-500\">\r\n                  {{ getPositionName(employee.position) }}\r\n                </td>\r\n                <td class=\"px-4 py-3 text-sm text-gray-900\">\r\n                  ₱{{ getHourlyRate(employee.position).toLocaleString() }}\r\n                </td>\r\n                <td class=\"px-4 py-3 text-sm text-blue-600\">\r\n                  ₱{{ getPositionSalary(employee.position).toLocaleString() }}\r\n                </td>\r\n              </tr>\r\n              <tr v-if=\"paginatedEmployees.length === 0 && !isLoading\">\r\n                <td colspan=\"5\" class=\"px-4 py-8 text-center\">\r\n                  <div class=\"flex flex-col items-center gap-2\">\r\n                    <span class=\"material-icons text-gray-400 text-3xl\">search_off</span>\r\n                    <p class=\"text-sm text-gray-500\">No employees found.</p>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr v-if=\"isLoading\">\r\n                <td colspan=\"5\" class=\"px-4 py-8 text-center\">\r\n                  <div class=\"flex flex-col items-center gap-2\">\r\n                    <span class=\"material-icons text-blue-500 animate-spin text-3xl\">sync</span>\r\n                    <p class=\"text-sm text-gray-500\">Loading employees...</p>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"flex items-center justify-between px-4 py-3 bg-gray-50\">\r\n          <div class=\"text-xs text-gray-700\">\r\n            Showing page {{ currentPage }} of {{ totalPages }}\r\n          </div>\r\n          <div class=\"flex gap-2\">\r\n            <button\r\n              @click=\"prevPage\"\r\n              :disabled=\"currentPage === 1 || isLoading\"\r\n              class=\"inline-flex items-center px-3 py-1 text-xs bg-white border border-gray-300 rounded text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              <span class=\"material-icons text-sm mr-1\">chevron_left</span>\r\n              Previous\r\n            </button>\r\n            <button\r\n              @click=\"nextPage\"\r\n              :disabled=\"currentPage === totalPages || isLoading\"\r\n              class=\"inline-flex items-center px-3 py-1 text-xs bg-white border border-gray-300 rounded text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              Next\r\n              <span class=\"material-icons text-sm ml-1\">chevron_right</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Payslip History Modal -->\r\n      <div\r\n        v-if=\"showHistoryModal\"\r\n        class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\r\n      >\r\n        <div class=\"bg-white rounded-lg shadow-xl w-full max-w-5xl h-[80vh] flex flex-col\">\r\n          <div class=\"flex items-center justify-between p-4 border-b\">\r\n            <h2 class=\"text-base font-medium text-gray-800 flex items-center gap-1\">\r\n              <span class=\"material-icons text-sm\">history</span>\r\n              Payslip History - {{ selectedEmployee?.name }}\r\n            </h2>\r\n            <div class=\"flex items-center gap-2\">\r\n              <button\r\n                @click.stop=\"generatePayslipNow(selectedEmployee)\"\r\n                class=\"flex items-center justify-center gap-1 bg-yellow-500 hover:bg-yellow-600 text-white text-sm py-2 px-4 rounded-md\"\r\n                :disabled=\"isLoading || payslipGenerationStatus.generating\"\r\n              >\r\n                <span class=\"material-icons text-sm\">play_arrow</span>\r\n                {{ payslipGenerationStatus.generating ? 'Generating...' : 'Generate Now' }}\r\n              </button>\r\n              <button\r\n                @click=\"showHistoryModal = false\"\r\n                class=\"p-1 hover:bg-gray-100 rounded-full\"\r\n              >\r\n                <span class=\"material-icons text-sm\">close</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex flex-1 overflow-hidden\">\r\n            <div class=\"w-1/2 p-4 overflow-y-auto border-r\">\r\n              <!-- Previous Position Payslips (Initial Position) -->\r\n              <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Previous Position Payslips</h3>\r\n              <table class=\"min-w-full divide-y divide-gray-200\">\r\n                <thead class=\"bg-gray-50 sticky top-0\">\r\n                  <tr>\r\n                    <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\" @click=\"sortPreviousPayslips('payDate')\">\r\n                      Pay Date <span class=\"material-icons text-xs\">{{ sortPreviousField === 'payDate' ? (sortPreviousAsc ? 'arrow_upward' : 'arrow_downward') : '' }}</span>\r\n                    </th>\r\n                    <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\" @click=\"sortPreviousPayslips('position')\">\r\n                      Position <span class=\"material-icons text-xs\">{{ sortPreviousField === 'position' ? (sortPreviousAsc ? 'arrow_upward' : 'arrow_downward') : '' }}</span>\r\n                    </th>\r\n                    <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Salary</th>\r\n                    <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n                    <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"divide-y divide-gray-200\">\r\n                  <tr\r\n                    v-for=\"payslip in sortedPreviousPayslips\"\r\n                    :key=\"`${payslip.salaryMonth}-${payslip.paydayType}`\"\r\n                    class=\"hover:bg-blue-50 cursor-pointer\"\r\n                    :class=\"{ 'bg-blue-100': selectedPayslip?.salaryMonth === payslip.salaryMonth && selectedPayslip?.paydayType === payslip.paydayType }\"\r\n                    @click=\"selectPayslip(payslip)\"\r\n                  >\r\n                    <td class=\"px-4 py-2 text-sm text-gray-900\">\r\n                      {{ payslip.paydayType === 'mid-month' ? payslip.expectedPaydays.midMonthPayday : payslip.expectedPaydays.endMonthPayday }}\r\n                    </td>\r\n                    <td class=\"px-4 py-2 text-sm text-gray-500\">\r\n                      {{ getPositionName(payslip.position) }}\r\n                    </td>\r\n                    <td class=\"px-4 py-2 text-sm text-gray-500\">\r\n                      ₱{{ payslip.salary.toLocaleString() }}\r\n                    </td>\r\n                    <td class=\"px-4 py-2 text-sm text-gray-500\">\r\n                      {{ payslip.payslipDataUrl ? 'Generated' : 'Pending' }}\r\n                    </td>\r\n                    <td class=\"px-4 py-2\">\r\n                      <button\r\n                        v-if=\"!payslip.payslipDataUrl\"\r\n                        @click.stop=\"generatePayslip(payslip)\"\r\n                        class=\"inline-flex items-center gap-1 px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600\"\r\n                        :disabled=\"!canGeneratePayslip(payslip) || payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating\"\r\n                      >\r\n                        <span class=\"material-icons text-sm\">description</span>\r\n                        {{ payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating ? 'Generating...' : 'Generate' }}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                  <tr v-if=\"sortedPreviousPayslips.length === 0\">\r\n                    <td colspan=\"5\" class=\"px-4 py-4 text-center text-sm text-gray-500\">No previous payslips available.</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <!-- New Position Payslips (Only After Update) -->\r\n              <div v-if=\"hasUpdatedPosition\">\r\n                <h3 class=\"text-sm font-medium text-gray-700 mt-6 mb-2\">New Position Payslips</h3>\r\n                <table class=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead class=\"bg-gray-50 sticky top-0\">\r\n                    <tr>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\" @click=\"sortNewPayslips('payDate')\">\r\n                        Pay Date <span class=\"material-icons text-xs\">{{ sortNewField === 'payDate' ? (sortNewAsc ? 'arrow_upward' : 'arrow_downward') : '' }}</span>\r\n                      </th>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500 cursor-pointer\" @click=\"sortNewPayslips('position')\">\r\n                        Position <span class=\"material-icons text-xs\">{{ sortNewField === 'position' ? (sortNewAsc ? 'arrow_upward' : 'arrow_downward') : '' }}</span>\r\n                      </th>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Salary</th>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody class=\"divide-y divide-gray-200\">\r\n                    <tr\r\n                      v-for=\"payslip in sortedNewPayslips\"\r\n                      :key=\"`${payslip.salaryMonth}-${payslip.paydayType}`\"\r\n                      class=\"hover:bg-blue-50 cursor-pointer\"\r\n                      :class=\"{ 'bg-blue-100': selectedPayslip?.salaryMonth === payslip.salaryMonth && selectedPayslip?.paydayType === payslip.paydayType }\"\r\n                      @click=\"selectPayslip(payslip)\"\r\n                    >\r\n                      <td class=\"px-4 py-2 text-sm text-gray-900\">\r\n                        {{ payslip.paydayType === 'mid-month' ? payslip.expectedPaydays.midMonthPayday : payslip.expectedPaydays.endMonthPayday }}\r\n                      </td>\r\n                      <td class=\"px-4 py-2 text-sm text-gray-500\">\r\n                        {{ getPositionName(payslip.position) }}\r\n                      </td>\r\n                      <td class=\"px-4 py-2 text-sm text-gray-500\">\r\n                        ₱{{ payslip.salary.toLocaleString() }}\r\n                      </td>\r\n                      <td class=\"px-4 py-2 text-sm text-gray-500\">\r\n                        {{ payslip.payslipDataUrl ? 'Generated' : 'Pending' }}\r\n                      </td>\r\n                      <td class=\"px-4 py-2\">\r\n                        <button\r\n                          v-if=\"!payslip.payslipDataUrl\"\r\n                          @click.stop=\"generatePayslip(payslip)\"\r\n                          class=\"inline-flex items-center gap-1 px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600\"\r\n                          :disabled=\"!canGeneratePayslip(payslip) || payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating\"\r\n                        >\r\n                          <span class=\"material-icons text-sm\">description</span>\r\n                          {{ payslipGenerationStatus[`${payslip.salaryMonth}-${payslip.paydayType}`]?.generating ? 'Generating...' : 'Generate' }}\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr v-if=\"sortedNewPayslips.length === 0\">\r\n                      <td colspan=\"5\" class=\"px-4 py-4 text-center text-sm text-gray-500\">No new payslips available.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"w-1/2 p-4 overflow-y-auto\">\r\n              <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Payslip Preview</h3>\r\n              <div v-if=\"selectedPayslip && selectedPayslip.payslipDataUrl\" class=\"flex flex-col h-full\">\r\n                <div class=\"mb-4\">\r\n                  <p class=\"text-sm text-gray-600\">\r\n                    Position: {{ getPositionName(selectedPayslip.position) }} | \r\n                    Salary: ₱{{ selectedPayslip.salary.toLocaleString() }}\r\n                  </p>\r\n                </div>\r\n                <iframe\r\n                  :src=\"selectedPayslip.payslipDataUrl\"\r\n                  class=\"w-full h-[50vh] rounded border mb-4\"\r\n                  @load=\"onIframeLoad\"\r\n                  @error=\"onIframeError\"\r\n                ></iframe>\r\n                <button\r\n                  @click=\"downloadPayslip\"\r\n                  class=\"flex items-center justify-center gap-1 bg-blue-500 hover:bg-blue-600 text-white text-sm py-2 px-4 rounded-md\"\r\n                >\r\n                  <span class=\"material-icons text-sm\">download</span>\r\n                  Download PDF\r\n                </button>\r\n                <div\r\n                  v-if=\"iframeError\"\r\n                  class=\"mt-3 p-3 bg-red-50 text-red-700 rounded text-sm flex items-center gap-1\"\r\n                >\r\n                  <span class=\"material-icons text-sm\">error</span>\r\n                  Error loading payslip. Please try again.\r\n                </div>\r\n              </div>\r\n              <div v-else class=\"text-sm text-gray-500 text-center mt-4\">\r\n                Select a payslip from the list to preview.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Update Position Modal -->\r\n      <div\r\n        v-if=\"showUpdateModal\"\r\n        class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\r\n      >\r\n        <div class=\"bg-white rounded-lg shadow-xl w-full max-w-md p-6\">\r\n          <h2 class=\"text-base font-medium text-gray-800 mb-4 flex items-center gap-1\">\r\n            <span class=\"material-icons text-sm\">edit</span>\r\n            Update Employee Position\r\n          </h2>\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm text-gray-700 mb-1\">Select Employee</label>\r\n            <select\r\n              v-model=\"selectedEmployeeForUpdate\"\r\n              class=\"w-full p-2 border rounded text-sm\"\r\n            >\r\n              <option value=\"\" disabled>Select an employee</option>\r\n              <option v-for=\"emp in employees\" :key=\"emp.id\" :value=\"emp.id\">\r\n                {{ emp.name }} ({{ getPositionName(emp.position) }})\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label class=\"block text-sm text-gray-700 mb-1\">New Position</label>\r\n            <select\r\n              v-model=\"newPosition\"\r\n              class=\"w-full p-2 border rounded text-sm\"\r\n            >\r\n              <option value=\"\" disabled>Select a position</option>\r\n              <option v-for=\"pos in positions\" :key=\"pos.name\" :value=\"pos.name\">\r\n                {{ pos.name }} (₱{{ pos.salary.toLocaleString() }})\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"flex justify-end gap-2\">\r\n            <button\r\n              @click=\"showUpdateModal = false\"\r\n              class=\"px-4 py-2 text-sm text-gray-700 bg-gray-200 rounded hover:bg-gray-300\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              @click=\"updateEmployeePosition\"\r\n              class=\"flex items-center gap-1 px-4 py-2 text-sm text-white bg-orange-500 rounded hover:bg-orange-600\"\r\n              :disabled=\"!selectedEmployeeForUpdate || !newPosition || isLoading\"\r\n            >\r\n              <span class=\"material-icons text-sm\">save</span>\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Print All Modal -->\r\n      <div\r\n        v-if=\"showPrintAllModal\"\r\n        class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\r\n      >\r\n        <div class=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[80vh] flex flex-col\">\r\n          <div class=\"flex items-center justify-between p-4 border-b\">\r\n            <h2 class=\"text-base font-medium text-gray-800 flex items-center gap-1\">\r\n              <span class=\"material-icons text-sm\">print</span>\r\n              Print Payslips\r\n            </h2>\r\n            <button\r\n              @click=\"showPrintAllModal = false\"\r\n              class=\"p-1 hover:bg-gray-100 rounded-full\"\r\n            >\r\n              <span class=\"material-icons text-sm\">close</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-4 overflow-y-auto\">\r\n            <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Select Employees to Print</h3>\r\n            <div v-if=\"employeesWithPayslips.length > 0\" class=\"mb-4\">\r\n              <label class=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-model=\"selectAll\"\r\n                  @change=\"toggleSelectAll\"\r\n                  class=\"large-checkbox mr-2\"\r\n                />\r\n                <span class=\"text-sm text-gray-900 font-medium\">Select All</span>\r\n              </label>\r\n            </div>\r\n            <div v-if=\"employeesWithPayslips.length > 0\">\r\n              <div v-for=\"emp in employeesWithPayslips\" :key=\"emp.id\" class=\"flex items-center py-2 border-b\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-model=\"selectedEmployeesForPrint\"\r\n                  :value=\"emp.id\"\r\n                  class=\"large-checkbox mr-2\"\r\n                />\r\n                <span class=\"text-sm text-gray-900\">{{ emp.name }} - Most Recent: {{ emp.latestPayslipDate }}</span>\r\n              </div>\r\n            </div>\r\n            <div v-else class=\"text-sm text-gray-500 text-center py-4\">\r\n              No employees with generated payslips found in history.\r\n            </div>\r\n          </div>\r\n          <div class=\"p-4 border-t flex justify-end gap-2\">\r\n            <button\r\n              @click=\"showPrintAllModal = false\"\r\n              class=\"px-4 py-2 text-sm text-gray-700 bg-gray-200 rounded hover:bg-gray-300\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              @click=\"printSelectedPayslips\"\r\n              class=\"flex items-center gap-1 px-4 py-2 text-sm text-white bg-purple-500 rounded hover:bg-purple-600\"\r\n              :disabled=\"selectedEmployeesForPrint.length === 0 || isPrinting\"\r\n            >\r\n              <span class=\"material-icons text-sm\">print</span>\r\n              {{ isPrinting ? 'Printing...' : 'Print Selected' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Toast Messages -->\r\n      <div\r\n        v-if=\"statusMessage\"\r\n        :class=\"[\r\n          statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700',\r\n          'fixed bottom-4 right-4 p-3 rounded shadow-lg z-50 flex items-center gap-1 animate-fade-in text-sm'\r\n        ]\"\r\n      >\r\n        <span class=\"material-icons text-sm\">\r\n          {{ statusMessage.includes('successfully') ? 'check_circle' : 'error' }}\r\n        </span>\r\n        {{ statusMessage }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport moment from 'moment';\r\n\r\njsPDF.prototype.autoTable = autoTable.default;\r\n\r\nexport default {\r\n  name: 'SalarySlips',\r\n  data() {\r\n    return {\r\n      employees: [],\r\n      positions: [],\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n      payslipGenerationStatus: {},\r\n      isLoading: false,\r\n      isGeneratingAll: false,\r\n      statusMessage: '',\r\n      showHistoryModal: false,\r\n      selectedEmployee: null,\r\n      selectedPayslip: null,\r\n      payslipHistory: [],\r\n      allPayslipHistories: {},\r\n      iframeError: false,\r\n      config: {\r\n        minimumWage: 0,\r\n        deMinimisLimit: 0,\r\n        regularHolidays: [],\r\n        specialNonWorkingDays: [],\r\n      },\r\n      showPrintAllModal: false,\r\n      employeesWithPayslips: [],\r\n      selectedEmployeesForPrint: [],\r\n      isPrinting: false,\r\n      selectAll: false,\r\n      showUpdateModal: false,\r\n      selectedEmployeeForUpdate: '',\r\n      newPosition: '',\r\n      sortPreviousField: 'payDate',\r\n      sortPreviousAsc: true,\r\n      sortNewField: 'payDate',\r\n      sortNewAsc: true,\r\n      currentDate: new Date('2025-03-17'), // Matches your initial context; adjust as needed\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter((employee) => {\r\n        const name = employee && employee.name ? employee.name : '';\r\n        return name.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n      });\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage) || 1;\r\n    },\r\n    paginatedEmployees() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredEmployees.slice(start, end).sort((a, b) => {\r\n        return a.position.localeCompare(b.position);\r\n      });\r\n    },\r\n    sortedPositionHistory() {\r\n      if (!this.selectedEmployee || !this.selectedEmployee.positionHistory) {\r\n        return [{\r\n          position: this.selectedEmployee?.position || 'N/A',\r\n          salary: this.selectedEmployee?.salary || 0,\r\n          startDate: this.selectedEmployee?.hireDate || this.currentDate.toISOString().split('T')[0],\r\n          endDate: null\r\n        }];\r\n      }\r\n      return [...this.selectedEmployee.positionHistory].sort((a, b) => \r\n        new Date(a.startDate) - new Date(b.startDate)\r\n      );\r\n    },\r\n    initialPosition() {\r\n      return this.sortedPositionHistory[0];\r\n    },\r\n    latestPosition() {\r\n      return this.sortedPositionHistory[this.sortedPositionHistory.length - 1];\r\n    },\r\n    hasUpdatedPosition() {\r\n      return this.sortedPositionHistory.length > 1;\r\n    },\r\n    sortedPreviousPayslips() {\r\n      const previousPayslips = this.payslipHistory.filter(payslip => \r\n        payslip.position === this.initialPosition.position\r\n      );\r\n      return previousPayslips.sort((a, b) => {\r\n        if (this.sortPreviousField === 'payDate') {\r\n          const dateA = moment(a.paydayType === 'mid-month' ? a.expectedPaydays.midMonthPayday : a.expectedPaydays.endMonthPayday, 'D MMMM YYYY');\r\n          const dateB = moment(b.paydayType === 'mid-month' ? b.expectedPaydays.midMonthPayday : b.expectedPaydays.endMonthPayday, 'D MMMM YYYY');\r\n          return this.sortPreviousAsc ? dateA - dateB : dateB - dateA;\r\n        } else if (this.sortPreviousField === 'position') {\r\n          const posA = this.getPositionName(a.position);\r\n          const posB = this.getPositionName(b.position);\r\n          return this.sortPreviousAsc ? posA.localeCompare(posB) : posB.localeCompare(posA);\r\n        }\r\n        return 0;\r\n      });\r\n    },\r\n    sortedNewPayslips() {\r\n      const newPayslips = this.payslipHistory.filter(payslip => \r\n        payslip.position === this.latestPosition.position && \r\n        this.hasUpdatedPosition && \r\n        moment(payslip.salaryMonth, 'YYYY-MM').isSameOrAfter(moment(this.latestPosition.startDate, 'YYYY-MM-DD'), 'month')\r\n      );\r\n      return newPayslips.sort((a, b) => {\r\n        if (this.sortNewField === 'payDate') {\r\n          const dateA = moment(a.paydayType === 'mid-month' ? a.expectedPaydays.midMonthPayday : a.expectedPaydays.endMonthPayday, 'D MMMM YYYY');\r\n          const dateB = moment(b.paydayType === 'mid-month' ? b.expectedPaydays.midMonthPayday : b.expectedPaydays.endMonthPayday, 'D MMMM YYYY');\r\n          return this.sortNewAsc ? dateA - dateB : dateB - dateA;\r\n        } else if (this.sortNewField === 'position') {\r\n          const posA = this.getPositionName(a.position);\r\n          const posB = this.getPositionName(b.position);\r\n          return this.sortNewAsc ? posA.localeCompare(posB) : posB.localeCompare(posA);\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchConfig();\r\n    await this.fetchPositionsWithRetry();\r\n    await this.fetchEmployees();\r\n  },\r\n  methods: {\r\n    async fetchConfig() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/config', {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        this.config = {\r\n          minimumWage: response.data.minimumWage || 610,\r\n          deMinimisLimit: response.data.deMinimisLimit || 10000,\r\n          regularHolidays: response.data.regularHolidays || [],\r\n          specialNonWorkingDays: response.data.specialNonWorkingDays || [],\r\n        };\r\n      } catch (error) {\r\n        console.error('Error fetching config:', error);\r\n        this.showErrorMessage('Failed to load configuration. Using defaults.');\r\n        this.config = {\r\n          minimumWage: 610,\r\n          deMinimisLimit: 10000,\r\n          regularHolidays: [],\r\n          specialNonWorkingDays: [],\r\n        };\r\n      }\r\n    },\r\n    async fetchPositionsWithRetry(retries = 3, delay = 1000) {\r\n      for (let i = 0; i < retries; i++) {\r\n        try {\r\n          const response = await axios.get('http://localhost:7777/api/positions', {\r\n            headers: { 'user-role': 'admin' },\r\n          });\r\n          this.positions = response.data.map(position => ({\r\n            name: position.name,\r\n            salary: position.salary\r\n          }));\r\n          return;\r\n        } catch (error) {\r\n          console.error(`Attempt ${i + 1} to fetch positions failed:`, error);\r\n          if (i === retries - 1) {\r\n            this.showErrorMessage('Failed to load positions after multiple attempts.');\r\n          } else {\r\n            await new Promise(resolve => setTimeout(resolve, delay));\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getPositionName(positionName) {\r\n      const position = this.positions.find(p => p.name.trim().toLowerCase() === positionName?.trim().toLowerCase());\r\n      return position ? position.name : positionName || 'Unknown Position';\r\n    },\r\n    getPositionSalary(positionName) {\r\n      const position = this.positions.find(p => p.name.trim().toLowerCase() === positionName?.trim().toLowerCase());\r\n      return position ? position.salary : 0;\r\n    },\r\n    getHourlyRate(positionName) {\r\n      const salary = this.getPositionSalary(positionName);\r\n      return salary / (8 * 22);\r\n    },\r\n    async fetchEmployees() {\r\n      this.isLoading = true;\r\n      this.statusMessage = '';\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees', {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        this.employees = response.data.map((employee) => {\r\n          const latestPosition = this.getLatestPosition(employee);\r\n          const name = `${employee.firstName || ''} ${employee.lastName || ''}`.trim() || 'Unnamed Employee';\r\n          return {\r\n            ...employee,\r\n            name,\r\n            position: latestPosition.position,\r\n            salary: latestPosition.salary,\r\n            positionHistory: Array.isArray(employee.positionHistory) && employee.positionHistory.length > 0 ? employee.positionHistory : [{\r\n              position: employee.position || 'N/A',\r\n              salary: employee.salary || 0,\r\n              startDate: employee.hireDate || this.currentDate.toISOString().split('T')[0],\r\n              endDate: null\r\n            }],\r\n            createdAt: employee.createdAt || employee.hireDate,\r\n            updatedAt: employee.updatedAt\r\n          };\r\n        });\r\n        this.showSuccessMessage('Employees loaded successfully!');\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        this.showErrorMessage(`Failed to load employees: ${error.message}`);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async refreshData() {\r\n      this.isLoading = true;\r\n      try {\r\n        await this.fetchConfig();\r\n        await this.fetchPositionsWithRetry();\r\n        await this.fetchEmployees();\r\n        if (this.showHistoryModal && this.selectedEmployee) {\r\n          await this.showPayslipHistory(this.selectedEmployee);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error refreshing data:', error);\r\n        this.showErrorMessage(`Failed to refresh data: ${error.message}`);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async showPayslipHistory(employee) {\r\n      this.isLoading = true;\r\n      if (!employee || !employee.id || !employee.empNo) {\r\n        this.showErrorMessage('Invalid employee data');\r\n        console.error('Invalid employee:', employee);\r\n        this.isLoading = false;\r\n        return;\r\n      }\r\n\r\n      this.selectedEmployee = { \r\n        ...employee, \r\n        positionHistory: Array.isArray(employee.positionHistory) && employee.positionHistory.length > 0 ? employee.positionHistory : [{\r\n          position: employee.position || 'N/A',\r\n          salary: employee.salary || 0,\r\n          startDate: employee.hireDate || this.currentDate.toISOString().split('T')[0],\r\n          endDate: null\r\n        }]\r\n      };\r\n\r\n      const today = moment(this.currentDate);\r\n      const hireDate = moment(this.selectedEmployee.hireDate || this.currentDate);\r\n      let backendPayslips = [];\r\n      try {\r\n        const response = await axios.get(`http://localhost:7777/api/payslips/${this.selectedEmployee.id}`, {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        backendPayslips = response.data || [];\r\n        console.log('Fetched backend payslips:', backendPayslips);\r\n      } catch (error) {\r\n        console.error('Error fetching payslips:', error);\r\n      }\r\n\r\n      const payslipHistory = [];\r\n      let currentPayDate = hireDate.clone();\r\n\r\n      while (currentPayDate.isSameOrBefore(today, 'day')) {\r\n        const salaryMonth = currentPayDate.format('YYYY-MM');\r\n        const expectedPaydays = this.getExpectedPayday(hireDate.toDate(), salaryMonth);\r\n        const payDate = currentPayDate.clone();\r\n        const positionAtPayDate = this.getActivePositionForDate(this.selectedEmployee.positionHistory, payDate);\r\n        const paydayType = payDate.date() === 15 ? 'mid-month' : 'end-of-month'; // Adjusted to match backend expectation\r\n        const existingPayslip = backendPayslips.find(p => \r\n          p.salaryMonth === salaryMonth && p.paydayType === paydayType && moment(p.payDate).isSame(payDate, 'day')\r\n        ) || {};\r\n\r\n        const payslip = {\r\n          salaryMonth,\r\n          paydayType,\r\n          payDate: payDate.format('YYYY-MM-DD'),\r\n          position: positionAtPayDate.position,\r\n          salary: positionAtPayDate.salary,\r\n          totalSalary: existingPayslip.salary ? this.calculateNetSalary({ ...this.selectedEmployee, position: positionAtPayDate.position, salary: positionAtPayDate.salary }) : null,\r\n          payslipDataUrl: existingPayslip.payslipData ? `data:application/pdf;base64,${existingPayslip.payslipData}` : null,\r\n          employee: { \r\n            ...this.selectedEmployee, \r\n            position: positionAtPayDate.position, \r\n            salary: positionAtPayDate.salary, \r\n            salaryMonth: payDate.format('YYYY-MM-DD')\r\n          },\r\n          expectedPaydays,\r\n        };\r\n        payslipHistory.push(payslip);\r\n\r\n        if (!payslip.payslipDataUrl && today.isSameOrAfter(payDate, 'day')) {\r\n          await this.generatePayslip(payslip);\r\n        }\r\n\r\n        currentPayDate.add(15, 'days'); // Increment by 15 days\r\n      }\r\n\r\n      this.allPayslipHistories[this.selectedEmployee.id] = payslipHistory;\r\n      this.payslipHistory = payslipHistory;\r\n      this.selectedPayslip = payslipHistory.find(p => p.payslipDataUrl) || payslipHistory[0] || null;\r\n      this.showHistoryModal = true;\r\n      this.isLoading = false;\r\n    },\r\n    canGeneratePayslip(payslip) {\r\n      const today = moment(this.currentDate);\r\n      const payDate = moment(payslip.paydayType === 'mid-month' ? payslip.expectedPaydays.midMonthPayday : payslip.expectedPaydays.endMonthPayday, 'D MMMM YYYY');\r\n      return today.isSameOrAfter(payDate, 'day') && !payslip.payslipDataUrl;\r\n    },\r\n    async generatePayslip(payslip) {\r\n      const employee = payslip.employee;\r\n      if (!employee || !employee.id || !employee.empNo) {\r\n        this.showErrorMessage('Employee data is incomplete.');\r\n        console.error('Invalid employee data:', employee);\r\n        return;\r\n      }\r\n\r\n      const payDate = moment(\r\n        payslip.paydayType === 'mid-month' \r\n          ? `${payslip.salaryMonth}-15` \r\n          : `${payslip.salaryMonth}-${moment(payslip.salaryMonth).daysInMonth()}`, \r\n        'YYYY-MM-DD'\r\n      );\r\n      if (!payDate.isValid()) {\r\n        this.showErrorMessage('Invalid pay date calculated.');\r\n        console.error('Invalid payDate:', payslip.salaryMonth, payslip.paydayType);\r\n        return;\r\n      }\r\n\r\n      const positionHistory = Array.isArray(employee.positionHistory) ? employee.positionHistory : [];\r\n      const activePosition = this.getActivePositionForDate(positionHistory, payDate);\r\n      if (!activePosition || !activePosition.position || activePosition.salary === undefined) {\r\n        this.showErrorMessage('Invalid position or salary for this date.');\r\n        console.error('Invalid activePosition:', activePosition, 'Position History:', positionHistory);\r\n        return;\r\n      }\r\n\r\n      const updatedEmployee = { ...employee, position: activePosition.position, salary: activePosition.salary };\r\n      const key = `${payslip.salaryMonth}-${payslip.paydayType}`;\r\n      this.payslipGenerationStatus[key] = { generating: true };\r\n\r\n      try {\r\n        const payslipData = this.createPayslipData(updatedEmployee);\r\n        const pdfBlob = await this.generatePdf(payslipData);\r\n        const base64Data = await this.blobToBase64(pdfBlob);\r\n        const url = URL.createObjectURL(pdfBlob);\r\n\r\n        const payload = {\r\n          employeeId: Number(employee.id), // Ensure number\r\n          empNo: String(employee.empNo),\r\n          payslipData: base64Data.split(',')[1], // Remove \"data:application/pdf;base64,\" prefix\r\n          salaryMonth: payslip.salaryMonth,\r\n          paydayType: payslip.paydayType,\r\n          position: activePosition.position,\r\n          salary: Number(activePosition.salary) // Ensure number\r\n        };\r\n\r\n        console.log('Sending payload to backend:', payload);\r\n\r\n        if (!payload.employeeId || !payload.empNo || !payload.payslipData || \r\n            !payload.salaryMonth || !payload.paydayType || !payload.position || \r\n            payload.salary === undefined || isNaN(payload.salary)) {\r\n          throw new Error('Payload is missing required fields or contains invalid data');\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:7777/api/payslips/generate', payload, {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n\r\n        console.log('Payslip generated successfully:', response.data);\r\n        if (response.status === 201 || response.status === 200) {\r\n          payslip.payslipDataUrl = url;\r\n          payslip.position = activePosition.position;\r\n          payslip.salary = activePosition.salary;\r\n          payslip.totalSalary = this.calculateNetSalary(updatedEmployee);\r\n          this.selectedPayslip = payslip;\r\n\r\n          const employeeHistory = this.allPayslipHistories[employee.id] || [];\r\n          const updatedHistory = employeeHistory.map(p =>\r\n            p.salaryMonth === payslip.salaryMonth && p.paydayType === payslip.paydayType ? payslip : p\r\n          );\r\n          if (!employeeHistory.some(p => p.salaryMonth === payslip.salaryMonth && p.paydayType === payslip.paydayType)) {\r\n            updatedHistory.push(payslip);\r\n          }\r\n          this.allPayslipHistories[employee.id] = updatedHistory;\r\n          this.payslipHistory = updatedHistory;\r\n\r\n          this.showSuccessMessage(`Payslip generated for ${employee.name} - ${payslip.paydayType === 'mid-month' ? payslip.expectedPaydays.midMonthPayday : payslip.expectedPaydays.endMonthPayday}!`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error generating payslip:', error);\r\n        this.showErrorMessage(`Failed to generate payslip: ${error.message}`);\r\n        if (error.response) {\r\n          console.error('Backend response:', error.response.data);\r\n        }\r\n      } finally {\r\n        this.payslipGenerationStatus[key] = { generating: false };\r\n      }\r\n    },\r\n    async generateAllPayslips() {\r\n      this.isGeneratingAll = true;\r\n      this.statusMessage = '';\r\n      try {\r\n        for (const employee of this.employees) {\r\n          if (!this.allPayslipHistories[employee.id]) {\r\n            await this.showPayslipHistory(employee);\r\n            this.showHistoryModal = false;\r\n          }\r\n        }\r\n\r\n        const payslipsToGenerate = [];\r\n        for (const employee of this.employees) {\r\n          const history = this.allPayslipHistories[employee.id] || [];\r\n          const duePayslips = history.filter(payslip => this.canGeneratePayslip(payslip));\r\n          payslipsToGenerate.push(...duePayslips);\r\n        }\r\n\r\n        if (payslipsToGenerate.length === 0) {\r\n          this.showErrorMessage('No payslips are due for generation.');\r\n          return;\r\n        }\r\n\r\n        for (const payslip of payslipsToGenerate) {\r\n          await this.generatePayslip(payslip);\r\n        }\r\n\r\n        this.showSuccessMessage(`Generated ${payslipsToGenerate.length} payslips successfully!`);\r\n      } catch (error) {\r\n        console.error('Error generating all payslips:', error);\r\n        this.showErrorMessage(`Failed to generate all payslips: ${error.message}`);\r\n      } finally {\r\n        this.isGeneratingAll = false;\r\n      }\r\n    },\r\n    getLatestPosition(employee) {\r\n      if (!Array.isArray(employee.positionHistory) || employee.positionHistory.length === 0) {\r\n        return {\r\n          position: employee.position || 'N/A',\r\n          salary: employee.salary || 0,\r\n          startDate: employee.hireDate || this.currentDate.toISOString().split('T')[0]\r\n        };\r\n      }\r\n      const sortedHistory = [...employee.positionHistory].sort((a, b) => new Date(b.startDate) - new Date(a.startDate));\r\n      return sortedHistory.find(h => !h.endDate) || sortedHistory[0];\r\n    },\r\n    getActivePositionForDate(positionHistory, date) {\r\n      if (!Array.isArray(positionHistory) || positionHistory.length === 0) {\r\n        return { \r\n          position: 'N/A', \r\n          salary: 0, \r\n          startDate: this.selectedEmployee?.hireDate || this.currentDate.toISOString().split('T')[0] \r\n        };\r\n      }\r\n      const targetDate = moment(date);\r\n      const activePosition = positionHistory.find(history => {\r\n        const startDate = moment(history.startDate);\r\n        const endDate = history.endDate ? moment(history.endDate) : moment(this.currentDate);\r\n        return targetDate.isSameOrAfter(startDate, 'day') && targetDate.isSameOrBefore(endDate, 'day');\r\n      });\r\n      return activePosition || positionHistory[positionHistory.length - 1];\r\n    },\r\n    async generatePayslipNow(employee) {\r\n      this.payslipGenerationStatus.generating = true;\r\n      try {\r\n        const today = moment(this.currentDate);\r\n        const salaryMonth = today.format('YYYY-MM');\r\n        const lastDayOfMonth = today.clone().endOf('month').date();\r\n        const payDate = today.isBefore(moment(`${salaryMonth}-15`, 'YYYY-MM-DD').endOf('day')) \r\n          ? moment(`${salaryMonth}-15`, 'YYYY-MM-DD') \r\n          : moment(`${salaryMonth}-${lastDayOfMonth}`, 'YYYY-MM-DD');\r\n        const activePosition = this.getActivePositionForDate(employee.positionHistory, payDate);\r\n        if (!activePosition || !activePosition.position || activePosition.salary === undefined) {\r\n          this.showErrorMessage('No valid position for current date.');\r\n          console.error('Invalid activePosition:', activePosition);\r\n          return;\r\n        }\r\n        const updatedEmployee = { ...employee, position: activePosition.position, salary: activePosition.salary };\r\n        const expectedPaydays = this.getExpectedPayday(employee.hireDate, salaryMonth);\r\n\r\n        const paydayType = payDate.date() === 15 ? 'mid-month' : 'end-of-month';\r\n        const employeeSalaryMonth = `${salaryMonth}-${paydayType === 'mid-month' ? '15' : lastDayOfMonth}`;\r\n\r\n        let payslipData = {\r\n          salaryMonth,\r\n          paydayType,\r\n          position: activePosition.position,\r\n          salary: activePosition.salary,\r\n          employee: { ...updatedEmployee, salaryMonth: employeeSalaryMonth },\r\n          expectedPaydays,\r\n        };\r\n\r\n        const pdfPayslipData = this.createPayslipData(payslipData.employee);\r\n        const pdfBlob = await this.generatePdf(pdfPayslipData);\r\n        const url = URL.createObjectURL(pdfBlob);\r\n        const base64Data = await this.blobToBase64(pdfBlob);\r\n\r\n        const payload = {\r\n          employeeId: Number(employee.id),\r\n          empNo: String(employee.empNo),\r\n          payslipData: base64Data.split(',')[1], // Remove prefix\r\n          salaryMonth: payslipData.salaryMonth,\r\n          paydayType: payslipData.paydayType,\r\n          position: activePosition.position,\r\n          salary: Number(activePosition.salary)\r\n        };\r\n\r\n        console.log('Sending payload to backend (generatePayslipNow):', payload);\r\n\r\n        if (!payload.employeeId || !payload.empNo || !payload.payslipData || \r\n            !payload.salaryMonth || !payload.paydayType || !payload.position || \r\n            payload.salary === undefined || isNaN(payload.salary)) {\r\n          throw new Error('Payload is missing required fields or contains invalid data');\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:7777/api/payslips/generate', payload, {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n\r\n        console.log('Payslip generated successfully (generatePayslipNow):', response.data);\r\n        if (response.status === 201 || response.status === 200) {\r\n          payslipData.payslipDataUrl = url;\r\n          payslipData.totalSalary = this.calculateNetSalary(payslipData.employee);\r\n          let employeeHistory = this.allPayslipHistories[employee.id] || [];\r\n          const existingPayslipIndex = employeeHistory.findIndex(p => \r\n            p.salaryMonth === payslipData.salaryMonth && p.paydayType === payslipData.paydayType\r\n          );\r\n          \r\n          if (existingPayslipIndex !== -1) {\r\n            employeeHistory[existingPayslipIndex] = payslipData;\r\n          } else {\r\n            employeeHistory.push(payslipData);\r\n          }\r\n          \r\n          this.allPayslipHistories[employee.id] = employeeHistory;\r\n          this.payslipHistory = employeeHistory;\r\n          this.selectedPayslip = payslipData;\r\n\r\n          this.showSuccessMessage(`Payslip generated now for ${employee.name} - ${payslipData.paydayType === 'mid-month' ? expectedPaydays.midMonthPayday : expectedPaydays.endMonthPayday}!`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error generating payslip now:', error);\r\n        this.showErrorMessage(`Failed to generate payslip: ${error.message}`);\r\n        if (error.response) {\r\n          console.error('Backend response:', error.response.data);\r\n        }\r\n      } finally {\r\n        this.payslipGenerationStatus.generating = false;\r\n      }\r\n    },\r\n    showUpdatePositionModal() {\r\n      this.selectedEmployeeForUpdate = '';\r\n      this.newPosition = '';\r\n      this.showUpdateModal = true;\r\n    },\r\n    async updateEmployeePosition() {\r\n      if (!this.selectedEmployeeForUpdate || !this.newPosition) return;\r\n      this.isLoading = true;\r\n      try {\r\n        const employee = this.employees.find(emp => emp.id === this.selectedEmployeeForUpdate);\r\n        const newPositionData = this.positions.find(pos => pos.name === this.newPosition);\r\n        const today = moment(this.currentDate).format('YYYY-MM-DD');\r\n\r\n        const updatedPositionHistory = employee.positionHistory.map(history => {\r\n          if (!history.endDate) {\r\n            return { ...history, endDate: today };\r\n          }\r\n          return history;\r\n        });\r\n        updatedPositionHistory.push({\r\n          position: newPositionData.name,\r\n          salary: newPositionData.salary,\r\n          startDate: today,\r\n          endDate: null\r\n        });\r\n\r\n        const response = await axios.put(`http://localhost:7777/api/employees/${employee.id}`, {\r\n          ...employee,\r\n          position: newPositionData.name,\r\n          salary: newPositionData.salary,\r\n          positionHistory: updatedPositionHistory\r\n        }, {\r\n          headers: { 'user-role': 'admin' }\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          employee.position = newPositionData.name;\r\n          employee.salary = newPositionData.salary;\r\n          employee.positionHistory = updatedPositionHistory;\r\n          this.showSuccessMessage(`Position updated for ${employee.name} to ${newPositionData.name}!`);\r\n          this.showUpdateModal = false;\r\n\r\n          await this.showPayslipHistory(employee);\r\n          await this.generatePayslipNow(employee);\r\n          this.showHistoryModal = true;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating position:', error);\r\n        this.showErrorMessage(`Failed to update position: ${error.message}`);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    sortPreviousPayslips(field) {\r\n      if (this.sortPreviousField === field) {\r\n        this.sortPreviousAsc = !this.sortPreviousAsc;\r\n      } else {\r\n        this.sortPreviousField = field;\r\n        this.sortPreviousAsc = true;\r\n      }\r\n    },\r\n    sortNewPayslips(field) {\r\n      if (this.sortNewField === field) {\r\n        this.sortNewAsc = !this.sortNewAsc;\r\n      } else {\r\n        this.sortNewField = field;\r\n        this.sortNewAsc = true;\r\n      }\r\n    },\r\n    showPrintModal() {\r\n      this.employeesWithPayslips = [];\r\n      this.selectedEmployeesForPrint = [];\r\n      this.selectAll = false;\r\n\r\n      for (const employee of this.employees) {\r\n        const history = this.allPayslipHistories[employee.id] || [];\r\n        const generatedPayslips = history.filter(p => p.payslipDataUrl);\r\n\r\n        if (generatedPayslips.length > 0) {\r\n          const latestPayslip = generatedPayslips.reduce((latest, current) => {\r\n            const latestDate = moment(`${latest.salaryMonth}-${latest.paydayType === 'mid-month' ? '15' : moment(`${latest.salaryMonth}-01`).endOf('month').date()}`, 'YYYY-MM-DD');\r\n            const currentDate = moment(`${current.salaryMonth}-${current.paydayType === 'mid-month' ? '15' : moment(`${current.salaryMonth}-01`).endOf('month').date()}`, 'YYYY-MM-DD');\r\n            return currentDate.isAfter(latestDate) ? current : latest;\r\n          });\r\n          const latestDateStr = latestPayslip.paydayType === 'mid-month'\r\n            ? latestPayslip.expectedPaydays.midMonthPayday\r\n            : latestPayslip.expectedPaydays.endMonthPayday;\r\n\r\n          this.employeesWithPayslips.push({\r\n            id: employee.id,\r\n            name: employee.name,\r\n            latestPayslipDate: latestDateStr,\r\n            latestPayslip: latestPayslip,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this.employeesWithPayslips.length === 0) {\r\n        this.showErrorMessage('No employees with generated payslips in history.');\r\n      } else {\r\n        this.showPrintAllModal = true;\r\n      }\r\n    },\r\n    toggleSelectAll() {\r\n      if (this.selectAll) {\r\n        this.selectedEmployeesForPrint = this.employeesWithPayslips.map(emp => emp.id);\r\n      } else {\r\n        this.selectedEmployeesForPrint = [];\r\n      }\r\n    },\r\n    async printSelectedPayslips() {\r\n      if (this.selectedEmployeesForPrint.length === 0) return;\r\n\r\n      this.isPrinting = true;\r\n      try {\r\n        const doc = new jsPDF({\r\n          orientation: 'portrait',\r\n          unit: 'mm',\r\n          format: [216, 279]\r\n        });\r\n\r\n        for (let i = 0; i < this.selectedEmployeesForPrint.length; i++) {\r\n          const empId = this.selectedEmployeesForPrint[i];\r\n          const empData = this.employeesWithPayslips.find(e => e.id === empId);\r\n          const employee = this.employees.find(e => e.id === empId);\r\n          const payslip = empData.latestPayslip;\r\n          const payDate = moment(`${payslip.salaryMonth}-${payslip.paydayType === 'mid-month' ? '15' : moment(payslip.salaryMonth).daysInMonth()}`, 'YYYY-MM-DD');\r\n          const activePosition = this.getActivePositionForDate(employee.positionHistory, payDate);\r\n          const updatedEmployee = { ...employee, position: activePosition.position, salary: activePosition.salary };\r\n\r\n          const payslipData = this.createPayslipData(updatedEmployee);\r\n          await this.generatePdf(payslipData, doc);\r\n\r\n          if (i < this.selectedEmployeesForPrint.length - 1) {\r\n            doc.addPage();\r\n          }\r\n        }\r\n\r\n        doc.autoPrint();\r\n        window.open(doc.output('bloburl'), '_blank');\r\n        this.showSuccessMessage('Payslips printed successfully!');\r\n        this.showPrintAllModal = false;\r\n      } catch (error) {\r\n        console.error('Error printing payslips:', error);\r\n        this.showErrorMessage(`Failed to print payslips: ${error.message}`);\r\n      } finally {\r\n        this.isPrinting = false;\r\n      }\r\n    },\r\n    selectPayslip(payslip) {\r\n      this.selectedPayslip = payslip.payslipDataUrl ? payslip : null;\r\n      this.iframeError = false;\r\n    },\r\n    async downloadPayslip() {\r\n      if (!this.selectedPayslip || !this.selectedPayslip.payslipDataUrl) return;\r\n      try {\r\n        const response = await fetch(this.selectedPayslip.payslipDataUrl);\r\n        if (!response.ok) throw new Error('Failed to fetch payslip PDF');\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `Payslip_${this.selectedEmployee.name}_${this.selectedPayslip.paydayType === 'mid-month' ? this.selectedPayslip.expectedPaydays.midMonthPayday : this.selectedPayslip.expectedPaydays.endMonthPayday}.pdf`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (error) {\r\n        console.error('Error downloading payslip:', error);\r\n        this.showErrorMessage('Failed to download payslip.');\r\n      }\r\n    },\r\n    formatDate(date) {\r\n      return moment(date).isValid() ? moment(date).format('D MMMM YYYY') : 'Invalid Date';\r\n    },\r\n    calculateTotalEarnings(employee) {\r\n      const baseEarnings = (employee.earnings ? employee.earnings.travelExpenses : 0) + (employee.earnings ? employee.earnings.otherEarnings : 0);\r\n      const monthlySalary = employee.salary || 0;\r\n      const holidayPay = this.calculateHolidayPay(employee) || 0;\r\n      const overtimePay = this.calculateOvertimePay(employee) || 0;\r\n      const payheadEarnings = this.calculatePayheadEarnings(employee.payheads) || 0;\r\n      const taxableSupplementary = this.calculateSupplementaryIncome(employee) ? this.calculateSupplementaryIncome(employee).taxable : 0;\r\n      return monthlySalary + baseEarnings + holidayPay + overtimePay + payheadEarnings + taxableSupplementary || 0;\r\n    },\r\n    calculatePayheadEarnings(payheads) {\r\n      return payheads\r\n        .filter(p => p.type === 'Earnings')\r\n        .reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\r\n    },\r\n    calculatePayheadDeductions(payheads) {\r\n      return payheads\r\n        .filter(p => p.type === 'Deductions')\r\n        .reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\r\n    },\r\n    calculateSupplementaryIncome(employee) {\r\n      const commission = employee.commission || 0;\r\n      const profitSharing = employee.profitSharing || 0;\r\n      const fees = employee.fees || 0;\r\n      const thirteenthMonthPay = employee.thirteenthMonthPay || 0;\r\n      const hazardPay = employee.hazardPay || 0;\r\n      const overtimePay = this.calculateOvertimePay(employee) || 0;\r\n      const otherTaxable = employee.otherTaxable || 0;\r\n\r\n      const totalSupplementary = commission + profitSharing + fees + thirteenthMonthPay + hazardPay + overtimePay + otherTaxable;\r\n      const exemptThirteenthMonth = Math.min(thirteenthMonthPay, 90000) || 0;\r\n      const taxableThirteenthMonth = Math.max(0, thirteenthMonthPay - 90000) || 0;\r\n\r\n      const taxableSupplementaryIncome = commission + profitSharing + fees + taxableThirteenthMonth + hazardPay + overtimePay + otherTaxable;\r\n\r\n      return {\r\n        taxable: taxableSupplementaryIncome || 0,\r\n        nonTaxable: exemptThirteenthMonth || 0,\r\n        totalSupplementary: totalSupplementary || 0\r\n      };\r\n    },\r\n    calculateNonTaxableIncome(employee) {\r\n      const isMWE = (employee.salary / 30) <= this.config.minimumWage;\r\n      const basicSalaryMWE = isMWE ? employee.salary : 0;\r\n      const holidayPayMWE = isMWE ? this.calculateHolidayPay(employee) : 0;\r\n      const overtimePayMWE = isMWE ? this.calculateOvertimePay(employee) : 0;\r\n      const nightShiftDiffMWE = isMWE ? (employee.nightShiftDiff || 0) : 0;\r\n      const hazardPayMWE = isMWE ? (employee.hazardPay || 0) : 0;\r\n      const thirteenthMonthExempt = Math.min(employee.thirteenthMonthPay || 0, 90000) || 0;\r\n      const deMinimis = Math.min(employee.deMinimis || 0, this.config.deMinimisLimit) || 0;\r\n      const sssContribution = this.calculateSSSContribution(employee.salary) || 0;\r\n      const philhealthContribution = this.calculatePhilHealthContribution(employee.salary) || 0;\r\n      const pagibigContribution = this.calculatePagIBIGContribution(employee.salary) || 0;\r\n\r\n      return {\r\n        totalNonTaxable: basicSalaryMWE + holidayPayMWE + overtimePayMWE + nightShiftDiffMWE + hazardPayMWE + thirteenthMonthExempt + deMinimis + sssContribution + philhealthContribution + pagibigContribution || 0\r\n      };\r\n    },\r\n    calculateTotalDeductions(employee) {\r\n      const sssContribution = this.calculateSSSContribution(employee.salary) || 0;\r\n      const philhealthContribution = this.calculatePhilHealthContribution(employee.salary) || 0;\r\n      const pagibigContribution = this.calculatePagIBIGContribution(employee.salary) || 0;\r\n      const withholdingTax = this.calculateWithholdingTax(employee) || 0;\r\n      const payheadDeductions = this.calculatePayheadDeductions(employee.payheads) || 0;\r\n\r\n      return sssContribution + philhealthContribution + pagibigContribution + withholdingTax + payheadDeductions || 0;\r\n    },\r\n    calculateNetSalary(employee) {\r\n      const totalEarnings = this.calculateTotalEarnings(employee) || 0;\r\n      const totalDeductions = this.calculateTotalDeductions(employee) || 0;\r\n      return totalEarnings - totalDeductions || 0;\r\n    },\r\n    calculateHolidayPay(employee) {\r\n      const dailyRate = (employee.salary / 30) || 0;\r\n      const salaryMonth = employee.salaryMonth \r\n        ? employee.salaryMonth.split('-')[0] + '-' + employee.salaryMonth.split('-')[1]\r\n        : moment(this.currentDate).format('YYYY-MM');\r\n      const regularHolidays = this.config.regularHolidays || [];\r\n      const specialNonWorkingDays = this.config.specialNonWorkingDays || [];\r\n      const isRegularHoliday = regularHolidays.some(holiday => moment(holiday, 'MM/DD/YYYY').format('YYYY-MM') === salaryMonth);\r\n      const isSpecialHoliday = specialNonWorkingDays.some(holiday => moment(holiday, 'MM/DD/YYYY').format('YYYY-MM') === salaryMonth);\r\n      if (isRegularHoliday) return dailyRate * 2 || 0;\r\n      if (isSpecialHoliday) return dailyRate * 1.3 || 0;\r\n      return 0;\r\n    },\r\n    calculateOvertimePay(employee) {\r\n      const hourlyRate = employee.salary / (8 * 22) || 0;\r\n      const regularOTHours = employee.overtimeHours ? employee.overtimeHours.regular : 0;\r\n      const holidayOTHours = employee.overtimeHours ? employee.overtimeHours.holiday : 0;\r\n      const regularOTPay = regularOTHours * hourlyRate * 1.25 || 0;\r\n      const holidayOTPay = holidayOTHours * hourlyRate * 1.3 || 0;\r\n      return regularOTPay + holidayOTPay || 0;\r\n    },\r\n    calculateSSSContribution(salary) {\r\n      const monthlySalaryCredit = Math.min(Math.max(salary || 0, 5000), 35000) || 0;\r\n      const employeeShareRate = 0.045;\r\n      return Math.round(monthlySalaryCredit * employeeShareRate) || 0;\r\n    },\r\n    calculatePhilHealthContribution(salary) {\r\n      const rate = 0.05;\r\n      const monthlySalary = Math.min(salary || 0, 100000) || 0;\r\n      return Math.round((monthlySalary * rate) / 2) || 0;\r\n    },\r\n    calculatePagIBIGContribution(salary) {\r\n      const rate = 0.02;\r\n      const cappedSalary = Math.min(salary || 0, 10000) || 0;\r\n      return Math.round(cappedSalary * rate) || 0;\r\n    },\r\n    calculateWithholdingTax(employee) {\r\n      const nonTaxable = this.calculateNonTaxableIncome(employee).totalNonTaxable || 0;\r\n      const taxableIncome = (this.calculateTotalEarnings(employee) || 0) - nonTaxable || 0;\r\n      if (taxableIncome <= 20833) return 0;\r\n      if (taxableIncome <= 33333) return Math.round((taxableIncome - 20833) * 0.15) || 0;\r\n      if (taxableIncome <= 66667) return Math.round(1875 + (taxableIncome - 33333) * 0.20) || 0;\r\n      if (taxableIncome <= 166667) return Math.round(13541.80 + (taxableIncome - 66667) * 0.25) || 0;\r\n      if (taxableIncome <= 666667) return Math.round(90841.80 + (taxableIncome - 166667) * 0.30) || 0;\r\n      return Math.round(408841.80 + (taxableIncome - 666667) * 0.35) || 0;\r\n    },\r\n    getExpectedPayday(hireDate, salaryMonth) {\r\n      const [year, month] = salaryMonth.split('-').map(part => parseInt(part, 10));\r\n      const lastDay = new Date(year, month, 0).getDate();\r\n      let payday1 = new Date(year, month - 1, 15);\r\n      let payday2 = new Date(year, month - 1, lastDay);\r\n\r\n      const hireMoment = moment(hireDate);\r\n      if (hireMoment.isAfter(moment(`${year}-${month}-15`, 'YYYY-MM-DD'))) {\r\n        payday1 = hireMoment.toDate();\r\n      }\r\n      if (hireMoment.isAfter(moment(`${year}-${month}-${lastDay}`, 'YYYY-MM-DD'))) {\r\n        payday2 = hireMoment.toDate();\r\n      }\r\n\r\n      const isWeekend = (date) => date.getDay() === 0 || date.getDay() === 6;\r\n      while (isWeekend(payday1)) {\r\n        const nextDay = new Date(payday1);\r\n        nextDay.setDate(payday1.getDate() + 1);\r\n        if (nextDay.getMonth() !== payday1.getMonth()) break;\r\n        payday1 = nextDay;\r\n      }\r\n      while (isWeekend(payday2)) {\r\n        const prevDay = new Date(payday2);\r\n        prevDay.setDate(payday2.getDate() - 1);\r\n        if (prevDay.getMonth() !== payday2.getMonth()) break;\r\n        payday2 = prevDay;\r\n      }\r\n\r\n      return {\r\n        midMonthPayday: payday1.toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' }),\r\n        endMonthPayday: payday2.toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })\r\n      };\r\n    },\r\n    createPayslipData(employee) {\r\n      const salaryDate = moment(employee.salaryMonth, 'YYYY-MM-DD').format('MM/DD/YYYY');\r\n      const basicSalary = employee.salary || 0;\r\n      const sss = this.calculateSSSContribution(basicSalary) || 0;\r\n      const philhealth = this.calculatePhilHealthContribution(basicSalary) || 0;\r\n      const pagibig = this.calculatePagIBIGContribution(basicSalary) || 0;\r\n      const totalDeductions = sss + philhealth + pagibig + (this.calculateWithholdingTax(employee) || 0) || 0;\r\n      const netSalary = this.calculateNetSalary(employee) || 0;\r\n      const paidLeavesDays = employee.paidLeaves ? employee.paidLeaves.days : 0;\r\n      const absencesDays = employee.absences ? employee.absences.days : 0;\r\n      const paidLeavesAmount = employee.paidLeaves ? employee.paidLeaves.amount : 0;\r\n      const absencesAmount = employee.absences ? -(employee.absences.amount) : 0;\r\n      const paydays = this.getExpectedPayday(employee.hireDate, employee.salaryMonth.split('-')[0] + '-' + employee.salaryMonth.split('-')[1]);\r\n\r\n      return {\r\n        salaryDate: salaryDate,\r\n        empNo: employee.empNo || 'N/A',\r\n        lastName: employee.lastName || 'N/A',\r\n        middleName: employee.middleName || 'N/A',\r\n        firstName: employee.firstName || 'N/A',\r\n        birthDate: moment(employee.birthDate).isValid() ? moment(employee.birthDate).format('MM/DD/YYYY') : 'N/A',\r\n        hireDate: moment(employee.hireDate).isValid() ? moment(employee.hireDate).format('MM/DD/YYYY') : 'N/A',\r\n        civilStatus: employee.civilStatus || 'SINGLE',\r\n        dependents: employee.dependents || 0,\r\n        sss: employee.sss || 'N/A',\r\n        tin: employee.tin || 'N/A',\r\n        philhealth: employee.philhealth || 'N/A',\r\n        pagibig: employee.pagibig || 'N/A',\r\n        position: this.getPositionName(employee.position) || 'N/A',\r\n        basicSalary: this.formatNumber(basicSalary),\r\n        totalDeductions: this.formatNumber(totalDeductions),\r\n        netSalary: this.formatNumber(netSalary),\r\n        sssDeduction: this.formatNumber(sss),\r\n        philhealthDeduction: this.formatNumber(philhealth),\r\n        pagibigDeduction: this.formatNumber(pagibig),\r\n        paidLeavesDays: paidLeavesDays,\r\n        absencesDays: absencesDays,\r\n        paidLeavesAmount: this.formatNumber(paidLeavesAmount),\r\n        absencesAmount: this.formatNumber(absencesAmount),\r\n        withholdingTax: this.formatNumber(this.calculateWithholdingTax(employee) || 0),\r\n        payheads: employee.payheads || [],\r\n        expectedPaydays: paydays\r\n      };\r\n    },\r\n    formatNumber(value) {\r\n      const num = Number(value) || 0;\r\n      return num.toFixed(2);\r\n    },\r\n    async generatePdf(payslipData, doc) {\r\n      const pdfDoc = doc || new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [216, 279]\r\n      });\r\n\r\n      pdfDoc.setFont('Helvetica');\r\n\r\n      const margin = 10;\r\n      const pageWidth = pdfDoc.internal.pageSize.getWidth();\r\n      const contentWidth = pageWidth - 2 * margin;\r\n      const columnWidth = (contentWidth - 20) / 2;\r\n      const lineHeight = 5;\r\n      const pageHeight = pdfDoc.internal.pageSize.getHeight();\r\n\r\n      function addText(doc, text, x, y, options) {\r\n        options = options || {};\r\n        text = text || 'N/A';\r\n        text = text.replace('₱', 'P');\r\n        doc.setFontSize(options.fontSize || 10);\r\n        doc.setFont(options.font || 'Helvetica', options.fontStyle || 'normal');\r\n        doc.setTextColor(\r\n          options.textColor ? options.textColor[0] : 0,\r\n          options.textColor ? options.textColor[1] : 0,\r\n          options.textColor ? options.textColor[2] : 0\r\n        );\r\n        doc.text(text, x, y, { align: options.align || 'left', maxWidth: options.maxWidth });\r\n      }\r\n\r\n      function addLabelValue(doc, label, value, x, y) {\r\n        addText(doc, label, x, y, { fontSize: 9, fontStyle: 'bold' });\r\n        addText(doc, value, x + 35, y, { fontSize: 9, maxWidth: columnWidth - 35 });\r\n      }\r\n\r\n      pdfDoc.setFillColor(0, 128, 0);\r\n      pdfDoc.rect(margin, margin, contentWidth, 10, 'F');\r\n      addText(pdfDoc, 'RIGHTJOB Solutions', margin + 5, margin + 7, { fontSize: 12, fontStyle: 'bold', textColor: [255, 255, 255] });\r\n      addText(pdfDoc, 'PAYSLIP', margin + contentWidth / 2, margin + 7, { fontSize: 12, fontStyle: 'bold', textColor: [255, 255, 255], align: 'center' });\r\n\r\n      let y = margin + 15;\r\n      addText(pdfDoc, 'Salary Date:', margin + contentWidth - 40, y, { fontSize: 9 });\r\n      addText(pdfDoc, payslipData.salaryDate, margin + contentWidth - 20, y, { fontSize: 9 });\r\n\r\n      y += 10;\r\n\r\n      addText(pdfDoc, 'Personal Information', margin, y, { fontSize: 11, fontStyle: 'bold' });\r\n      y += lineHeight;\r\n      const leftPersonalInfo = [\r\n        ['Emp No.', payslipData.empNo],\r\n        ['Last Name', payslipData.lastName],\r\n        ['Middle Name', payslipData.middleName],\r\n        ['First Name', payslipData.firstName],\r\n        ['Birth Date', payslipData.birthDate],\r\n        ['Hire Date', payslipData.hireDate],\r\n        ['Position', payslipData.position],\r\n        ['Basic Salary', `P${payslipData.basicSalary}`]\r\n      ];\r\n      leftPersonalInfo.forEach(([label, value], index) => {\r\n        addLabelValue(pdfDoc, label, value, margin, y + index * lineHeight);\r\n      });\r\n\r\n      let yRight = y;\r\n      addText(pdfDoc, 'Additional Info', margin + columnWidth + 10, yRight, { fontSize: 11, fontStyle: 'bold' });\r\n      yRight += lineHeight;\r\n      const rightPersonalInfo = [\r\n        ['Civil Status', payslipData.civilStatus],\r\n        ['Dependents', payslipData.dependents.toString()],\r\n        ['SSS', payslipData.sss],\r\n        ['TIN', payslipData.tin],\r\n        ['Philhealth', payslipData.philhealth],\r\n        ['PAG-IBIG', payslipData.pagibig]\r\n      ];\r\n      rightPersonalInfo.forEach(([label, value], index) => {\r\n        addLabelValue(pdfDoc, label, value, margin + columnWidth + 10, yRight + index * lineHeight);\r\n      });\r\n\r\n      y = Math.max(y + leftPersonalInfo.length * lineHeight, yRight + rightPersonalInfo.length * lineHeight) + 10;\r\n\r\n      addText(pdfDoc, 'Expected Paydays', margin, y, { fontSize: 11, fontStyle: 'bold' });\r\n      addText(pdfDoc, 'Mid-Month:', margin, y + lineHeight);\r\n      addText(pdfDoc, payslipData.expectedPaydays.midMonthPayday, margin + 35, y + lineHeight, { maxWidth: columnWidth - 35 });\r\n      addText(pdfDoc, 'End-of-Month:', margin + columnWidth + 10, y + lineHeight);\r\n      addText(pdfDoc, payslipData.expectedPaydays.endMonthPayday, margin + columnWidth + 45, y + lineHeight, { maxWidth: columnWidth - 35 });\r\n      y += 2 * lineHeight + 10;\r\n\r\n      addText(pdfDoc, 'Deductions', margin, y, { fontSize: 11, fontStyle: 'bold' });\r\n      y += lineHeight;\r\n      const leftDeductions = [\r\n        ['SSS', `P${payslipData.sssDeduction}`],\r\n        ['Philhealth', `P${payslipData.philhealthDeduction}`],\r\n        ['PAG-IBIG', `P${payslipData.pagibigDeduction}`]\r\n      ];\r\n      leftDeductions.forEach(([label, value], index) => {\r\n        addLabelValue(pdfDoc, label, value, margin, y + index * lineHeight);\r\n      });\r\n\r\n      const rightDeductions = [\r\n        ['Withholding Tax', `P${payslipData.withholdingTax}`]\r\n      ];\r\n      rightDeductions.forEach(([label, value], index) => {\r\n        addLabelValue(pdfDoc, label, value, margin + columnWidth + 10, y + index * lineHeight);\r\n      });\r\n      y += Math.max(leftDeductions.length, rightDeductions.length) * lineHeight + 10;\r\n\r\n      addText(pdfDoc, 'Summary', margin, y, { fontSize: 11, fontStyle: 'bold' });\r\n      y += lineHeight;\r\n      addText(pdfDoc, 'Total Deductions:', margin, y, { fontSize: 9, fontStyle: 'bold' });\r\n      addText(pdfDoc, `(P${payslipData.totalDeductions})`, margin + 35, y, { fontSize: 9 });\r\n      addText(pdfDoc, 'Net Salary:', margin + columnWidth + 10, y, { fontSize: 9, fontStyle: 'bold' });\r\n      addText(pdfDoc, `P${payslipData.netSalary}`, margin + columnWidth + 45, y, { fontSize: 9 });\r\n\r\n      const footerY = pageHeight - margin - 5;\r\n      addText(pdfDoc, 'This is a computer-generated payslip; no signature required.', margin + contentWidth / 2, footerY, { fontSize: 8, align: 'center' });\r\n\r\n      if (!doc) {\r\n        return pdfDoc.output('blob');\r\n      }\r\n    },\r\n    blobToBase64(blob) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) this.currentPage--;\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) this.currentPage++;\r\n    },\r\n    onIframeLoad() {\r\n      this.iframeError = false;\r\n    },\r\n    onIframeError() {\r\n      this.iframeError = true;\r\n      this.showErrorMessage('Error loading payslip preview.');\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => { this.statusMessage = ''; }, 3000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => { this.statusMessage = ''; }, 5000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined');\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n.transition-colors {\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n.hover\\:bg-blue-50:hover {\r\n  background-color: #eff6ff;\r\n}\r\n@keyframes fade-in {\r\n  from { opacity: 0; transform: translateY(1rem); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n.animate-fade-in {\r\n  animation: fade-in 0.3s ease-out;\r\n}\r\n.animate-spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n.large-checkbox {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}