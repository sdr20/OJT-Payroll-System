{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'EmployeeDashboard',\n  data() {\n    return {\n      totalAbsences: 0,\n      totalLate: 0,\n      totalOnTime: 0,\n      attendanceRecords: [],\n      leaveDate: '',\n      reason: '',\n      statusMessage: ''\n    };\n  },\n  created() {\n    this.fetchAttendanceRecords();\n  },\n  methods: {\n    async timeIn() {\n      try {\n        const response = await axios.post('/api/attendance/time-in', {});\n        if (response.status === 200) {\n          this.$toast.success('Time in successful!');\n          this.fetchAttendanceRecords();\n        }\n      } catch (error) {\n        console.error('Failed to time in:', error);\n        this.$toast.error('Time in failed. Please try again.');\n      }\n    },\n    async timeOut() {\n      try {\n        const response = await axios.post('/api/attendance/time-out', {});\n        if (response.status === 200) {\n          this.$toast.success('Time out successful!');\n          this.fetchAttendanceRecords();\n        }\n      } catch (error) {\n        console.error('Failed to time out:', error);\n        this.$toast.error('Time out failed. Please try again.');\n      }\n    },\n    async fetchAttendanceRecords() {\n      try {\n        const response = await axios.get('/api/attendance/records');\n        this.attendanceRecords = response.data.records;\n        this.totalAbsences = response.data.totalAbsences;\n        this.totalLate = response.data.totalLate;\n        this.totalOnTime = response.data.totalOnTime;\n      } catch (error) {\n        console.error('Failed to fetch attendance records:', error);\n      }\n    },\n    submitLeaveRequest() {\n      if (!this.leaveDate || !this.reason) return;\n      const newRequest = {\n        id: Date.now(),\n        employeeName: 'John Doe',\n        leaveDate: this.leaveDate,\n        reason: this.reason,\n        status: 'Pending'\n      };\n      let existingRequests = JSON.parse(localStorage.getItem('leaveRequests')) || [];\n      existingRequests.push(newRequest);\n      localStorage.setItem('leaveRequests', JSON.stringify(existingRequests));\n      this.statusMessage = 'Request submitted. Waiting for approval...';\n      this.leaveDate = '';\n      this.reason = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","totalAbsences","totalLate","totalOnTime","attendanceRecords","leaveDate","reason","statusMessage","created","fetchAttendanceRecords","methods","timeIn","response","post","status","$toast","success","error","console","timeOut","get","records","submitLeaveRequest","newRequest","id","Date","now","employeeName","existingRequests","JSON","parse","localStorage","getItem","push","setItem","stringify"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\EmployeeLeaveRequest.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n      <div class=\"p-6\">\r\n        <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n          <!-- Main Dashboard Section -->\r\n          <div class=\"lg:col-span-3 space-y-6\">\r\n            <!-- Header with Time Buttons -->\r\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <h1 class=\"text-2xl font-bold text-gray-800\">Dashboard</h1>\r\n                <div class=\"flex space-x-3\">\r\n                  <button @click=\"timeIn\" class=\"bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 transition-colors duration-200 shadow-sm\">\r\n                    Time In\r\n                  </button>\r\n                  <button @click=\"timeOut\" class=\"bg-rose-500 text-white px-4 py-2 rounded-lg hover:bg-rose-600 transition-colors duration-200 shadow-sm\">\r\n                    Time Out\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- Stats Cards -->\r\n            <div class=\"grid grid-cols-3 gap-4\">\r\n              <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\">\r\n                <div class=\"flex flex-col\">\r\n                  <span class=\"text-sm font-medium text-gray-500\">Total Absences</span>\r\n                  <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ totalAbsences }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\">\r\n                <div class=\"flex flex-col\">\r\n                  <span class=\"text-sm font-medium text-gray-500\">Total Late</span>\r\n                  <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ totalLate }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\">\r\n                <div class=\"flex flex-col\">\r\n                  <span class=\"text-sm font-medium text-gray-500\">Total On Time</span>\r\n                  <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ totalOnTime }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- Attendance Records Table -->\r\n            <div class=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n              <div class=\"p-6 border-b border-gray-100\">\r\n                <h2 class=\"text-lg font-semibold text-gray-800\">Attendance Records</h2>\r\n              </div>\r\n              <div class=\"overflow-x-auto\">\r\n                <table class=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead class=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Employee ID</th>\r\n                      <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                      <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                      <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time In</th>\r\n                      <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time Out</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                    <tr v-for=\"record in attendanceRecords\" :key=\"record.id\" class=\"hover:bg-gray-50\">\r\n                      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.employeeId }}</td>\r\n                      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.name }}</td>\r\n                      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.date }}</td>\r\n                      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeIn }}</td>\r\n                      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeOut }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Leave Request Section -->\r\n          <div class=\"lg:col-span-1\">\r\n            <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n              <h2 class=\"text-lg font-semibold text-gray-800 mb-4\">Request Leave</h2>\r\n              \r\n              <form @submit.prevent=\"submitLeaveRequest\" class=\"space-y-4\">\r\n                <div>\r\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">Leave Date</label>\r\n                  <input \r\n                    type=\"date\" \r\n                    v-model=\"leaveDate\" \r\n                    class=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    required\r\n                  >\r\n                </div>\r\n  \r\n                <div>\r\n                  <label class=\"block text-sm font-medium text-gray-700 mb-2\">Reason for Leave</label>\r\n                  <textarea \r\n                    v-model=\"reason\" \r\n                    class=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent h-32 resize-none\"\r\n                    required\r\n                  ></textarea>\r\n                </div>\r\n  \r\n                <button \r\n                  type=\"submit\" \r\n                  class=\"w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors duration-200 font-medium\"\r\n                >\r\n                  Submit Request\r\n                </button>\r\n              </form>\r\n  \r\n              <div v-if=\"statusMessage\" class=\"mt-4 p-3 bg-blue-50 text-blue-700 rounded-lg text-sm\">\r\n                {{ statusMessage }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'EmployeeDashboard',\r\n    data() {\r\n      return {\r\n        totalAbsences: 0,\r\n        totalLate: 0,\r\n        totalOnTime: 0,\r\n        attendanceRecords: [],\r\n        leaveDate: '',\r\n        reason: '',\r\n        statusMessage: '',\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchAttendanceRecords();\r\n    },\r\n    methods: {\r\n      async timeIn() {\r\n        try {\r\n          const response = await axios.post('/api/attendance/time-in', {});\r\n          if (response.status === 200) {\r\n            this.$toast.success('Time in successful!');\r\n            this.fetchAttendanceRecords();\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to time in:', error);\r\n          this.$toast.error('Time in failed. Please try again.');\r\n        }\r\n      },\r\n      async timeOut() {\r\n        try {\r\n          const response = await axios.post('/api/attendance/time-out', {});\r\n          if (response.status === 200) {\r\n            this.$toast.success('Time out successful!');\r\n            this.fetchAttendanceRecords();\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to time out:', error);\r\n          this.$toast.error('Time out failed. Please try again.');\r\n        }\r\n      },\r\n      async fetchAttendanceRecords() {\r\n        try {\r\n          const response = await axios.get('/api/attendance/records');\r\n          this.attendanceRecords = response.data.records;\r\n          this.totalAbsences = response.data.totalAbsences;\r\n          this.totalLate = response.data.totalLate;\r\n          this.totalOnTime = response.data.totalOnTime;\r\n        } catch (error) {\r\n          console.error('Failed to fetch attendance records:', error);\r\n        }\r\n      },\r\n      submitLeaveRequest() {\r\n        if (!this.leaveDate || !this.reason) return;\r\n  \r\n        const newRequest = {\r\n          id: Date.now(),\r\n          employeeName: 'John Doe',\r\n          leaveDate: this.leaveDate,\r\n          reason: this.reason,\r\n          status: 'Pending'\r\n        };\r\n  \r\n        let existingRequests = JSON.parse(localStorage.getItem('leaveRequests')) || [];\r\n        existingRequests.push(newRequest);\r\n        localStorage.setItem('leaveRequests', JSON.stringify(existingRequests));\r\n  \r\n        this.statusMessage = 'Request submitted. Waiting for approval...';\r\n        this.leaveDate = '';\r\n        this.reason = '';\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  input[type=\"date\"]::-webkit-calendar-picker-indicator {\r\n    cursor: pointer;\r\n    filter: invert(0.5);\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}