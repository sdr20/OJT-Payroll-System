{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport axios from 'axios';\nexport default {\n  name: 'EmployeeRegister',\n  data() {\n    return {\n      username: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      birthday: '',\n      hireDate: '',\n      position: '',\n      civilStatus: '',\n      contactInfo: '',\n      email: '',\n      error: null,\n      success: false,\n      usernameError: '',\n      passwordError: '',\n      emailError: ''\n    };\n  },\n  methods: {\n    validateForm() {\n      let isValid = true;\n\n      // Reset errors\n      this.usernameError = '';\n      this.passwordError = '';\n      this.emailError = '';\n\n      // Username validation\n      if (!this.username) {\n        this.usernameError = 'Username is required';\n        isValid = false;\n      } else if (!this.isValidUsername(this.username)) {\n        this.usernameError = 'Enter a valid username or email address';\n        isValid = false;\n      }\n\n      // Password validation\n      if (this.password.length < 8) {\n        this.passwordError = 'Password must be at least 8 characters long';\n        isValid = false;\n      }\n\n      // Email validation\n      if (!this.isValidEmail(this.email)) {\n        this.emailError = 'Please enter a valid email address';\n        isValid = false;\n      }\n      return isValid;\n    },\n    isValidEmail(email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(email);\n    },\n    isValidUsername(username) {\n      // Allow either email format or simple username format\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const usernameRegex = /^[a-zA-Z0-9_]{3,20}$/;\n      return emailRegex.test(username) || usernameRegex.test(username);\n    },\n    async validateAndRegister() {\n      if (this.validateForm()) {\n        await this.register();\n      }\n    },\n    async register() {\n      try {\n        this.error = null;\n        this.success = false;\n        const response = await axios.post('http://localhost:3000/api/register', {\n          username: this.username,\n          password: this.password,\n          firstName: this.firstName,\n          lastName: this.lastName,\n          birthday: this.birthday,\n          hireDate: this.hireDate,\n          position: this.position,\n          civilStatus: this.civilStatus,\n          contactInfo: this.contactInfo,\n          email: this.email\n        });\n        if (response.status === 200) {\n          this.success = true;\n          // Clear form\n          Object.keys(this.$data).forEach(key => {\n            if (typeof this.$data[key] === 'string') {\n              this.$data[key] = '';\n            }\n          });\n          // Redirect to login\n          setTimeout(() => {\n            this.$router.push('/employee-login');\n          }, 1500);\n        }\n      } catch (error) {\n        this.error = error.response?.data?.error || 'Registration failed';\n        console.error('Failed to register:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","password","firstName","lastName","birthday","hireDate","position","civilStatus","contactInfo","email","error","success","usernameError","passwordError","emailError","methods","validateForm","isValid","isValidUsername","length","isValidEmail","emailRegex","test","usernameRegex","validateAndRegister","register","response","post","status","Object","keys","$data","forEach","key","setTimeout","$router","push","console"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\components\\employeelogin\\EmployeeRegister.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div class=\"bg-white p-8 rounded shadow-md w-full max-w-md\">\r\n        <!-- Error and success messages -->\r\n        <div v-if=\"error\" class=\"mb-4 p-4 bg-red-100 text-red-700 rounded\">\r\n          {{ error }}\r\n        </div>\r\n        <div v-if=\"success\" class=\"mb-4 p-4 bg-green-100 text-green-700 rounded\">\r\n          Registration successful! Redirecting to login...\r\n        </div>\r\n\r\n        <h1 class=\"text-2xl font-bold mb-4 text-center\">Employee Registration</h1>\r\n        <form @submit.prevent=\"validateAndRegister\">\r\n          <!-- Login Information -->\r\n          <div class=\"mb-6 bg-gray-50 p-4 rounded\">\r\n            <h2 class=\"text-lg font-semibold mb-3\">Login Information</h2>\r\n            <div class=\"mb-4\">\r\n              <label for=\"username\" class=\"block text-gray-700\">Username/Email</label>\r\n              <input \r\n                v-model=\"username\" \r\n                type=\"text\" \r\n                id=\"username\" \r\n                class=\"w-full p-2 border rounded mt-1\" \r\n                :class=\"{'border-red-500': usernameError}\"\r\n                placeholder=\"username or user@example.com\"\r\n                required\r\n              >\r\n              <p v-if=\"usernameError\" class=\"text-red-500 text-sm mt-1\">{{ usernameError }}</p>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label for=\"password\" class=\"block text-gray-700\">Password</label>\r\n              <input \r\n                v-model=\"password\" \r\n                type=\"password\" \r\n                id=\"password\" \r\n                class=\"w-full p-2 border rounded mt-1\"\r\n                :class=\"{'border-red-500': passwordError}\"\r\n                required\r\n              >\r\n              <p class=\"text-sm text-gray-500 mt-1\">Must be at least 8 characters long</p>\r\n              <p v-if=\"passwordError\" class=\"text-red-500 text-sm mt-1\">{{ passwordError }}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Personal Information -->\r\n          <div class=\"mb-6 bg-gray-50 p-4 rounded\">\r\n            <h2 class=\"text-lg font-semibold mb-3\">Personal Information</h2>\r\n            <div class=\"mb-4\">\r\n              <label for=\"firstName\" class=\"block text-gray-700\">First Name</label>\r\n              <input v-model=\"firstName\" type=\"text\" id=\"firstName\" class=\"w-full p-2 border rounded mt-1\" required>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label for=\"lastName\" class=\"block text-gray-700\">Last Name</label>\r\n              <input v-model=\"lastName\" type=\"text\" id=\"lastName\" class=\"w-full p-2 border rounded mt-1\" required>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label for=\"birthday\" class=\"block text-gray-700\">Birthday</label>\r\n              <input v-model=\"birthday\" type=\"date\" id=\"birthday\" class=\"w-full p-2 border rounded mt-1\" required>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label for=\"civilStatus\" class=\"block text-gray-700\">Civil Status</label>\r\n              <select v-model=\"civilStatus\" id=\"civilStatus\" class=\"w-full p-2 border rounded mt-1\" required>\r\n                <option value=\"\">Select Status</option>\r\n                <option value=\"Single\">Single</option>\r\n                <option value=\"Married\">Married</option>\r\n                <option value=\"Widowed\">Widowed</option>\r\n                <option value=\"Divorced\">Divorced</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Employment Information -->\r\n          <div class=\"mb-6 bg-gray-50 p-4 rounded\">\r\n            <h2 class=\"text-lg font-semibold mb-3\">Employment Information</h2>\r\n            <div class=\"mb-4\">\r\n              <label for=\"hireDate\" class=\"block text-gray-700\">Hire Date</label>\r\n              <input v-model=\"hireDate\" type=\"date\" id=\"hireDate\" class=\"w-full p-2 border rounded mt-1\" required>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label for=\"position\" class=\"block text-gray-700\">Position</label>\r\n              <input v-model=\"position\" type=\"text\" id=\"position\" class=\"w-full p-2 border rounded mt-1\" required>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Contact Information -->\r\n          <div class=\"mb-6 bg-gray-50 p-4 rounded\">\r\n            <h2 class=\"text-lg font-semibold mb-3\">Contact Information</h2>\r\n            <div class=\"mb-4\">\r\n              <label for=\"email\" class=\"block text-gray-700\">Email Address</label>\r\n              <input \r\n                v-model=\"email\" \r\n                type=\"email\" \r\n                id=\"email\" \r\n                class=\"w-full p-2 border rounded mt-1\"\r\n                :class=\"{'border-red-500': emailError}\"\r\n                required\r\n              >\r\n              <p v-if=\"emailError\" class=\"text-red-500 text-sm mt-1\">{{ emailError }}</p>\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label for=\"contactInfo\" class=\"block text-gray-700\">Contact Number</label>\r\n              <input \r\n                v-model=\"contactInfo\" \r\n                type=\"text\" \r\n                id=\"contactInfo\" \r\n                class=\"w-full p-2 border rounded mt-1\"\r\n                placeholder=\"Enter mobile number\"\r\n                required\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            class=\"w-full bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\"\r\n          >\r\n            Create Account\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeRegister',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      birthday: '',\r\n      hireDate: '',\r\n      position: '',\r\n      civilStatus: '',\r\n      contactInfo: '',\r\n      email: '',\r\n      error: null,\r\n      success: false,\r\n      usernameError: '',\r\n      passwordError: '',\r\n      emailError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    validateForm() {\r\n      let isValid = true;\r\n      \r\n      // Reset errors\r\n      this.usernameError = '';\r\n      this.passwordError = '';\r\n      this.emailError = '';\r\n\r\n      // Username validation\r\n      if (!this.username) {\r\n        this.usernameError = 'Username is required';\r\n        isValid = false;\r\n      } else if (!this.isValidUsername(this.username)) {\r\n        this.usernameError = 'Enter a valid username or email address';\r\n        isValid = false;\r\n      }\r\n\r\n      // Password validation\r\n      if (this.password.length < 8) {\r\n        this.passwordError = 'Password must be at least 8 characters long';\r\n        isValid = false;\r\n      }\r\n\r\n      // Email validation\r\n      if (!this.isValidEmail(this.email)) {\r\n        this.emailError = 'Please enter a valid email address';\r\n        isValid = false;\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n\r\n    isValidEmail(email) {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    },\r\n\r\n    isValidUsername(username) {\r\n      // Allow either email format or simple username format\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      const usernameRegex = /^[a-zA-Z0-9_]{3,20}$/;\r\n      return emailRegex.test(username) || usernameRegex.test(username);\r\n    },\r\n\r\n    async validateAndRegister() {\r\n      if (this.validateForm()) {\r\n        await this.register();\r\n      }\r\n    },\r\n\r\n    async register() {\r\n      try {\r\n        this.error = null;\r\n        this.success = false;\r\n        \r\n        const response = await axios.post('http://localhost:3000/api/register', {\r\n          username: this.username,\r\n          password: this.password,\r\n          firstName: this.firstName,\r\n          lastName: this.lastName,\r\n          birthday: this.birthday,\r\n          hireDate: this.hireDate,\r\n          position: this.position,\r\n          civilStatus: this.civilStatus,\r\n          contactInfo: this.contactInfo,\r\n          email: this.email\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          this.success = true;\r\n          // Clear form\r\n          Object.keys(this.$data).forEach(key => {\r\n            if (typeof this.$data[key] === 'string') {\r\n              this.$data[key] = '';\r\n            }\r\n          });\r\n          // Redirect to login\r\n          setTimeout(() => {\r\n            this.$router.push('/employee-login');\r\n          }, 1500);\r\n        }\r\n      } catch (error) {\r\n        this.error = error.response?.data?.error || 'Registration failed';\r\n        console.error('Failed to register:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any additional custom styles here */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}