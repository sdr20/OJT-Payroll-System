{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-6xl mx-auto\"\n};\nconst _hoisted_3 = {\n  class: \"flex justify-between items-center mb-4\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  class: \"bg-white p-5 rounded-xl shadow-md\"\n};\nconst _hoisted_6 = {\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_7 = {\n  class: \"bg-white divide-y divide-gray-200\"\n};\nconst _hoisted_8 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_9 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_10 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_11 = {\n  class: \"px-6 py-4 text-sm text-gray-900 font-bold\"\n};\nconst _hoisted_12 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_13 = {\n  class: \"px-6 py-4 text-sm font-medium flex gap-2\"\n};\nconst _hoisted_14 = [\"onClick\", \"disabled\"];\nconst _hoisted_15 = [\"onClick\", \"disabled\"];\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = {\n  key: 1\n};\nconst _hoisted_18 = {\n  class: \"flex justify-center items-center mt-4 gap-4\"\n};\nconst _hoisted_19 = [\"disabled\"];\nconst _hoisted_20 = {\n  class: \"text-gray-700\"\n};\nconst _hoisted_21 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Header with Search and Refresh \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search Employee...\",\n    class: \"border rounded-lg px-4 py-2 w-1/3 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.refreshData && $options.refreshData(...args)),\n    class: \"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-all duration-200\",\n    disabled: $data.isLoading\n  }, _toDisplayString($data.isLoading ? 'Refreshing...' : 'Refresh'), 9 /* TEXT, PROPS */, _hoisted_4)]), _createCommentVNode(\" Salary Table \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"table\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-50\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Employee Name\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Earnings\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Deductions\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Net Salary\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Salary Month\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employee.id,\n      class: \"hover:bg-gray-50\"\n    }, [_createElementVNode(\"td\", _hoisted_8, _toDisplayString(employee.name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, \"₱\" + _toDisplayString(employee.totalEarnings.toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, \"₱\" + _toDisplayString(employee.totalDeductions.toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_11, \"₱\" + _toDisplayString(employee.totalSalary.toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, _toDisplayString(employee.salaryMonth), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_13, [_createElementVNode(\"button\", {\n      onClick: $event => $options.generatePayslip(employee),\n      class: \"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\",\n      disabled: $data.payslipGenerationStatus[employee.id]?.generating || $data.isLoading\n    }, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n      class: \"material-icons text-green-600\"\n    }, \"description\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.payslipGenerationStatus[employee.id]?.generating ? 'Generating...' : 'Generate'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_14), _createElementVNode(\"button\", {\n      onClick: $event => $options.sendPayslipEmail(employee),\n      class: \"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\",\n      disabled: $data.payslipGenerationStatus[employee.id]?.sending || $data.isLoading\n    }, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n      class: \"material-icons text-blue-600\"\n    }, \"email\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.payslipGenerationStatus[employee.id]?.sending ? 'Sending...' : 'Send Email'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_15)])]);\n  }), 128 /* KEYED_FRAGMENT */)), $options.paginatedEmployees.length === 0 && !$data.isLoading ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_16, _cache[6] || (_cache[6] = [_createElementVNode(\"td\", {\n    colspan: \"6\",\n    class: \"px-6 py-4 text-center text-sm text-gray-500\"\n  }, \"No employees found.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), $data.isLoading ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_17, _cache[7] || (_cache[7] = [_createElementVNode(\"td\", {\n    colspan: \"6\",\n    class: \"px-6 py-4 text-center text-sm text-gray-500\"\n  }, \"Loading employees...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])])]), _createCommentVNode(\" Pagination Controls \"), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1 || $data.isLoading,\n    class: \"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50 disabled:cursor-not-allowed\"\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"span\", {\n    class: \"material-icons\"\n  }, \"chevron_left\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_19), _createElementVNode(\"span\", _hoisted_20, \"Page \" + _toDisplayString($data.currentPage) + \" of \" + _toDisplayString($options.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages || $data.isLoading,\n    class: \"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50 disabled:cursor-not-allowed\"\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"span\", {\n    class: \"material-icons\"\n  }, \"chevron_right\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_21)]), _createCommentVNode(\" Status Message \"), $data.statusMessage ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([$data.statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700', \"fixed bottom-4 right-4 p-4 rounded-lg shadow-md z-50\"])\n  }, _toDisplayString($data.statusMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_cache","$event","$data","searchQuery","type","placeholder","onClick","args","$options","refreshData","disabled","isLoading","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","paginatedEmployees","employee","id","_hoisted_8","_toDisplayString","name","_hoisted_9","totalEarnings","toLocaleString","_hoisted_10","totalDeductions","_hoisted_11","totalSalary","_hoisted_12","salaryMonth","_hoisted_13","generatePayslip","payslipGenerationStatus","generating","_createTextVNode","_hoisted_14","sendPayslipEmail","sending","_hoisted_15","length","_hoisted_16","colspan","_hoisted_17","_hoisted_18","prevPage","currentPage","_hoisted_19","_hoisted_20","totalPages","nextPage","_hoisted_21","statusMessage","_normalizeClass","includes"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\SalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Header with Search and Refresh -->\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <input\r\n          v-model=\"searchQuery\"\r\n          type=\"text\"\r\n          placeholder=\"Search Employee...\"\r\n          class=\"border rounded-lg px-4 py-2 w-1/3 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n        />\r\n        <button @click=\"refreshData\" \r\n                class=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-all duration-200\"\r\n                :disabled=\"isLoading\">\r\n          {{ isLoading ? 'Refreshing...' : 'Refresh' }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Salary Table -->\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Employee Name</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Earnings</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Deductions</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Net Salary</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Salary Month</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"employee in paginatedEmployees\" :key=\"employee.id\" class=\"hover:bg-gray-50\">\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.name }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">₱{{ employee.totalEarnings.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">₱{{ employee.totalDeductions.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900 font-bold\">₱{{ employee.totalSalary.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.salaryMonth }}</td>\r\n              <td class=\"px-6 py-4 text-sm font-medium flex gap-2\">\r\n                <button @click=\"generatePayslip(employee)\" \r\n                        class=\"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\"\r\n                        :disabled=\"payslipGenerationStatus[employee.id]?.generating || isLoading\">\r\n                  <span class=\"material-icons text-green-600\">description</span> \r\n                  {{ payslipGenerationStatus[employee.id]?.generating ? 'Generating...' : 'Generate' }}\r\n                </button>\r\n                <button @click=\"sendPayslipEmail(employee)\" \r\n                        class=\"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\"\r\n                        :disabled=\"payslipGenerationStatus[employee.id]?.sending || isLoading\">\r\n                  <span class=\"material-icons text-blue-600\">email</span> \r\n                  {{ payslipGenerationStatus[employee.id]?.sending ? 'Sending...' : 'Send Email' }}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"paginatedEmployees.length === 0 && !isLoading\">\r\n              <td colspan=\"6\" class=\"px-6 py-4 text-center text-sm text-gray-500\">No employees found.</td>\r\n            </tr>\r\n            <tr v-if=\"isLoading\">\r\n              <td colspan=\"6\" class=\"px-6 py-4 text-center text-sm text-gray-500\">Loading employees...</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination Controls -->\r\n      <div class=\"flex justify-center items-center mt-4 gap-4\">\r\n        <button\r\n          @click=\"prevPage\"\r\n          :disabled=\"currentPage === 1 || isLoading\"\r\n          class=\"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          <span class=\"material-icons\">chevron_left</span>\r\n        </button>\r\n        <span class=\"text-gray-700\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n        <button\r\n          @click=\"nextPage\"\r\n          :disabled=\"currentPage === totalPages || isLoading\"\r\n          class=\"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          <span class=\"material-icons\">chevron_right</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Status Message -->\r\n      <div v-if=\"statusMessage\" \r\n           :class=\"statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\"\r\n           class=\"fixed bottom-4 right-4 p-4 rounded-lg shadow-md z-50\">\r\n        {{ statusMessage }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\n\r\nexport default {\r\n  name: 'SalarySlips',\r\n  data() {\r\n    return {\r\n      employees: [],\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      itemsPerPage: 5,\r\n      payslipGenerationStatus: {},\r\n      isLoading: false,\r\n      statusMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(employee =>\r\n        employee.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage) || 1;\r\n    },\r\n    paginatedEmployees() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredEmployees.slice(start, end);\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchEmployees();\r\n  },\r\n  methods: {\r\n    async fetchEmployees() {\r\n      this.isLoading = true;\r\n      this.statusMessage = '';\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees');\r\n        this.employees = response.data.map(employee => ({\r\n          id: employee.id,\r\n          name: `${employee.firstName} ${employee.lastName}`,\r\n          totalEarnings: this.calculateTotalEarnings(employee),\r\n          totalDeductions: this.calculateTotalDeductions(employee),\r\n          totalSalary: this.calculateNetSalary(employee),\r\n          salaryMonth: this.getCurrentSalaryMonth(),\r\n          email: employee.email,\r\n          position: employee.position,\r\n          rawData: employee // Store raw data for detailed payslip generation\r\n        })) || [];\r\n        this.showSuccessMessage('Employees loaded successfully!');\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        this.showErrorMessage('Failed to load employees. Please try again.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async refreshData() {\r\n      await this.fetchEmployees();\r\n    },\r\n    calculateTotalEarnings(employee) {\r\n      const baseEarnings = (employee.earnings?.travelExpenses || 0) + (employee.earnings?.otherEarnings || 0);\r\n      const payheadEarnings = employee.payheads\r\n        ?.filter(p => p.type === 'Earnings')\r\n        .reduce((sum, p) => sum + p.amount, 0) || 0;\r\n      return employee.salary + baseEarnings + payheadEarnings;\r\n    },\r\n    calculateTotalDeductions(employee) {\r\n      const baseDeductions = (employee.deductions?.sss || 0) + \r\n                            (employee.deductions?.philhealth || 0) + \r\n                            (employee.deductions?.pagibig || 0);\r\n      const payheadDeductions = employee.payheads\r\n        ?.filter(p => p.type === 'Deductions')\r\n        .reduce((sum, p) => sum + p.amount, 0) || 0;\r\n      return baseDeductions + payheadDeductions;\r\n    },\r\n    calculateNetSalary(employee) {\r\n      return this.calculateTotalEarnings(employee) - this.calculateTotalDeductions(employee);\r\n    },\r\n    getCurrentSalaryMonth() {\r\n      const now = new Date();\r\n      const month = String(now.getMonth() + 1).padStart(2, '0');\r\n      const year = now.getFullYear();\r\n      return `${month}/01/${year}`; // Assuming start of month; adjust as needed\r\n    },\r\n    async generatePayslip(employee) {\r\n      this.$set(this.payslipGenerationStatus, employee.id, { generating: true });\r\n      this.statusMessage = '';\r\n      try {\r\n        const doc = new jsPDF();\r\n        doc.setFontSize(16);\r\n        doc.text('Payslip', 20, 20);\r\n        doc.setFontSize(12);\r\n        doc.text(`Employee ID: ${employee.id}`, 20, 40);\r\n        doc.text(`Name: ${employee.name}`, 20, 50);\r\n        doc.text(`Position: ${employee.position}`, 20, 60);\r\n        doc.text(`Salary Month: ${employee.salaryMonth}`, 20, 70);\r\n        \r\n        // Detailed Earnings\r\n        doc.text('Earnings:', 20, 90);\r\n        let yPos = 100;\r\n        doc.text(`Base Salary: ₱${employee.rawData.salary.toLocaleString()}`, 20, yPos);\r\n        yPos += 10;\r\n        if (employee.rawData.earnings.travelExpenses) {\r\n          doc.text(`Travel Expenses: ₱${employee.rawData.earnings.travelExpenses.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n        if (employee.rawData.earnings.otherEarnings) {\r\n          doc.text(`Other Earnings: ₱${employee.rawData.earnings.otherEarnings.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n        employee.rawData.payheads?.filter(p => p.type === 'Earnings').forEach(payhead => {\r\n          doc.text(`${payhead.name}: ₱${payhead.amount.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        });\r\n        doc.text(`Total Earnings: ₱${employee.totalEarnings.toLocaleString()}`, 20, yPos);\r\n        yPos += 20;\r\n\r\n        // Detailed Deductions\r\n        doc.text('Deductions:', 20, yPos);\r\n        yPos += 10;\r\n        if (employee.rawData.deductions.sss) {\r\n          doc.text(`SSS: ₱${employee.rawData.deductions.sss.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n        if (employee.rawData.deductions.philhealth) {\r\n          doc.text(`PhilHealth: ₱${employee.rawData.deductions.philhealth.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n        if (employee.rawData.deductions.pagibig) {\r\n          doc.text(`Pag-IBIG: ₱${employee.rawData.deductions.pagibig.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n        employee.rawData.payheads?.filter(p => p.type === 'Deductions').forEach(payhead => {\r\n          doc.text(`${payhead.name}: ₱${payhead.amount.toLocaleString()}`, 20, yPos);\r\n          yPos += 10;\r\n        });\r\n        doc.text(`Total Deductions: ₱${employee.totalDeductions.toLocaleString()}`, 20, yPos);\r\n        yPos += 20;\r\n\r\n        // Net Salary\r\n        doc.text(`Net Salary: ₱${employee.totalSalary.toLocaleString()}`, 20, yPos);\r\n        yPos += 10;\r\n        doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, yPos);\r\n\r\n        const pdfBlob = doc.output('blob');\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(pdfBlob);\r\n        reader.onloadend = async () => {\r\n          const base64data = reader.result;\r\n          localStorage.setItem(`payslip_${employee.id}_${employee.salaryMonth}`, base64data);\r\n\r\n          const link = document.createElement('a');\r\n          link.href = URL.createObjectURL(pdfBlob);\r\n          link.download = `payslip-${employee.name}-${employee.salaryMonth}.pdf`;\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n\r\n          await axios.post('http://localhost:7777/api/payslips/generate', {\r\n            employeeId: employee.id,\r\n            payslipData: base64data,\r\n            salaryMonth: employee.salaryMonth\r\n          });\r\n\r\n          this.showSuccessMessage(`Payslip generated for ${employee.name}`);\r\n          this.$set(this.payslipGenerationStatus, employee.id, { generating: false });\r\n        };\r\n      } catch (error) {\r\n        console.error('Error generating payslip:', error);\r\n        this.showErrorMessage(`Failed to generate payslip for ${employee.name}`);\r\n        this.$set(this.payslipGenerationStatus, employee.id, { generating: false });\r\n      }\r\n    },\r\n    async sendPayslipEmail(employee) {\r\n      this.$set(this.payslipGenerationStatus, employee.id, { sending: true });\r\n      this.statusMessage = '';\r\n      try {\r\n        const payslipKey = `payslip_${employee.id}_${employee.salaryMonth}`;\r\n        let payslipData = localStorage.getItem(payslipKey);\r\n\r\n        if (!payslipData) {\r\n          await this.generatePayslip(employee);\r\n          payslipData = localStorage.getItem(payslipKey);\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:7777/api/payslips/send-email', {\r\n          employeeId: employee.id,\r\n          employeeEmail: employee.email,\r\n          payslipData,\r\n          salaryMonth: employee.salaryMonth\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          this.showSuccessMessage(`Payslip email sent to ${employee.name} at ${employee.email}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending payslip email:', error);\r\n        this.showErrorMessage(`Failed to send payslip email to ${employee.name}`);\r\n      } finally {\r\n        this.$set(this.payslipGenerationStatus, employee.id, { sending: false });\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.transition-all {\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.hover\\:bg-gray-50:hover {\r\n  background-color: #f9fafb;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}