{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Modal from './Modal.vue'; // Assuming you have a reusable Modal component\n\nexport default {\n  name: 'ManagePayHeads',\n  components: {\n    Modal\n  },\n  data() {\n    return {\n      payHeads: [{\n        id: 1,\n        name: 'Basic Salary',\n        amount: 30000,\n        type: 'Earnings'\n      }, {\n        id: 2,\n        name: 'Health Insurance',\n        amount: 2000,\n        type: 'Deductions'\n      }\n      // Add more pay head data as needed\n      ],\n      employees: [{\n        id: 1,\n        name: 'John Doe',\n        position: 'Software Engineer',\n        totalDeduction: 2000,\n        totalEarnings: 30000,\n        totalSalary: 28000\n      }, {\n        id: 2,\n        name: 'Jane Smith',\n        position: 'Product Manager',\n        totalDeduction: 1500,\n        totalEarnings: 35000,\n        totalSalary: 33500\n      }\n      // Add more employee data as needed\n      ],\n      newPayHead: {\n        name: '',\n        amount: '',\n        type: 'Earnings'\n      },\n      selectedPayHead: {\n        id: '',\n        name: '',\n        amount: '',\n        type: 'Earnings'\n      },\n      showAddModal: false,\n      showUpdateModal: false,\n      showAddPayheadModal: false,\n      selectedEmployee: null,\n      selectedEmployeePayheads: [],\n      availablePayheads: []\n    };\n  },\n  computed: {\n    totalPayableSalary() {\n      const earnings = this.selectedEmployeePayheads.filter(p => p.type === 'Earnings').reduce((sum, p) => sum + p.amount, 0);\n      const deductions = this.selectedEmployeePayheads.filter(p => p.type === 'Deductions').reduce((sum, p) => sum + p.amount, 0);\n      return earnings - deductions;\n    }\n  },\n  methods: {\n    addPayHead() {\n      if (this.newPayHead.name && this.newPayHead.amount && this.newPayHead.type) {\n        if (this.payHeads.some(ph => ph.name === this.newPayHead.name)) {\n          alert('Payhead name must be unique');\n          return;\n        }\n        this.payHeads.push({\n          id: Date.now(),\n          name: this.newPayHead.name,\n          amount: parseFloat(this.newPayHead.amount),\n          type: this.newPayHead.type\n        });\n        this.newPayHead.name = '';\n        this.newPayHead.amount = '';\n        this.newPayHead.type = 'Earnings';\n        this.showAddModal = false;\n      }\n    },\n    showUpdatePayHeadModal(payHead) {\n      this.selectedPayHead = {\n        ...payHead\n      };\n      this.showUpdateModal = true;\n    },\n    updatePayHead() {\n      const updatedPayHeadIndex = this.payHeads.findIndex(ph => ph.id === this.selectedPayHead.id);\n      if (updatedPayHeadIndex !== -1) {\n        this.payHeads[updatedPayHeadIndex] = {\n          ...this.selectedPayHead\n        };\n        this.showUpdateModal = false;\n      }\n    },\n    deletePayHead(id) {\n      this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\n    },\n    openAddPayheadModal(employee) {\n      this.selectedEmployee = employee;\n      this.selectedEmployeePayheads = [];\n      this.availablePayheads = this.payHeads;\n      this.showAddPayheadModal = true;\n    },\n    addPayheadToEmployee(payhead) {\n      this.selectedEmployeePayheads.push(payhead);\n      this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id);\n    },\n    removePayheadFromEmployee(payhead) {\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\n      this.availablePayheads.push(payhead);\n    },\n    savePayheads() {\n      // Logic to save payheads to the selected employee\n      this.showAddPayheadModal = false;\n    }\n  }\n};","map":{"version":3,"names":["Modal","name","components","data","payHeads","id","amount","type","employees","position","totalDeduction","totalEarnings","totalSalary","newPayHead","selectedPayHead","showAddModal","showUpdateModal","showAddPayheadModal","selectedEmployee","selectedEmployeePayheads","availablePayheads","computed","totalPayableSalary","earnings","filter","p","reduce","sum","deductions","methods","addPayHead","some","ph","alert","push","Date","now","parseFloat","showUpdatePayHeadModal","payHead","updatePayHead","updatedPayHeadIndex","findIndex","deletePayHead","openAddPayheadModal","employee","addPayheadToEmployee","payhead","removePayheadFromEmployee","savePayheads"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\ManagePayHeads.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-1\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Add Pay Head Button -->\r\n      <button class=\"mb-4 py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\" @click=\"showAddModal = true\">Add Pay Head</button>\r\n      \r\n      <!-- Add Pay Head Modal -->\r\n      <Modal v-if=\"showAddModal\" @close=\"showAddModal = false\">\r\n        <h2 class=\"text-xl font-bold mb-4\">Add Pay Head</h2>\r\n        <form @submit.prevent=\"addPayHead\">\r\n          <div class=\"mb-4\">\r\n            <label for=\"payHeadName\" class=\"block text-gray-700 mb-1 font-medium text-sm\">Pay Head Name</label>\r\n            <input v-model=\"newPayHead.name\" type=\"text\" id=\"payHeadName\" class=\"w-full p-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\" required>\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"payHeadType\" class=\"block text-gray-700 mb-1 font-medium text-sm\">Type</label>\r\n            <select v-model=\"newPayHead.type\" id=\"payHeadType\" class=\"w-full p-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\" required>\r\n              <option value=\"Earnings\">Earnings</option>\r\n              <option value=\"Deductions\">Deductions</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"payHeadAmount\" class=\"block text-gray-700 mb-1 font-medium text-sm\">Amount</label>\r\n            <input v-model=\"newPayHead.amount\" type=\"number\" id=\"payHeadAmount\" class=\"w-full p-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\" required>\r\n          </div>\r\n          <div class=\"flex justify-end gap-3\">\r\n            <button type=\"button\" @click=\"showAddModal = false\" class=\"py-2 px-4 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-all duration-200\">Cancel</button>\r\n            <button type=\"submit\" class=\"py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\">Add Pay Head</button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n      \r\n      <!-- Update Pay Head Modal -->\r\n      <Modal v-if=\"showUpdateModal\" @close=\"showUpdateModal = false\">\r\n        <h2 class=\"text-xl font-bold mb-4\">Update Pay Head</h2>\r\n        <form @submit.prevent=\"updatePayHead\">\r\n          <div class=\"mb-4\">\r\n            <label for=\"updatePayHeadName\" class=\"block text-gray-700 mb-1 font-medium text-sm\">Pay Head Name</label>\r\n            <input v-model=\"selectedPayHead.name\" type=\"text\" id=\"updatePayHeadName\" class=\"w-full p-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\" required>\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"updatePayHeadType\" class=\"block text-gray-700 mb-1 font-medium text-sm\">Type</label>\r\n            <select v-model=\"selectedPayHead.type\" id=\"updatePayHeadType\" class=\"w-full p-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\" required>\r\n              <option value=\"Earnings\">Earnings</option>\r\n              <option value=\"Deductions\">Deductions</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"mb-4\">\r\n            <label for=\"updatePayHeadAmount\" class=\"block text-gray-700 mb-1 font-medium text-sm\">Amount</label>\r\n            <input v-model=\"selectedPayHead.amount\" type=\"number\" id=\"updatePayHeadAmount\" class=\"w-full p-2 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all text-sm\" required>\r\n          </div>\r\n          <div class=\"flex justify-end gap-3\">\r\n            <button type=\"button\" @click=\"showUpdateModal = false\" class=\"py-2 px-4 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-all duration-200\">Cancel</button>\r\n            <button type=\"submit\" class=\"py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\">Update Pay Head</button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n  \r\n      <!-- Table to Display Pay Heads -->\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md mb-8\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Pay Head Name</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"payHead in payHeads\" :key=\"payHead.id\">\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ payHead.name }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">P {{ payHead.amount.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ payHead.type }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium flex gap-2\">\r\n                <button @click=\"showUpdatePayHeadModal(payHead)\" class=\"bg-yellow-50 text-yellow-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-yellow-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons\"></span> Update\r\n                </button>\r\n                <button @click=\"deletePayHead(payHead.id)\" class=\"bg-red-50 text-red-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-red-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons\"></span> Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- New Container for Employee Payroll Information -->\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md\">\r\n        <h2 class=\"text-xl font-bold mb-4\">Employee Payroll Information</h2>\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name of Employee</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Position</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total Deduction</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total Earnings</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total Salary</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"employee in employees\" :key=\"employee.id\">\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ employee.id }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ employee.name }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ employee.position }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">P {{ employee.totalDeduction.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">P {{ employee.totalEarnings.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">P {{ employee.totalSalary.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium flex gap-2\">\r\n                <button @click=\"openAddPayheadModal(employee)\" class=\"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons\"></span> Add Payhead\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Add Payhead to Employee Modal -->\r\n      <Modal v-if=\"showAddPayheadModal\" @close=\"showAddPayheadModal = false\">\r\n        <h2 class=\"text-xl font-bold mb-4\">Add Payhead to Employee</h2>\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 mb-1 font-medium text-sm\">Available Payheads</label>\r\n          <div class=\"space-y-2\">\r\n            <div v-for=\"payhead in availablePayheads\" :key=\"payhead.id\" class=\"flex justify-between items-center p-2 border border-gray-200 rounded-lg\">\r\n              <span>{{ payhead.name }} ({{ payhead.type }})</span>\r\n              <button @click=\"addPayheadToEmployee(payhead)\" class=\"bg-green-50 text-green-600 font-semibold py-1 px-2 rounded-lg hover:bg-green-100 transition-all duration-200 text-xs\">Add</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 mb-1 font-medium text-sm\">Payheads Added to Employee</label>\r\n          <div class=\"space-y-2\">\r\n            <div v-for=\"payhead in selectedEmployeePayheads\" :key=\"payhead.id\" class=\"flex justify-between items-center p-2 border border-gray-200 rounded-lg\">\r\n              <span>{{ payhead.name }} ({{ payhead.type }})</span>\r\n              <button @click=\"removePayheadFromEmployee(payhead)\" class=\"bg-red-50 text-red-600 font-semibold py-1 px-2 rounded-lg hover:bg-red-100 transition-all duration-200 text-xs\">X</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 mb-1 font-medium text-sm\">Total Payhead</label>\r\n          <div class=\"p-2 border border-gray-200 rounded-lg\">\r\n            <span>Total Payable Salary: P {{ totalPayableSalary.toLocaleString() }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex justify-end gap-3\">\r\n          <button type=\"button\" @click=\"showAddPayheadModal = false\" class=\"py-2 px-4 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-all duration-200\">Cancel</button>\r\n          <button type=\"button\" @click=\"savePayheads\" class=\"py-2 px-4 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-all duration-200\">Save</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Modal from './Modal.vue'; // Assuming you have a reusable Modal component\r\n\r\nexport default {\r\n  name: 'ManagePayHeads',\r\n  components: {\r\n    Modal\r\n  },\r\n  data() {\r\n    return {\r\n      payHeads: [\r\n        { id: 1, name: 'Basic Salary', amount: 30000, type: 'Earnings' },\r\n        { id: 2, name: 'Health Insurance', amount: 2000, type: 'Deductions' },\r\n        // Add more pay head data as needed\r\n      ],\r\n      employees: [\r\n        { id: 1, name: 'John Doe', position: 'Software Engineer', totalDeduction: 2000, totalEarnings: 30000, totalSalary: 28000 },\r\n        { id: 2, name: 'Jane Smith', position: 'Product Manager', totalDeduction: 1500, totalEarnings: 35000, totalSalary: 33500 },\r\n        // Add more employee data as needed\r\n      ],\r\n      newPayHead: {\r\n        name: '',\r\n        amount: '',\r\n        type: 'Earnings'\r\n      },\r\n      selectedPayHead: {\r\n        id: '',\r\n        name: '',\r\n        amount: '',\r\n        type: 'Earnings'\r\n      },\r\n      showAddModal: false,\r\n      showUpdateModal: false,\r\n      showAddPayheadModal: false,\r\n      selectedEmployee: null,\r\n      selectedEmployeePayheads: [],\r\n      availablePayheads: [],\r\n    };\r\n  },\r\n  computed: {\r\n    totalPayableSalary() {\r\n      const earnings = this.selectedEmployeePayheads.filter(p => p.type === 'Earnings').reduce((sum, p) => sum + p.amount, 0);\r\n      const deductions = this.selectedEmployeePayheads.filter(p => p.type === 'Deductions').reduce((sum, p) => sum + p.amount, 0);\r\n      return earnings - deductions;\r\n    }\r\n  },\r\n  methods: {\r\n    addPayHead() {\r\n      if (this.newPayHead.name && this.newPayHead.amount && this.newPayHead.type) {\r\n        if (this.payHeads.some(ph => ph.name === this.newPayHead.name)) {\r\n          alert('Payhead name must be unique');\r\n          return;\r\n        }\r\n        this.payHeads.push({\r\n          id: Date.now(),\r\n          name: this.newPayHead.name,\r\n          amount: parseFloat(this.newPayHead.amount),\r\n          type: this.newPayHead.type,\r\n        });\r\n        this.newPayHead.name = '';\r\n        this.newPayHead.amount = '';\r\n        this.newPayHead.type = 'Earnings';\r\n        this.showAddModal = false;\r\n      }\r\n    },\r\n    showUpdatePayHeadModal(payHead) {\r\n      this.selectedPayHead = { ...payHead };\r\n      this.showUpdateModal = true;\r\n    },\r\n    updatePayHead() {\r\n      const updatedPayHeadIndex = this.payHeads.findIndex(ph => ph.id === this.selectedPayHead.id);\r\n      if (updatedPayHeadIndex !== -1) {\r\n        this.payHeads[updatedPayHeadIndex] = { ...this.selectedPayHead };\r\n        this.showUpdateModal = false;\r\n      }\r\n    },\r\n    deletePayHead(id) {\r\n      this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\r\n    },\r\n    openAddPayheadModal(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.selectedEmployeePayheads = [];\r\n      this.availablePayheads = this.payHeads;\r\n      this.showAddPayheadModal = true;\r\n    },\r\n    addPayheadToEmployee(payhead) {\r\n      this.selectedEmployeePayheads.push(payhead);\r\n      this.availablePayheads = this.availablePayheads.filter(p => p.id !== payhead.id);\r\n    },\r\n    removePayheadFromEmployee(payhead) {\r\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.id !== payhead.id);\r\n      this.availablePayheads.push(payhead);\r\n    },\r\n    savePayheads() {\r\n      // Logic to save payheads to the selected employee\r\n      this.showAddPayheadModal = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}