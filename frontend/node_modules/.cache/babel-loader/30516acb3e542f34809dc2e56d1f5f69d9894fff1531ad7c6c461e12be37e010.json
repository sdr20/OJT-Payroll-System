{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-6xl mx-auto\"\n};\nconst _hoisted_3 = {\n  class: \"flex justify-between items-center mb-4\"\n};\nconst _hoisted_4 = {\n  class: \"bg-white p-5 rounded-xl shadow-md\"\n};\nconst _hoisted_5 = {\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_6 = {\n  class: \"bg-white divide-y divide-gray-200\"\n};\nconst _hoisted_7 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_8 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_9 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_10 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_11 = {\n  class: \"px-6 py-4 text-sm text-gray-900\"\n};\nconst _hoisted_12 = {\n  class: \"px-6 py-4 text-sm font-medium flex gap-2\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = {\n  class: \"flex justify-center items-center mt-4 gap-4\"\n};\nconst _hoisted_16 = [\"disabled\"];\nconst _hoisted_17 = {\n  class: \"text-gray-700\"\n};\nconst _hoisted_18 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Search Input \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search Employee...\",\n    class: \"border rounded-lg px-4 py-2 w-1/3\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), _createCommentVNode(\" Salary Table \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-50\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Employee Name\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Earnings\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Deductions\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Total Salary\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Salary Month\"), _createElementVNode(\"th\", {\n    class: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employee.id\n    }, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString(employee.name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, \"P\" + _toDisplayString(employee.totalEarnings.toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, \"P\" + _toDisplayString(employee.totalDeductions.toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, \"P\" + _toDisplayString(employee.totalSalary.toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_11, _toDisplayString(employee.salaryMonth), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, [_createElementVNode(\"button\", {\n      onClick: $event => $options.generatePayslip(employee),\n      class: \"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\"\n    }, [...(_cache[3] || (_cache[3] = [_createElementVNode(\"span\", {\n      class: \"material-icons text-green-600\"\n    }, \"description\", -1 /* HOISTED */), _createTextVNode(\" Generate \")]))], 8 /* PROPS */, _hoisted_13), _createElementVNode(\"button\", {\n      onClick: $event => $options.sendPayslipEmail(employee),\n      class: \"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\"\n    }, [...(_cache[4] || (_cache[4] = [_createElementVNode(\"span\", {\n      class: \"material-icons text-blue-600\"\n    }, \"email\", -1 /* HOISTED */), _createTextVNode(\" Send Email \")]))], 8 /* PROPS */, _hoisted_14)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createCommentVNode(\" Pagination Controls \"), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage === 1,\n    class: \"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50\"\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"span\", {\n    class: \"material-icons\"\n  }, \"chevron_left\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_16), _createElementVNode(\"span\", _hoisted_17, \"Page \" + _toDisplayString($data.currentPage) + \" of \" + _toDisplayString($options.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages,\n    class: \"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50\"\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"span\", {\n    class: \"material-icons\"\n  }, \"chevron_right\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_18)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_cache","$event","$data","searchQuery","type","placeholder","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$options","paginatedEmployees","employee","key","id","_hoisted_7","_toDisplayString","name","_hoisted_8","totalEarnings","toLocaleString","_hoisted_9","totalDeductions","_hoisted_10","totalSalary","_hoisted_11","salaryMonth","_hoisted_12","onClick","generatePayslip","_createTextVNode","_hoisted_13","sendPayslipEmail","_hoisted_14","_hoisted_15","args","prevPage","disabled","currentPage","_hoisted_16","_hoisted_17","totalPages","nextPage","_hoisted_18"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\SalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Search Input -->\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <input\r\n          v-model=\"searchQuery\"\r\n          type=\"text\"\r\n          placeholder=\"Search Employee...\"\r\n          class=\"border rounded-lg px-4 py-2 w-1/3\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Salary Table -->\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Employee Name</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Earnings</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Deductions</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Salary</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Salary Month</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"employee in paginatedEmployees\" :key=\"employee.id\">\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.name }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P{{ employee.totalEarnings.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P{{ employee.totalDeductions.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P{{ employee.totalSalary.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.salaryMonth }}</td>\r\n              <td class=\"px-6 py-4 text-sm font-medium flex gap-2\">\r\n                <button @click=\"generatePayslip(employee)\" class=\"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons text-green-600\">description</span> Generate\r\n                </button>\r\n                <button @click=\"sendPayslipEmail(employee)\" class=\"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons text-blue-600\">email</span> Send Email\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination Controls -->\r\n      <div class=\"flex justify-center items-center mt-4 gap-4\">\r\n        <button\r\n          @click=\"prevPage\"\r\n          :disabled=\"currentPage === 1\"\r\n          class=\"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50\"\r\n        >\r\n          <span class=\"material-icons\">chevron_left</span>\r\n        </button>\r\n\r\n        <span class=\"text-gray-700\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n\r\n        <button\r\n          @click=\"nextPage\"\r\n          :disabled=\"currentPage === totalPages\"\r\n          class=\"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50\"\r\n        >\r\n          <span class=\"material-icons\">chevron_right</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'SalarySlips',\r\n  data() {\r\n    return {\r\n      employees: [\r\n        { id: 1, name: 'John Doe', totalEarnings: 50000, totalDeductions: 5000, totalSalary: 45000, salaryMonth: '02/20/2025', email: 'stevenruelo20@gmail.com' },\r\n        { id: 2, name: 'allen Kalbo', totalEarnings: 60000, totalDeductions: 7000, totalSalary: 53000, salaryMonth: '02/22/2025', email: 'allen.kalbo@example.com' },\r\n        { id: 3, name: 'Adrian d Grate', totalEarnings: 52000, totalDeductions: 4000, totalSalary: 48000, salaryMonth: '02/25/2025', email: 'adrian.grate@example.com' },\r\n        { id: 4, name: 'Glenn d dragon', totalEarnings: 58000, totalDeductions: 6000, totalSalary: 52000, salaryMonth: '02/28/2025', email: 'glenn.dragon@example.com' },\r\n        { id: 5, name: 'Emjay Uzumaki', totalEarnings: 49000, totalDeductions: 3000, totalSalary: 46000, salaryMonth: '02/15/2025', email: 'emjay.uzumaki@example.com' },\r\n        { id: 6, name: 'Steven Uchiha', totalEarnings: 62000, totalDeductions: 8000, totalSalary: 54000, salaryMonth: '02/10/2025', email: 'steven.uchiha@example.com' },\r\n        { id: 7, name: 'Jake D Bojek', totalEarnings: 56000, totalDeductions: 5000, totalSalary: 51000, salaryMonth: '02/05/2025', email: 'jake.bojek@example.com' },\r\n        { id: 8, name: 'Deo D dancer', totalEarnings: 61000, totalDeductions: 7500, totalSalary: 53500, salaryMonth: '02/18/2025', email: 'deo.dancer@example.com' },\r\n      ],\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n      payslipGenerationStatus: {}, // Track payslip generation status\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter((employee) =>\r\n        employee.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage);\r\n    },\r\n    paginatedEmployees() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredEmployees.slice(start, end);\r\n    },\r\n  },\r\n  methods: {\r\n    async generatePayslip(employee) {\r\n      try {\r\n        // Make a request to your server to generate the payslip\r\n        const response = await axios.post('/api/payslips/generate', {\r\n          employeeId: employee.id,\r\n        }, {\r\n          responseType: 'blob', // Important for handling PDF downloads\r\n        });\r\n\r\n        // Create a Blob from the PDF stream\r\n        const file = new Blob([response.data], { type: 'application/pdf' });\r\n\r\n        // Create a temporary URL for the file\r\n        const fileURL = URL.createObjectURL(file);\r\n\r\n        // Create a link element to trigger the download\r\n        const link = document.createElement('a');\r\n        link.href = fileURL;\r\n        link.setAttribute('download', `payslip-${employee.name}-${employee.salaryMonth}.pdf`); // Customize the file name\r\n        document.body.appendChild(link);\r\n\r\n        // Trigger the download\r\n        link.click();\r\n\r\n        // Clean up\r\n        link.remove();\r\n        URL.revokeObjectURL(fileURL);\r\n\r\n        alert(`Payslip generated and downloaded for ${employee.name}`);\r\n      } catch (error) {\r\n        console.error('Error generating payslip:', error);\r\n        alert(`Failed to generate payslip for ${employee.name}`);\r\n      }\r\n    },\r\n    async sendPayslipEmail(employee) {\r\n      try {\r\n        // Make a request to your server to send the payslip email\r\n        const response = await axios.post('/api/payslips/send-email', {\r\n          employeeId: employee.id,\r\n          employeeEmail: employee.email // Assuming you have the employee's email\r\n        });\r\n\r\n        console.log(response.data.message);\r\n        alert(`Payslip email sent to ${employee.name} at ${employee.email}`);\r\n      } catch (error) {\r\n        console.error('Error sending payslip email:', error);\r\n        alert(`Failed to send payslip email to ${employee.name}`);\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}