{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  name: 'EmployeeDashboard',\n  data() {\n    return {\n      employeeData: {\n        employeeId: '',\n        name: '',\n        position: '',\n        earnings: [],\n        deductions: []\n      },\n      selectedPayPeriod: '',\n      payPeriods: [],\n      stats: [],\n      attendanceRecords: []\n    };\n  },\n  computed: {\n    employeeInitials() {\n      return this.employeeData.name.split(' ').map(word => word[0]).join('').toUpperCase();\n    },\n    currentPayPeriod() {\n      const now = new Date();\n      return `${now.toLocaleString('default', {\n        month: 'long'\n      })} 1-15, ${now.getFullYear()}`;\n    },\n    totalEarnings() {\n      return this.employeeData.earnings.reduce((sum, item) => sum + item.amount, 0);\n    },\n    totalDeductions() {\n      return this.employeeData.deductions.reduce((sum, item) => sum + item.amount, 0);\n    },\n    netSalary() {\n      return this.totalEarnings - this.totalDeductions;\n    }\n  },\n  async created() {\n    await this.fetchEmployeeData();\n    await this.fetchAttendanceRecords();\n    this.generatePayPeriods();\n  },\n  methods: {\n    async fetchEmployeeData() {\n      try {\n        const response = await axios.get('/api/employee/current', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.employeeData = response.data;\n      } catch (error) {\n        console.error('Failed to fetch employee data:', error);\n      }\n    },\n    async timeIn() {\n      try {\n        const response = await axios.post('/api/attendance/time-in', {\n          employeeId: this.employeeData.employeeId\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.status === 200) {\n          this.$toast.success('Time in successful!');\n          this.fetchAttendanceRecords();\n        }\n      } catch (error) {\n        console.error('Failed to time in:', error);\n        this.$toast.error('Time in failed. Please try again.');\n      }\n    },\n    async timeOut() {\n      try {\n        const response = await axios.post('/api/attendance/time-out', {\n          employeeId: this.employeeData.employeeId\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.status === 200) {\n          this.$toast.success('Time out successful!');\n          this.fetchAttendanceRecords();\n        }\n      } catch (error) {\n        console.error('Failed to time out:', error);\n        this.$toast.error('Time out failed. Please try again.');\n      }\n    },\n    async fetchAttendanceRecords() {\n      try {\n        const response = await axios.get(`/api/attendance/records/${this.employeeData.employeeId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.attendanceRecords = response.data.records;\n        this.stats = [{\n          label: 'Total Absences',\n          value: response.data.totalAbsences\n        }, {\n          label: 'Total Late',\n          value: response.data.totalLate\n        }, {\n          label: 'Total On Time',\n          value: response.data.totalOnTime\n        }];\n      } catch (error) {\n        console.error('Failed to fetch attendance records:', error);\n      }\n    },\n    async fetchSalaryDetails() {\n      try {\n        const response = await axios.get(`/api/salary/details/${this.employeeData.employeeId}?period=${this.selectedPayPeriod}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.employeeData.earnings = response.data.earnings;\n        this.employeeData.deductions = response.data.deductions;\n      } catch (error) {\n        console.error('Failed to fetch salary details:', error);\n      }\n    },\n    generatePayPeriods() {\n      const periods = [];\n      const now = new Date();\n      for (let i = 0; i < 6; i++) {\n        const date = new Date(now.getFullYear(), now.getMonth() - i, 1);\n        periods.push(`${date.toLocaleString('default', {\n          month: 'long'\n        })} 1-15, ${date.getFullYear()}`);\n        periods.push(`${date.toLocaleString('default', {\n          month: 'long'\n        })} 16-${new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()}, ${date.getFullYear()}`);\n      }\n      this.payPeriods = periods;\n      this.selectedPayPeriod = periods[0];\n    },\n    getStatusClass(status) {\n      const classes = {\n        'On Time': 'text-green-600 bg-green-100 px-2 py-1 rounded-full',\n        'Late': 'text-yellow-600 bg-yellow-100 px-2 py-1 rounded-full',\n        'Absent': 'text-red-600 bg-red-100 px-2 py-1 rounded-full'\n      };\n      return classes[status] || '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","employeeData","employeeId","position","earnings","deductions","selectedPayPeriod","payPeriods","stats","attendanceRecords","computed","employeeInitials","split","map","word","join","toUpperCase","currentPayPeriod","now","Date","toLocaleString","month","getFullYear","totalEarnings","reduce","sum","item","amount","totalDeductions","netSalary","created","fetchEmployeeData","fetchAttendanceRecords","generatePayPeriods","methods","response","get","headers","Authorization","localStorage","getItem","error","console","timeIn","post","status","$toast","success","timeOut","records","label","value","totalAbsences","totalLate","totalOnTime","fetchSalaryDetails","periods","i","date","getMonth","push","getDate","getStatusClass","classes"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\EmployeeSalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\r\n    <div class=\"p-6\">\r\n      <!-- Employee Info Header -->\r\n      <div class=\"mb-6 bg-white rounded-xl shadow-sm p-6\">\r\n        <div class=\"flex items-center space-x-4\">\r\n          <div class=\"h-12 w-12 rounded-full bg-blue-100 flex items-center justify-center\">\r\n            <span class=\"text-blue-600 font-semibold text-lg\">{{ employeeInitials }}</span>\r\n          </div>\r\n          <div>\r\n            <h1 class=\"text-xl font-bold text-gray-800\">{{ employeeData.name }}</h1>\r\n            <p class=\"text-sm text-gray-500\">ID: {{ employeeData.employeeId }} | {{ employeeData.position }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        <!-- Main Dashboard Section -->\r\n        <div class=\"lg:col-span-3 space-y-6\">\r\n          <!-- Header with Time Buttons -->\r\n          <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div class=\"flex justify-between items-center\">\r\n              <div class=\"text-sm text-gray-500\">\r\n                Current Pay Period: {{ currentPayPeriod }}\r\n              </div>\r\n              <div class=\"flex space-x-3\">\r\n                <button @click=\"timeIn\" class=\"bg-emerald-500 text-white px-4 py-2 rounded-lg hover:bg-emerald-600 transition-colors duration-200 shadow-sm\">\r\n                  Time In\r\n                </button>\r\n                <button @click=\"timeOut\" class=\"bg-rose-500 text-white px-4 py-2 rounded-lg hover:bg-rose-600 transition-colors duration-200 shadow-sm\">\r\n                  Time Out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Stats Cards -->\r\n          <div class=\"grid grid-cols-3 gap-4\">\r\n            <div class=\"bg-white p-6 rounded-xl shadow-sm border border-gray-100\" v-for=\"stat in stats\" :key=\"stat.label\">\r\n              <div class=\"flex flex-col\">\r\n                <span class=\"text-sm font-medium text-gray-500\">{{ stat.label }}</span>\r\n                <span class=\"text-2xl font-bold text-gray-800 mt-2\">{{ stat.value }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Attendance Records Table -->\r\n          <div class=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n            <div class=\"p-6 border-b border-gray-100\">\r\n              <h2 class=\"text-lg font-semibold text-gray-800\">My Attendance Records</h2>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n              <table class=\"min-w-full divide-y divide-gray-200\">\r\n                <thead class=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time In</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Time Out</th>\r\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                  <tr v-for=\"record in attendanceRecords\" :key=\"record.id\" class=\"hover:bg-gray-50\">\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.date }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeIn }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.timeOut }}</td>\r\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                      <span :class=\"getStatusClass(record.status)\">\r\n                        {{ record.status }}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Salary Details Section -->\r\n        <div class=\"lg:col-span-1\">\r\n          <div class=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n              <h2 class=\"text-lg font-semibold text-gray-800\">Salary Details</h2>\r\n              <select \r\n                v-model=\"selectedPayPeriod\" \r\n                @change=\"fetchSalaryDetails\"\r\n                class=\"text-xs border rounded-lg px-2 py-1 bg-gray-50 text-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                style=\"max-width: 140px\"\r\n              >\r\n                <option v-for=\"period in payPeriods\" :key=\"period\" :value=\"period\">\r\n                  {{ period }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <!-- Earnings Section -->\r\n            <div v-if=\"employeeData.earnings.length\" class=\"mb-6\">\r\n              <h3 class=\"text-sm font-medium text-gray-600 mb-3\">Earnings</h3>\r\n              <div class=\"space-y-2\">\r\n                <div v-for=\"earning in employeeData.earnings\" :key=\"earning.type\" class=\"flex justify-between items-center\">\r\n                  <span class=\"text-sm text-gray-600\">{{ earning.type }}</span>\r\n                  <span class=\"text-sm font-medium\">₱{{ earning.amount.toLocaleString() }}</span>\r\n                </div>\r\n                <div class=\"flex justify-between items-center pt-2 border-t border-gray-100\">\r\n                  <span class=\"text-sm font-medium text-gray-700\">Total Earnings</span>\r\n                  <span class=\"text-sm font-bold text-green-600\">₱{{ totalEarnings.toLocaleString() }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Deductions Section -->\r\n            <div v-if=\"employeeData.deductions.length\" class=\"mb-6\">\r\n              <h3 class=\"text-sm font-medium text-gray-600 mb-3\">Deductions</h3>\r\n              <div class=\"space-y-2\">\r\n                <div v-for=\"deduction in employeeData.deductions\" :key=\"deduction.type\" class=\"flex justify-between items-center\">\r\n                  <span class=\"text-sm text-gray-600\">{{ deduction.type }}</span>\r\n                  <span class=\"text-sm font-medium\">₱{{ deduction.amount.toLocaleString() }}</span>\r\n                </div>\r\n                <div class=\"flex justify-between items-center pt-2 border-t border-gray-100\">\r\n                  <span class=\"text-sm font-medium text-gray-700\">Total Deductions</span>\r\n                  <span class=\"text-sm font-bold text-red-600\">₱{{ totalDeductions.toLocaleString() }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Total Payable -->\r\n            <div class=\"pt-4 border-t-2 border-gray-200\">\r\n              <div class=\"flex justify-between items-center\">\r\n                <span class=\"text-base font-semibold text-gray-800\">Net Salary</span>\r\n                <span class=\"text-lg font-bold text-blue-600\">₱{{ netSalary.toLocaleString() }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeDashboard',\r\n  data() {\r\n    return {\r\n      employeeData: {\r\n        employeeId: '',\r\n        name: '',\r\n        position: '',\r\n        earnings: [],\r\n        deductions: []\r\n      },\r\n      selectedPayPeriod: '',\r\n      payPeriods: [],\r\n      stats: [],\r\n      attendanceRecords: []\r\n    };\r\n  },\r\n  computed: {\r\n    employeeInitials() {\r\n      return this.employeeData.name\r\n        .split(' ')\r\n        .map(word => word[0])\r\n        .join('')\r\n        .toUpperCase();\r\n    },\r\n    currentPayPeriod() {\r\n      const now = new Date();\r\n      return `${now.toLocaleString('default', { month: 'long' })} 1-15, ${now.getFullYear()}`;\r\n    },\r\n    totalEarnings() {\r\n      return this.employeeData.earnings.reduce((sum, item) => sum + item.amount, 0);\r\n    },\r\n    totalDeductions() {\r\n      return this.employeeData.deductions.reduce((sum, item) => sum + item.amount, 0);\r\n    },\r\n    netSalary() {\r\n      return this.totalEarnings - this.totalDeductions;\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchEmployeeData();\r\n    await this.fetchAttendanceRecords();\r\n    this.generatePayPeriods();\r\n  },\r\n  methods: {\r\n    async fetchEmployeeData() {\r\n      try {\r\n        const response = await axios.get('/api/employee/current', {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n        this.employeeData = response.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch employee data:', error);\r\n      }\r\n    },\r\n    async timeIn() {\r\n      try {\r\n        const response = await axios.post('/api/attendance/time-in', {\r\n          employeeId: this.employeeData.employeeId\r\n        }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n        if (response.status === 200) {\r\n          this.$toast.success('Time in successful!');\r\n          this.fetchAttendanceRecords();\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to time in:', error);\r\n        this.$toast.error('Time in failed. Please try again.');\r\n      }\r\n    },\r\n    async timeOut() {\r\n      try {\r\n        const response = await axios.post('/api/attendance/time-out', {\r\n          employeeId: this.employeeData.employeeId\r\n        }, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n        if (response.status === 200) {\r\n          this.$toast.success('Time out successful!');\r\n          this.fetchAttendanceRecords();\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to time out:', error);\r\n        this.$toast.error('Time out failed. Please try again.');\r\n      }\r\n    },\r\n    async fetchAttendanceRecords() {\r\n      try {\r\n        const response = await axios.get(`/api/attendance/records/${this.employeeData.employeeId}`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n        this.attendanceRecords = response.data.records;\r\n        this.stats = [\r\n          { label: 'Total Absences', value: response.data.totalAbsences },\r\n          { label: 'Total Late', value: response.data.totalLate },\r\n          { label: 'Total On Time', value: response.data.totalOnTime }\r\n        ];\r\n      } catch (error) {\r\n        console.error('Failed to fetch attendance records:', error);\r\n      }\r\n    },\r\n    async fetchSalaryDetails() {\r\n      try {\r\n        const response = await axios.get(`/api/salary/details/${this.employeeData.employeeId}?period=${this.selectedPayPeriod}`, {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n        });\r\n        this.employeeData.earnings = response.data.earnings;\r\n        this.employeeData.deductions = response.data.deductions;\r\n      } catch (error) {\r\n        console.error('Failed to fetch salary details:', error);\r\n      }\r\n    },\r\n    generatePayPeriods() {\r\n      const periods = [];\r\n      const now = new Date();\r\n      for (let i = 0; i < 6; i++) {\r\n        const date = new Date(now.getFullYear(), now.getMonth() - i, 1);\r\n        periods.push(`${date.toLocaleString('default', { month: 'long' })} 1-15, ${date.getFullYear()}`);\r\n        periods.push(`${date.toLocaleString('default', { month: 'long' })} 16-${new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()}, ${date.getFullYear()}`);\r\n      }\r\n      this.payPeriods = periods;\r\n      this.selectedPayPeriod = periods[0];\r\n    },\r\n    getStatusClass(status) {\r\n      const classes = {\r\n        'On Time': 'text-green-600 bg-green-100 px-2 py-1 rounded-full',\r\n        'Late': 'text-yellow-600 bg-yellow-100 px-2 py-1 rounded-full',\r\n        'Absent': 'text-red-600 bg-red-100 px-2 py-1 rounded-full'\r\n      };\r\n      return classes[status] || '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add custom styles if needed */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}