{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\n// import moment from 'moment';\n\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      totalEmployees: 0,\n      totalPresentToday: 0,\n      totalLateToday: 0,\n      totalEligibleForSalaryToday: 0,\n      attendanceRecords: [],\n      isProcessingPayroll: false,\n      showDetailsModal: false,\n      selectedEmployee: {},\n      statusMessage: '',\n      isLoading: false\n    };\n  },\n  created() {\n    this.fetchDashboardData();\n  },\n  methods: {\n    async fetchDashboardData() {\n      this.isLoading = true;\n      await Promise.all([this.fetchTotalEmployees(), this.fetchAttendanceRecords(), this.fetchTotalLateToday(), this.fetchEligibleForSalary()]);\n      this.isLoading = false;\n    },\n    async fetchTotalEmployees() {\n      try {\n        const response = await axios.get('http://localhost:7777/api/employees/count');\n        this.totalEmployees = response.data.total || 0;\n      } catch (error) {\n        console.error('Failed to fetch total employees:', error);\n        this.totalEmployees = 0;\n        this.showErrorMessage('Failed to fetch total employees.');\n      }\n    },\n    async fetchAttendanceRecords() {\n      try {\n        const today = new Date().toISOString().split('T')[0];\n        const response = await axios.get(`http://localhost:7777/api/attendance?date=${today}`);\n        this.attendanceRecords = response.data || [];\n        this.totalPresentToday = this.attendanceRecords.filter(r => r.signInTime).length;\n      } catch (error) {\n        console.error('Failed to fetch attendance records:', error);\n        this.attendanceRecords = [];\n        this.totalPresentToday = 0;\n        this.showErrorMessage('Failed to fetch attendance records.');\n      }\n    },\n    async fetchTotalLateToday() {\n      try {\n        const today = new Date().toISOString().split('T')[0];\n        const response = await axios.get(`http://localhost:7777/api/attendance/late?date=${today}`);\n        this.totalLateToday = response.data.total || 0;\n      } catch (error) {\n        console.error('Failed to fetch total late today:', error);\n        this.totalLateToday = 0;\n        this.showErrorMessage('Failed to fetch late employees count.');\n      }\n    },\n    async fetchEligibleForSalary() {\n      try {\n        const response = await axios.get('http://localhost:7777/api/employees/eligible-for-salary');\n        this.totalEligibleForSalaryToday = response.data.total || 0;\n      } catch (error) {\n        console.error('Failed to fetch eligible for salary:', error);\n        this.totalEligibleForSalaryToday = 0;\n        this.showErrorMessage('Failed to fetch salary eligibility data.');\n      }\n    },\n    async refreshAttendance() {\n      this.isLoading = true;\n      try {\n        await this.fetchAttendanceRecords();\n        await this.fetchTotalLateToday();\n        this.showSuccessMessage('Attendance data refreshed successfully!');\n      } catch (error) {\n        this.showErrorMessage('Failed to refresh attendance data.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async processPayroll() {\n      this.isProcessingPayroll = true;\n      try {\n        const response = await axios.post('http://localhost:7777/api/payroll/process');\n        if (response.status === 200) {\n          this.showSuccessMessage('Payroll processed successfully!');\n        } else {\n          this.showErrorMessage('Payroll processing failed. Please check the server logs.');\n        }\n      } catch (error) {\n        console.error('Failed to process payroll:', error);\n        this.showErrorMessage('Failed to process payroll. Please try again later.');\n      } finally {\n        this.isProcessingPayroll = false;\n      }\n    },\n    async exportAttendance() {\n      try {\n        const response = await axios.get('http://localhost:7777/api/attendance/export', {\n          responseType: 'blob'\n        });\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `attendance-${new Date().toISOString().split('T')[0]}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        this.showSuccessMessage('Attendance data exported to CSV successfully!');\n      } catch (error) {\n        console.error('Failed to export attendance:', error);\n        this.showErrorMessage('Failed to export attendance data.');\n      }\n    },\n    viewEmployeeDetails(employee) {\n      this.selectedEmployee = employee;\n      this.showDetailsModal = true;\n    },\n    async deleteAttendance(id) {\n      if (confirm('Are you sure you want to delete this attendance record?')) {\n        try {\n          await axios.delete(`http://localhost:7777/api/attendance/${id}`);\n          await this.fetchAttendanceRecords();\n          this.showSuccessMessage('Attendance record deleted successfully!');\n        } catch (error) {\n          console.error('Failed to delete attendance record:', error);\n          this.showErrorMessage('Failed to delete attendance record.');\n        }\n      }\n    },\n    getStatusClass(status) {\n      switch (status) {\n        case 'Present':\n          return 'text-green-600';\n        case 'Late':\n          return 'text-yellow-600';\n        default:\n          return 'text-red-600';\n      }\n    },\n    logout() {\n      localStorage.removeItem('userId');\n      localStorage.removeItem('userName');\n      localStorage.removeItem('userRole');\n      this.$router.push('/login');\n    },\n    showSuccessMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => {\n        this.statusMessage = '';\n      }, 3000);\n    },\n    showErrorMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => {\n        this.statusMessage = '';\n      }, 5000);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","totalEmployees","totalPresentToday","totalLateToday","totalEligibleForSalaryToday","attendanceRecords","isProcessingPayroll","showDetailsModal","selectedEmployee","statusMessage","isLoading","created","fetchDashboardData","methods","Promise","all","fetchTotalEmployees","fetchAttendanceRecords","fetchTotalLateToday","fetchEligibleForSalary","response","get","total","error","console","showErrorMessage","today","Date","toISOString","split","filter","r","signInTime","length","refreshAttendance","showSuccessMessage","processPayroll","post","status","exportAttendance","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","viewEmployeeDetails","employee","deleteAttendance","id","confirm","delete","getStatusClass","logout","localStorage","removeItem","$router","push","message","setTimeout"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\admind\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-50\">\r\n    <!-- Top Navigation Bar -->\r\n    <nav class=\"bg-white shadow-md sticky top-0 z-10\">\r\n      <div class=\"max-w-7xl mx-auto px-4\">\r\n        <div class=\"flex justify-between h-16\">\r\n          <div class=\"flex items-center space-x-4\">\r\n            <span class=\"material-icons text-indigo-600\">dashboard</span>\r\n            <h1 class=\"text-lg font-bold text-gray-900\">Admin Dashboard</h1>\r\n          </div>\r\n          <div class=\"flex items-center space-x-4\">\r\n            <div class=\"flex items-center space-x-2 bg-indigo-100 px-3 py-1 rounded-full\">\r\n              <span class=\"material-icons text-indigo-600\">admin_panel_settings</span>\r\n              <span class=\"text-indigo-800 font-medium text-sm\">Admin</span>\r\n            </div>\r\n            <button @click=\"logout\" class=\"flex items-center space-x-2 text-gray-600 hover:text-red-600 transition-colors text-sm\">\r\n              <span class=\"material-icons\">logout</span>\r\n              <span>Logout</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    \r\n    <div class=\"max-w-7xl mx-auto px-4 py-6\">\r\n      <!-- Stats Overview with Hover Effects -->\r\n      <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <!-- Total Employees -->\r\n        <div class=\"bg-white rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1\">\r\n          <div class=\"p-4\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"rounded-full bg-indigo-100 p-2\">\r\n                <span class=\"material-icons text-indigo-600\">groups</span>\r\n              </div>\r\n              <div class=\"ml-3\">\r\n                <p class=\"text-xs font-medium text-gray-600\">Total Employees</p>\r\n                <h3 class=\"text-xl font-bold text-gray-900\">{{ totalEmployees }}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Present Today -->\r\n        <div class=\"bg-white rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1\">\r\n          <div class=\"p-4\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"rounded-full bg-green-100 p-2\">\r\n                <span class=\"material-icons text-green-600\">how_to_reg</span>\r\n              </div>\r\n              <div class=\"ml-3\">\r\n                <p class=\"text-xs font-medium text-gray-600\">Present Today</p>\r\n                <h3 class=\"text-xl font-bold text-gray-900\">{{ totalPresentToday }}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Total Lates -->\r\n        <div class=\"bg-white rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1\">\r\n          <div class=\"p-4\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"rounded-full bg-yellow-100 p-2\">\r\n                <span class=\"material-icons text-yellow-600\">schedule</span>\r\n              </div>\r\n              <div class=\"ml-3\">\r\n                <p class=\"text-xs font-medium text-gray-600\">Late Today</p>\r\n                <h3 class=\"text-xl font-bold text-gray-900\">{{ totalLateToday }}</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Action Buttons -->\r\n      <div class=\"mt-8 flex space-x-4\">\r\n        <button @click=\"refreshAttendance\" class=\"flex items-center space-x-2 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors text-sm\" :disabled=\"isLoading\">\r\n          <span v-if=\"isLoading\" class=\"animate-spin material-icons\">refresh</span>\r\n          <span v-else class=\"material-icons\">refresh</span>\r\n          <span>Refresh Data</span>\r\n        </button>\r\n        <button @click=\"exportAttendance\" class=\"flex items-center space-x-2 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors text-sm\" :disabled=\"isLoading\">\r\n          <span class=\"material-icons\">download</span>\r\n          <span>Export CSV</span>\r\n        </button>\r\n        <button @click=\"processPayroll\" class=\"flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm\" :disabled=\"isProcessingPayroll\">\r\n          <span class=\"material-icons\">payment</span>\r\n          <span>{{ isProcessingPayroll ? 'Processing...' : 'Process Payroll' }}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Enhanced Attendance Table -->\r\n      <div class=\"mt-8 bg-white rounded-xl shadow-sm overflow-hidden\">\r\n        <div class=\"p-4 border-b\">\r\n          <h2 class=\"text-lg font-bold text-gray-900 flex items-center\">\r\n            <span class=\"material-icons mr-2\">event_note</span>\r\n            Today's Attendance\r\n          </h2>\r\n        </div>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <span class=\"material-icons text-gray-400\">badge</span>\r\n                    <span>Employee</span>\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <span class=\"material-icons text-gray-400\">work</span>\r\n                    <span>Position</span>\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <span class=\"material-icons text-gray-400\">login</span>\r\n                    <span>Sign In</span>\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <span class=\"material-icons text-gray-400\">logout</span>\r\n                    <span>Sign Out</span>\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <span class=\"material-icons text-gray-400\">info</span>\r\n                    <span>Status</span>\r\n                  </div>\r\n                </th>\r\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <div class=\"flex items-center space-x-2\">\r\n                    <span class=\"material-icons text-gray-400\">settings</span>\r\n                    <span>Actions</span>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"divide-y divide-gray-200\">\r\n              <template v-if=\"isLoading\">\r\n                <tr v-for=\"n in 5\" :key=\"n\" class=\"animate-pulse\">\r\n                  <td v-for=\"m in 6\" :key=\"m\" class=\"px-4 py-3\"><div class=\"h-3 bg-gray-200 rounded\"></div></td>\r\n                </tr>\r\n              </template>\r\n              <template v-else>\r\n                <tr v-for=\"record in attendanceRecords\" :key=\"record.id\" class=\"hover:bg-gray-50 transition-colors cursor-pointer\" @click=\"viewEmployeeDetails(record)\">\r\n                  <td class=\"px-4 py-3\">\r\n                    <div class=\"flex items-center space-x-2\">\r\n                      <img class=\"h-8 w-8 rounded-full object-cover\" :src=\"`https://ui-avatars.com/api/?name=${record.firstName}+${record.lastName}&background=random`\" :alt=\"record.firstName\" />\r\n                      <div>\r\n                        <div class=\"font-medium text-gray-900 text-sm\">{{ record.firstName }} {{ record.lastName }}</div>\r\n                        <div class=\"text-xs text-gray-500\">{{ record.employeeId }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-3 text-sm text-gray-600\">{{ record.position }}</td>\r\n                  <td class=\"px-4 py-3 text-sm text-gray-600\">{{ record.signInTime || '--' }}</td>\r\n                  <td class=\"px-4 py-3 text-sm text-gray-600\">{{ record.signOutTime || '--' }}</td>\r\n                  <td class=\"px-4 py-3 text-sm\" :class=\"getStatusClass(record.status)\">{{ record.status || 'Absent' }}</td>\r\n                  <td class=\"px-4 py-3 text-sm\">\r\n                    <div class=\"flex space-x-2\">\r\n                      <button @click.stop=\"viewEmployeeDetails(record)\" class=\"text-blue-600 hover:text-blue-800 transition text-xs\" title=\"View Details\" aria-label=\"View employee details\">\r\n                        <span class=\"material-icons\">visibility</span>\r\n                      </button>\r\n                      <button @click.stop=\"deleteAttendance(record.id)\" class=\"text-red-600 hover:text-red-800 transition text-xs\" title=\"Delete Record\" aria-label=\"Delete attendance record\">\r\n                        <span class=\"material-icons\">delete</span>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr v-if=\"attendanceRecords.length === 0\">\r\n                  <td colspan=\"6\" class=\"px-4 py-3 text-center text-sm text-gray-500\">No attendance records for today.</td>\r\n                </tr>\r\n              </template>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Enhanced Modal -->\r\n      <transition name=\"fade\">\r\n        <div v-if=\"showDetailsModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div class=\"bg-white rounded-xl shadow-xl max-w-2xl w-full transform transition-all scale-95\" :class=\"{ 'scale-100': showDetailsModal }\">\r\n            <div class=\"p-4 border-b flex justify-between items-center\">\r\n              <h2 class=\"text-lg font-bold text-gray-900 flex items-center\">\r\n                <span class=\"material-icons mr-2\">person</span> Employee Details\r\n              </h2>\r\n              <button @click=\"showDetailsModal = false\" class=\"text-gray-600 hover:text-gray-800 text-sm\">\r\n                <span class=\"material-icons\">close</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"p-4 space-y-2\">\r\n              <p class=\"text-sm\"><strong>ID:</strong> {{ selectedEmployee.employeeId }}</p>\r\n              <p class=\"text-sm\"><strong>Name:</strong> {{ selectedEmployee.firstName }} {{ selectedEmployee.lastName }}</p>\r\n              <p class=\"text-sm\"><strong>Position:</strong> {{ selectedEmployee.position }}</p>\r\n              <p class=\"text-sm\"><strong>Email:</strong> {{ selectedEmployee.email }}</p>\r\n              <p class=\"text-sm\"><strong>Sign In Time:</strong> {{ selectedEmployee.signInTime || 'N/A' }}</p>\r\n              <p class=\"text-sm\"><strong>Sign Out Time:</strong> {{ selectedEmployee.signOutTime || 'N/A' }}</p>\r\n              <p class=\"text-sm\"><strong>Status:</strong> <span :class=\"getStatusClass(selectedEmployee.status)\">{{ selectedEmployee.status || 'Absent' }}</span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n\r\n      <!-- Enhanced Status Messages -->\r\n      <transition name=\"slide-fade\">\r\n        <div v-if=\"statusMessage\" class=\"fixed bottom-4 right-4 flex items-center space-x-2 p-3 rounded-lg shadow-lg z-50 text-sm\" :class=\"statusMessage.includes('successfully') ? 'bg-green-500' : 'bg-red-500'\">\r\n          <span class=\"material-icons text-white\">{{ statusMessage.includes('successfully') ? 'check_circle' : 'error' }}</span>\r\n          <span class=\"text-white\">{{ statusMessage }}</span>\r\n        </div>\r\n      </transition>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n// import moment from 'moment';\r\n\r\nexport default {\r\n  name: 'AdminDashboard',\r\n  data() {\r\n    return {\r\n      totalEmployees: 0,\r\n      totalPresentToday: 0,\r\n      totalLateToday: 0,\r\n      totalEligibleForSalaryToday: 0,\r\n      attendanceRecords: [],\r\n      isProcessingPayroll: false,\r\n      showDetailsModal: false,\r\n      selectedEmployee: {},\r\n      statusMessage: '',\r\n      isLoading: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchDashboardData();\r\n  },\r\n  methods: {\r\n    async fetchDashboardData() {\r\n      this.isLoading = true;\r\n      await Promise.all([\r\n        this.fetchTotalEmployees(),\r\n        this.fetchAttendanceRecords(),\r\n        this.fetchTotalLateToday(),\r\n        this.fetchEligibleForSalary()\r\n      ]);\r\n      this.isLoading = false;\r\n    },\r\n    async fetchTotalEmployees() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees/count');\r\n        this.totalEmployees = response.data.total || 0;\r\n      } catch (error) {\r\n        console.error('Failed to fetch total employees:', error);\r\n        this.totalEmployees = 0;\r\n        this.showErrorMessage('Failed to fetch total employees.');\r\n      }\r\n    },\r\n    async fetchAttendanceRecords() {\r\n      try {\r\n        const today = new Date().toISOString().split('T')[0];\r\n        const response = await axios.get(`http://localhost:7777/api/attendance?date=${today}`);\r\n        this.attendanceRecords = response.data || [];\r\n        this.totalPresentToday = this.attendanceRecords.filter(r => r.signInTime).length;\r\n      } catch (error) {\r\n        console.error('Failed to fetch attendance records:', error);\r\n        this.attendanceRecords = [];\r\n        this.totalPresentToday = 0;\r\n        this.showErrorMessage('Failed to fetch attendance records.');\r\n      }\r\n    },\r\n    async fetchTotalLateToday() {\r\n      try {\r\n        const today = new Date().toISOString().split('T')[0];\r\n        const response = await axios.get(`http://localhost:7777/api/attendance/late?date=${today}`);\r\n        this.totalLateToday = response.data.total || 0;\r\n      } catch (error) {\r\n        console.error('Failed to fetch total late today:', error);\r\n        this.totalLateToday = 0;\r\n        this.showErrorMessage('Failed to fetch late employees count.');\r\n      }\r\n    },\r\n    async fetchEligibleForSalary() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees/eligible-for-salary');\r\n        this.totalEligibleForSalaryToday = response.data.total || 0;\r\n      } catch (error) {\r\n        console.error('Failed to fetch eligible for salary:', error);\r\n        this.totalEligibleForSalaryToday = 0;\r\n        this.showErrorMessage('Failed to fetch salary eligibility data.');\r\n      }\r\n    },\r\n    async refreshAttendance() {\r\n      this.isLoading = true;\r\n      try {\r\n        await this.fetchAttendanceRecords();\r\n        await this.fetchTotalLateToday();\r\n        this.showSuccessMessage('Attendance data refreshed successfully!');\r\n      } catch (error) {\r\n        this.showErrorMessage('Failed to refresh attendance data.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async processPayroll() {\r\n      this.isProcessingPayroll = true;\r\n      try {\r\n        const response = await axios.post('http://localhost:7777/api/payroll/process');\r\n        if (response.status === 200) {\r\n          this.showSuccessMessage('Payroll processed successfully!');\r\n        } else {\r\n          this.showErrorMessage('Payroll processing failed. Please check the server logs.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to process payroll:', error);\r\n        this.showErrorMessage('Failed to process payroll. Please try again later.');\r\n      } finally {\r\n        this.isProcessingPayroll = false;\r\n      }\r\n    },\r\n    async exportAttendance() {\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/attendance/export', { responseType: 'blob' });\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', `attendance-${new Date().toISOString().split('T')[0]}.csv`);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        this.showSuccessMessage('Attendance data exported to CSV successfully!');\r\n      } catch (error) {\r\n        console.error('Failed to export attendance:', error);\r\n        this.showErrorMessage('Failed to export attendance data.');\r\n      }\r\n    },\r\n    viewEmployeeDetails(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.showDetailsModal = true;\r\n    },\r\n    async deleteAttendance(id) {\r\n      if (confirm('Are you sure you want to delete this attendance record?')) {\r\n        try {\r\n          await axios.delete(`http://localhost:7777/api/attendance/${id}`);\r\n          await this.fetchAttendanceRecords();\r\n          this.showSuccessMessage('Attendance record deleted successfully!');\r\n        } catch (error) {\r\n          console.error('Failed to delete attendance record:', error);\r\n          this.showErrorMessage('Failed to delete attendance record.');\r\n        }\r\n      }\r\n    },\r\n    getStatusClass(status) {\r\n      switch (status) {\r\n        case 'Present': return 'text-green-600';\r\n        case 'Late': return 'text-yellow-600';\r\n        default: return 'text-red-600';\r\n      }\r\n    },\r\n    logout() {\r\n      localStorage.removeItem('userId');\r\n      localStorage.removeItem('userName');\r\n      localStorage.removeItem('userRole');\r\n      this.$router.push('/login');\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => {\r\n        this.statusMessage = '';\r\n      }, 3000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => {\r\n        this.statusMessage = '';\r\n      }, 5000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.slide-fade-enter-active {\r\n  transition: all 0.3s ease-out;\r\n}\r\n\r\n.slide-fade-leave-active {\r\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\r\n}\r\n\r\n.slide-fade-enter-from,\r\n.slide-fade-leave-to {\r\n  transform: translateX(20px);\r\n  opacity: 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}