{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport axios from 'axios';\nimport PayHeadModal from '@/components/payhead/PayHeadModal.vue';\nimport PayHeadTable from '@/components/payhead/PayHeadTable.vue';\nimport EmployeePayrollTable from '@/components/payhead/EmployeePayrollTable.vue';\nimport AddPayheadModal from '@/components/payhead/AddPayheadModal.vue';\nimport RecurringDeductionModal from '@/components/payhead/RecurringDeductionModal.vue';\nexport default {\n  name: 'ManagePayHeads',\n  components: {\n    PayHeadModal,\n    PayHeadTable,\n    EmployeePayrollTable,\n    AddPayheadModal,\n    RecurringDeductionModal\n  },\n  data() {\n    return {\n      payHeads: [],\n      employees: [],\n      newPayHead: {\n        name: '',\n        amount: 0,\n        type: 'Earnings',\n        description: '',\n        isRecurring: false,\n        appliedThisCycle: false\n      },\n      selectedPayHead: {\n        id: '',\n        name: '',\n        amount: 0,\n        type: 'Earnings',\n        description: '',\n        isRecurring: false,\n        appliedThisCycle: false\n      },\n      showAddModal: false,\n      showUpdateModal: false,\n      showAddPayheadModal: false,\n      showRecurringDeductionModal: false,\n      selectedEmployee: null,\n      selectedEmployeePayheads: [],\n      availablePayheads: [],\n      statusMessage: '',\n      searchQuery: '',\n      filterType: '',\n      activeTab: 'payheads',\n      currentPage: 1,\n      itemsPerPage: 10,\n      isLoading: false\n    };\n  },\n  computed: {\n    filteredPayHeads() {\n      let filtered = [...this.payHeads];\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(p => p.name.toLowerCase().includes(query) || p.description && p.description.toLowerCase().includes(query));\n      }\n      if (this.filterType) {\n        filtered = filtered.filter(p => p.type === this.filterType || this.filterType === 'Recurring Deductions' && p.isRecurring);\n      }\n      return filtered;\n    },\n    filteredEmployees() {\n      let filtered = [...this.employees];\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(e => e.name.toLowerCase().includes(query) || e.position && e.position.toLowerCase().includes(query));\n      }\n      if (this.filterType) {\n        filtered = filtered.filter(e => {\n          const earnings = this.calculateEarnings(e.payheads || []);\n          const deductions = this.calculateDeductions(e.payheads || []);\n          const recurringDeductions = this.calculateRecurringDeductions(e.payheads || []);\n          if (this.filterType === 'Earnings') return earnings > 0;\n          if (this.filterType === 'Deductions') return deductions > 0;\n          if (this.filterType === 'Recurring Deductions') return recurringDeductions > 0;\n          return true;\n        });\n      }\n      return filtered;\n    },\n    paginatedEmployees() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredEmployees.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage) || 1;\n    },\n    displayedPages() {\n      const total = this.totalPages;\n      const current = this.currentPage;\n      const pages = [];\n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) pages.push(i);\n      } else {\n        if (current <= 3) {\n          for (let i = 1; i <= 5; i++) pages.push(i);\n          pages.push('...', total);\n        } else if (current >= total - 2) {\n          pages.push(1, '...');\n          for (let i = total - 4; i <= total; i++) pages.push(i);\n        } else {\n          pages.push(1, '...');\n          for (let i = current - 1; i <= current + 1; i++) pages.push(i);\n          pages.push('...', total);\n        }\n      }\n      return pages;\n    },\n    totalPayableSalary() {\n      if (!this.selectedEmployee) return 0;\n      const earnings = this.calculateEarnings(this.selectedEmployeePayheads || []);\n      const deductions = this.calculateDeductions(this.selectedEmployeePayheads || []);\n      const recurringDeductions = this.calculateRecurringDeductions(this.selectedEmployeePayheads || []);\n      return (this.selectedEmployee.salary || 0) + earnings - deductions - recurringDeductions;\n    }\n  },\n  methods: {\n    async fetchPayHeads() {\n      this.isLoading = true;\n      this.statusMessage = '';\n      try {\n        const response = await axios.get('http://localhost:7777/api/payheads', {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        this.payHeads = response.data.map(item => ({\n          ...item,\n          amount: Number(item.amount),\n          isRecurring: item.isRecurring || false,\n          appliedThisCycle: item.appliedThisCycle || false\n        })) || [];\n        this.showSuccessMessage('Pay heads loaded successfully!');\n      } catch (error) {\n        console.error('Error fetching pay heads:', error);\n        this.showErrorMessage('Failed to load pay heads. Please try again.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchEmployees() {\n      this.isLoading = true;\n      this.statusMessage = '';\n      try {\n        const response = await axios.get('http://localhost:7777/api/employees', {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        this.employees = response.data.map(emp => ({\n          ...emp,\n          name: `${emp.firstName || ''} ${emp.lastName || ''}`.trim(),\n          position: emp.position || 'N/A',\n          payheads: emp.payheads ? emp.payheads.map(ph => ({\n            ...ph,\n            amount: Number(ph.amount),\n            isRecurring: ph.isRecurring || false,\n            appliedThisCycle: ph.appliedThisCycle || false\n          })) : [],\n          totalEarnings: this.calculateEarnings(emp.payheads || []),\n          totalDeduction: this.calculateDeductions(emp.payheads || []),\n          totalRecurringDeduction: this.calculateRecurringDeductions(emp.payheads || []),\n          totalSalary: (emp.salary || 0) + this.calculateEarnings(emp.payheads || []) - this.calculateDeductions(emp.payheads || []) - this.calculateRecurringDeductions(emp.payheads || [])\n        }));\n        this.showSuccessMessage('Employees loaded successfully!');\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n        this.showErrorMessage('Failed to load employees. Please try again.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async addPayHead(payHead) {\n      try {\n        this.isLoading = true;\n        const payload = {\n          ...payHead,\n          amount: Number(payHead.amount),\n          isRecurring: payHead.isRecurring || false,\n          appliedThisCycle: false\n        };\n        const response = await axios.post('http://localhost:7777/api/payheads', payload, {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        this.payHeads.push({\n          ...response.data,\n          amount: Number(response.data.amount)\n        });\n        this.showAddModal = false;\n        this.showSuccessMessage('Pay head added successfully!');\n        await this.fetchEmployees();\n      } catch (error) {\n        console.error('Error adding pay head:', error);\n        this.showErrorMessage('Failed to add pay head.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    showUpdatePayHeadModal(payHead) {\n      this.selectedPayHead = {\n        ...payHead,\n        amount: Number(payHead.amount)\n      };\n      this.showUpdateModal = true;\n    },\n    async updatePayHead(updatedPayHead) {\n      try {\n        this.isLoading = true;\n        const payload = {\n          ...updatedPayHead,\n          amount: Number(updatedPayHead.amount),\n          isRecurring: updatedPayHead.isRecurring || false,\n          appliedThisCycle: updatedPayHead.appliedThisCycle || false\n        };\n        const response = await axios.put(`http://localhost:7777/api/payheads/${updatedPayHead.id}`, payload, {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        const index = this.payHeads.findIndex(ph => ph.id === updatedPayHead.id);\n        if (index !== -1) {\n          this.payHeads.splice(index, 1, {\n            ...response.data,\n            amount: Number(response.data.amount)\n          });\n          this.showUpdateModal = false;\n          this.showSuccessMessage('Pay head updated successfully!');\n          await this.fetchEmployees();\n        }\n      } catch (error) {\n        console.error('Error updating pay head:', error);\n        this.showErrorMessage('Failed to update pay head.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async confirmDeletePayHead(id) {\n      if (confirm('Are you sure you want to delete this pay head?')) {\n        await this.deletePayHead(id);\n      }\n    },\n    async deletePayHead(id) {\n      try {\n        this.isLoading = true;\n        await axios.delete(`http://localhost:7777/api/payheads/${id}`, {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\n        this.showSuccessMessage('Pay head deleted successfully!');\n        await this.fetchEmployees();\n      } catch (error) {\n        console.error('Error deleting pay head:', error);\n        this.showErrorMessage('Failed to delete pay head.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    openAddPayheadModal(employee) {\n      this.selectedEmployee = {\n        ...employee,\n        salary: employee.salary || 0\n      };\n      this.selectedEmployeePayheads = [...(employee.payheads || [])];\n      this.availablePayheads = [...this.payHeads];\n      this.showAddPayheadModal = true;\n    },\n    addPayheadToEmployee(payhead) {\n      const newPayhead = {\n        ...payhead,\n        amount: Number(payhead.amount),\n        uniqueId: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        appliedThisCycle: payhead.isRecurring ? false : undefined\n      };\n      this.selectedEmployeePayheads.push(newPayhead);\n    },\n    removePayheadFromEmployee(payhead) {\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(p => p.uniqueId !== payhead.uniqueId);\n    },\n    updatePayheadInEmployee(updatedPayhead) {\n      const index = this.selectedEmployeePayheads.findIndex(p => p.uniqueId === updatedPayhead.uniqueId);\n      if (index !== -1) {\n        this.selectedEmployeePayheads.splice(index, 1, {\n          ...updatedPayhead,\n          amount: Number(updatedPayhead.amount),\n          appliedThisCycle: updatedPayhead.isRecurring ? updatedPayhead.appliedThisCycle : undefined\n        });\n      }\n    },\n    async savePayheads() {\n      try {\n        this.isLoading = true;\n        const payheadsToSave = this.selectedEmployeePayheads.map(ph => ({\n          id: ph.id,\n          name: ph.name,\n          amount: Number(ph.amount),\n          type: ph.type,\n          isRecurring: ph.isRecurring || false,\n          appliedThisCycle: ph.isRecurring ? ph.appliedThisCycle || false : undefined\n        }));\n        const updatedEmployee = {\n          ...this.selectedEmployee,\n          payheads: payheadsToSave,\n          totalEarnings: this.calculateEarnings(payheadsToSave),\n          totalDeduction: this.calculateDeductions(payheadsToSave),\n          totalRecurringDeduction: this.calculateRecurringDeductions(payheadsToSave),\n          totalSalary: (this.selectedEmployee.salary || 0) + this.calculateEarnings(payheadsToSave) - this.calculateDeductions(payheadsToSave) - this.calculateRecurringDeductions(payheadsToSave)\n        };\n        await axios.put(`http://localhost:7777/api/employees/${this.selectedEmployee.id}`, updatedEmployee, {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        const employeeIndex = this.employees.findIndex(e => e.id === this.selectedEmployee.id);\n        if (employeeIndex !== -1) {\n          this.employees.splice(employeeIndex, 1, updatedEmployee);\n        }\n        this.showAddPayheadModal = false;\n        this.showSuccessMessage('Payheads saved successfully!');\n      } catch (error) {\n        console.error('Error saving payheads:', error);\n        this.showErrorMessage('Failed to save payheads.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async saveRecurringDeductions(selectedDeductions, selectedEmployees) {\n      try {\n        this.isLoading = true;\n        for (const employee of selectedEmployees) {\n          const existingPayheads = this.employees.find(e => e.id === employee.id).payheads || [];\n          const updatedPayheads = [...existingPayheads];\n          selectedDeductions.forEach(deduction => {\n            if (!updatedPayheads.some(ph => ph.id === deduction.id && ph.isRecurring)) {\n              updatedPayheads.push({\n                ...deduction,\n                uniqueId: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                isRecurring: true,\n                appliedThisCycle: false\n              });\n            }\n          });\n          const updatedEmployee = {\n            ...employee,\n            payheads: updatedPayheads,\n            totalEarnings: this.calculateEarnings(updatedPayheads),\n            totalDeduction: this.calculateDeductions(updatedPayheads),\n            totalRecurringDeduction: this.calculateRecurringDeductions(updatedPayheads),\n            totalSalary: (employee.salary || 0) + this.calculateEarnings(updatedPayheads) - this.calculateDeductions(updatedPayheads) - this.calculateRecurringDeductions(updatedPayheads)\n          };\n          await axios.put(`http://localhost:7777/api/employees/${employee.id}`, updatedEmployee, {\n            headers: {\n              'user-role': 'admin'\n            }\n          });\n          const employeeIndex = this.employees.findIndex(e => e.id === employee.id);\n          if (employeeIndex !== -1) {\n            this.employees.splice(employeeIndex, 1, updatedEmployee);\n          }\n        }\n        this.showRecurringDeductionModal = false;\n        this.showSuccessMessage('Recurring deductions saved successfully!');\n      } catch (error) {\n        console.error('Error saving recurring deductions:', error);\n        this.showErrorMessage('Failed to save recurring deductions.');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    calculateEarnings(payheads = []) {\n      return payheads.filter(p => p.type === 'Earnings').reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\n    },\n    calculateDeductions(payheads = []) {\n      return payheads.filter(p => p.type === 'Deductions' && !p.isRecurring).reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\n    },\n    calculateRecurringDeductions(payheads = []) {\n      return payheads.filter(p => p.isRecurring && !p.appliedThisCycle).reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    resetFilters() {\n      this.searchQuery = '';\n      this.filterType = '';\n    },\n    showSuccessMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => {\n        this.statusMessage = '';\n      }, 3000);\n    },\n    showErrorMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => {\n        this.statusMessage = '';\n      }, 3000);\n    },\n    resetPayheadsCycle() {\n      this.payHeads = this.payHeads.map(ph => ({\n        ...ph,\n        appliedThisCycle: ph.isRecurring ? false : ph.appliedThisCycle\n      }));\n      this.employees = this.employees.map(emp => ({\n        ...emp,\n        payheads: emp.payheads.map(ph => ({\n          ...ph,\n          appliedThisCycle: ph.isRecurring ? false : ph.appliedThisCycle\n        }))\n      }));\n    }\n  },\n  created() {\n    this.fetchPayHeads();\n    this.fetchEmployees();\n    // Simulate payroll cycle reset (could be triggered by a cron job or manual action)\n    setInterval(() => this.resetPayheadsCycle(), 24 * 60 * 60 * 1000); // Reset daily for demo\n  }\n};","map":{"version":3,"names":["axios","PayHeadModal","PayHeadTable","EmployeePayrollTable","AddPayheadModal","RecurringDeductionModal","name","components","data","payHeads","employees","newPayHead","amount","type","description","isRecurring","appliedThisCycle","selectedPayHead","id","showAddModal","showUpdateModal","showAddPayheadModal","showRecurringDeductionModal","selectedEmployee","selectedEmployeePayheads","availablePayheads","statusMessage","searchQuery","filterType","activeTab","currentPage","itemsPerPage","isLoading","computed","filteredPayHeads","filtered","query","toLowerCase","filter","p","includes","filteredEmployees","e","position","earnings","calculateEarnings","payheads","deductions","calculateDeductions","recurringDeductions","calculateRecurringDeductions","paginatedEmployees","start","end","slice","totalPages","Math","ceil","length","displayedPages","total","current","pages","i","push","totalPayableSalary","salary","methods","fetchPayHeads","response","get","headers","map","item","Number","showSuccessMessage","error","console","showErrorMessage","fetchEmployees","emp","firstName","lastName","trim","ph","totalEarnings","totalDeduction","totalRecurringDeduction","totalSalary","addPayHead","payHead","payload","post","showUpdatePayHeadModal","updatePayHead","updatedPayHead","put","index","findIndex","splice","confirmDeletePayHead","confirm","deletePayHead","delete","openAddPayheadModal","employee","addPayheadToEmployee","payhead","newPayhead","uniqueId","Date","now","random","toString","substr","undefined","removePayheadFromEmployee","updatePayheadInEmployee","updatedPayhead","savePayheads","payheadsToSave","updatedEmployee","employeeIndex","saveRecurringDeductions","selectedDeductions","selectedEmployees","existingPayheads","find","updatedPayheads","forEach","deduction","some","reduce","sum","prevPage","nextPage","resetFilters","message","setTimeout","resetPayheadsCycle","created","setInterval"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\admind\\ManagePayHeads.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Main Content -->\r\n    <main class=\"flex-1 max-w-9xl mx-auto px-2 sm:px-4 lg:px-6 py-1\">\r\n      <!-- Controls Section -->\r\n      <div class=\"bg-white rounded-lg shadow-sm p-3 mb-4 border border-gray-100\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-12 gap-3\">\r\n          <!-- Search Input -->\r\n          <div class=\"md:col-span-5 relative\">\r\n            <label for=\"search\" class=\"block text-xs font-medium text-gray-700 mb-0.5\">Search</label>\r\n            <div class=\"relative\">\r\n              <span class=\"material-icons absolute left-2 top-1/2 -translate-y-1/2 text-gray-400 text-base\">\r\n                search\r\n              </span>\r\n              <input\r\n                id=\"search\"\r\n                v-model=\"searchQuery\"\r\n                type=\"text\"\r\n                placeholder=\"Search by name or description...\"\r\n                class=\"w-full pl-8 pr-3 py-1.5 border rounded-md focus:ring-1 focus:ring-blue-500 \r\n                      focus:border-blue-500 outline-none transition-all text-sm\"\r\n              />\r\n              <button \r\n                v-if=\"searchQuery\" \r\n                @click=\"searchQuery = ''\"\r\n                class=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-700\"\r\n              >\r\n                <span class=\"material-icons text-base\">clear</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Filter Dropdown -->\r\n          <div class=\"md:col-span-3\">\r\n            <label for=\"filter\" class=\"block text-xs font-medium text-gray-700 mb-0.5\">Filter Type</label>\r\n            <div class=\"relative\">\r\n              <span class=\"material-icons absolute left-2 top-1/2 -translate-y-1/2 text-gray-400 text-base\">\r\n                filter_list\r\n              </span>\r\n              <select\r\n                id=\"filter\"\r\n                v-model=\"filterType\"\r\n                class=\"w-full pl-8 pr-7 py-1.5 border rounded-md appearance-none focus:ring-1 \r\n                      focus:ring-blue-500 focus:border-blue-500 outline-none text-sm\"\r\n              >\r\n                <option value=\"\">All Types</option>\r\n                <option value=\"Earnings\">Earnings</option>\r\n                <option value=\"Deductions\">Deductions</option>\r\n                <option value=\"Recurring Deductions\">Recurring Deductions</option>\r\n              </select>\r\n              <span class=\"material-icons absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none text-base\">\r\n                arrow_drop_down\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- View Toggle -->\r\n          <div class=\"md:col-span-4\">\r\n            <label class=\"block text-xs font-medium text-gray-700 mb-0.5\">View</label>\r\n            <div class=\"flex rounded-md bg-gray-100 p-0.5 shadow-inner\">\r\n              <button\r\n                v-for=\"tab in ['payheads', 'employees']\"\r\n                :key=\"tab\"\r\n                @click=\"activeTab = tab\"\r\n                class=\"flex-1 px-3 py-1.5 rounded-sm text-xs font-medium transition-all\"\r\n                :class=\"activeTab === tab ? 'bg-white text-blue-600 shadow' : 'text-gray-600 hover:text-gray-900'\"\r\n              >\r\n                <div class=\"flex items-center justify-center gap-1\">\r\n                  <span class=\"material-icons text-xs\">\r\n                    {{ tab === 'payheads' ? 'payments' : 'people' }}\r\n                  </span>\r\n                  {{ tab.charAt(0).toUpperCase() + tab.slice(1) }}\r\n                </div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div v-if=\"isLoading\" class=\"bg-white rounded-lg shadow-sm flex justify-center items-center p-10\">\r\n        <div class=\"flex flex-col items-center\">\r\n          <div class=\"loader ease-linear rounded-full border-2 border-t-2 border-gray-200 h-8 w-8 mb-2\"></div>\r\n          <h2 class=\"text-center text-gray-600 text-base font-semibold\">Loading...</h2>\r\n          <p class=\"w-full text-center text-gray-500 text-xs\">Please wait while we fetch the data</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Empty State -->\r\n      <div v-else-if=\"(activeTab === 'payheads' && filteredPayHeads.length === 0) || \r\n                      (activeTab === 'employees' && filteredEmployees.length === 0)\" \r\n           class=\"bg-white rounded-lg shadow-sm border border-gray-100\">\r\n        <div class=\"flex flex-col items-center justify-center py-8 px-3 sm:px-4 lg:px-6\">\r\n          <div class=\"rounded-full bg-blue-100 p-2 mb-2\">\r\n            <span class=\"material-icons text-blue-600 text-lg\">search_off</span>\r\n          </div>\r\n          <h3 class=\"text-base font-medium text-gray-900\">No results found</h3>\r\n          <p class=\"mt-1 text-gray-500 text-center max-w-sm text-xs\">\r\n            We couldn't find any {{ activeTab }} that match your search criteria. Try adjusting your filters or search terms.\r\n          </p>\r\n          <button \r\n            @click=\"resetFilters\" \r\n            class=\"mt-2 p-1.5 rounded-sm text-gray-700 hover:text-gray-900 bg-white border border-gray-300 shadow-sm \r\n                   focus:outline-none focus:ring-1 focus:ring-offset-1 focus:ring-blue-500 transition-all transform hover:scale-105\"\r\n            title=\"Reset Filters\"\r\n          >\r\n            <span class=\"material-icons text-base\">refresh</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Data Table Section -->\r\n      <div v-else class=\"-1 bg-white rounded-lg shadow-sm overflow-hidden border border-gray-100\">\r\n        <!-- Table Header -->\r\n        <div class=\"px-4 py-2 border-b bg-gray-50 flex items-center justify-between\">\r\n          <h2 class=\"text-base font-medium text-gray-900\">\r\n            {{ activeTab === 'payheads' ? 'Pay Heads' : 'Employees' }}\r\n          </h2>\r\n          <div class=\"flex items-center space-x-2\">\r\n            <div v-if=\"filteredPayHeads.length > 0 && activeTab === 'payheads'\" class=\"text-xs text-gray-500\">\r\n              Showing {{ filteredPayHeads.length }} {{ filteredPayHeads.length === 1 ? 'item' : 'items' }}\r\n            </div>\r\n            <button\r\n              v-if=\"activeTab === 'payheads'\"\r\n              @click=\"showAddModal = true\"\r\n              class=\"inline-flex items-center px-2 py-0.5 bg-blue-600 text-white rounded-sm \r\n                     text-xs font-medium hover:bg-blue-700 focus:outline-none focus:ring-1 \r\n                     focus:ring-offset-1 focus:ring-blue-500 transition-all shadow-sm transform hover:scale-105\"\r\n            >\r\n              <span class=\"material-icons text-xs mr-1\">add</span>\r\n              New Pay Head\r\n            </button>\r\n            <button\r\n              v-if=\"activeTab === 'payheads'\"\r\n              @click=\"showRecurringDeductionModal = true\"\r\n              class=\"inline-flex items-center px-2 py-0.5 bg-green-600 text-white rounded-sm \r\n                     text-xs font-medium hover:bg-green-700 focus:outline-none focus:ring-1 \r\n                     focus:ring-offset-1 focus:ring-green-500 transition-all shadow-sm transform hover:scale-105\"\r\n            >\r\n              <span class=\"material-icons text-xs mr-1\">repeat</span>\r\n              Add Recurring Deduction\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Table Content -->\r\n        <div class=\"overflow-x-auto\">\r\n          <component \r\n            :is=\"activeTab === 'payheads' ? 'PayHeadTable' : 'EmployeePayrollTable'\"\r\n            :payHeads=\"filteredPayHeads\"\r\n            :employees=\"paginatedEmployees\"\r\n            @update=\"showUpdatePayHeadModal\"\r\n            @delete=\"confirmDeletePayHead\"\r\n            @addPayhead=\"openAddPayheadModal\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div v-if=\"activeTab === 'employees' && totalPages > 1\" \r\n             class=\"flex items-center justify-between px-4 py-2 bg-gray-50 border-t\">\r\n          <div class=\"text-xs text-gray-700\">\r\n            Showing <span class=\"font-medium\">{{ ((currentPage - 1) * itemsPerPage) + 1 }}</span> to \r\n            <span class=\"font-medium\">{{ Math.min(currentPage * itemsPerPage, filteredEmployees.length) }}</span> of \r\n            <span class=\"font-medium\">{{ filteredEmployees.length }}</span> entries\r\n          </div>\r\n\r\n          <div class=\"flex items-center space-x-1\">\r\n            <button\r\n              @click=\"prevPage\"\r\n              :disabled=\"currentPage === 1\"\r\n              class=\"p-1 rounded-md hover:bg-blue-100 transition-all disabled:opacity-50 disabled:hover:bg-transparent\"\r\n              :class=\"currentPage === 1 ? 'text-gray-400' : 'text-gray-700'\"\r\n            >\r\n              <span class=\"material-icons text-base\">chevron_left</span>\r\n            </button>\r\n\r\n            <div class=\"flex items-center gap-0.5\">\r\n              <template v-for=\"page in displayedPages\" :key=\"page\">\r\n                <button\r\n                  v-if=\"typeof page === 'number'\"\r\n                  @click=\"currentPage = page\"\r\n                  class=\"min-w-[24px] h-6 rounded-md text-xs font-medium transition-all\"\r\n                  :class=\"currentPage === page ? 'bg-blue-600 text-white' : 'hover:bg-blue-100 text-gray-700'\"\r\n                >\r\n                  {{ page }}\r\n                </button>\r\n                <span v-else-if=\"page === '...' \" class=\"px-1 text-gray-500 text-xs\">...</span>\r\n              </template>\r\n            </div>\r\n\r\n            <button\r\n              @click=\"nextPage\"\r\n              :disabled=\"currentPage === totalPages\"\r\n              class=\"p-1 rounded-md hover:bg-blue-100 transition-all disabled:opacity-50 disabled:hover:bg-transparent\"\r\n              :class=\"currentPage === totalPages ? 'text-gray-400' : 'text-gray-700'\"\r\n            >\r\n              <span class=\"material-icons text-base\">chevron_right</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n\r\n    <!-- Modals -->\r\n    <transition name=\"modal-fade\">\r\n      <PayHeadModal \r\n        v-if=\"showAddModal\"\r\n        :payHead=\"newPayHead\"\r\n        title=\"Add New Pay Head\"\r\n        @close=\"showAddModal = false\"\r\n        @save=\"addPayHead\"\r\n      />\r\n    </transition>\r\n\r\n    <transition name=\"modal-fade\">\r\n      <PayHeadModal\r\n        v-if=\"showUpdateModal\"\r\n        :payHead=\"selectedPayHead\"\r\n        :isUpdate=\"true\"\r\n        title=\"Update Pay Head\"\r\n        @close=\"showUpdateModal = false\"\r\n        @save=\"updatePayHead\"\r\n      />\r\n    </transition>\r\n\r\n    <transition name=\"modal-fade\">\r\n      <AddPayheadModal\r\n        v-if=\"showAddPayheadModal\"\r\n        :availablePayheads=\"availablePayheads\"\r\n        :selectedEmployeePayheads=\"selectedEmployeePayheads\"\r\n        :selectedEmployee=\"selectedEmployee\"\r\n        :totalPayableSalary=\"totalPayableSalary\"\r\n        @close=\"showAddPayheadModal = false\"\r\n        @save=\"savePayheads\"\r\n        @addPayhead=\"addPayheadToEmployee\"\r\n        @removePayhead=\"removePayheadFromEmployee\"\r\n        @updatePayhead=\"updatePayheadInEmployee\"\r\n      />\r\n    </transition>\r\n\r\n    <transition name=\"modal-fade\">\r\n      <RecurringDeductionModal\r\n        v-if=\"showRecurringDeductionModal\"\r\n        :availableDeductions=\"filteredPayHeads.filter(p => p.type === 'Deductions')\"\r\n        :employees=\"employees\"\r\n        @close=\"showRecurringDeductionModal = false\"\r\n        @save=\"saveRecurringDeductions\"\r\n      />\r\n    </transition>\r\n\r\n    <!-- Toast Notifications -->\r\n    <div class=\"fixed bottom-2 right-2 z-50 space-y-2\">\r\n      <TransitionGroup\r\n        enter-active-class=\"transform ease-out duration-300 transition\"\r\n        enter-from-class=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\r\n        enter-to-class=\"translate-y-0 opacity-100 sm:translate-x-0\"\r\n        leave-active-class=\"transition ease-in duration-100\"\r\n        leave-from-class=\"opacity-100\"\r\n        leave-to-class=\"opacity-0\"\r\n        move-class=\"transition duration-500\"\r\n      >\r\n        <div\r\n          v-if=\"statusMessage\"\r\n          :key=\"statusMessage\"\r\n          class=\"max-w-xs w-full bg-white rounded-md shadow-lg pointer-events-auto\r\n                ring-1 ring-black ring-opacity-5 overflow-hidden\"\r\n        >\r\n          <div class=\"p-2\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"flex-shrink-0\">\r\n                <span \r\n                  class=\"material-icons text-base\"\r\n                  :class=\"statusMessage.includes('success') ? 'text-green-500' : 'text-red-500'\"\r\n                >\r\n                  {{ statusMessage.includes('success') ? 'check_circle' : 'error' }}\r\n                </span>\r\n              </div>\r\n              <div class=\"ml-2 flex-1\">\r\n                <p class=\"text-xs font-medium text-gray-900\">\r\n                  {{ statusMessage }}\r\n                </p>\r\n              </div>\r\n              <button\r\n                @click=\"statusMessage = ''\"\r\n                class=\"ml-2 flex-shrink-0 rounded-sm text-gray-400 hover:text-gray-500 \r\n                      focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n              >\r\n                <span class=\"material-icons text-base\">close</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TransitionGroup>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport PayHeadModal from '@/components/payhead/PayHeadModal.vue';\r\nimport PayHeadTable from '@/components/payhead/PayHeadTable.vue';\r\nimport EmployeePayrollTable from '@/components/payhead/EmployeePayrollTable.vue';\r\nimport AddPayheadModal from '@/components/payhead/AddPayheadModal.vue';\r\nimport RecurringDeductionModal from '@/components/payhead/RecurringDeductionModal.vue';\r\n\r\nexport default {\r\n  name: 'ManagePayHeads',\r\n  components: {\r\n    PayHeadModal,\r\n    PayHeadTable,\r\n    EmployeePayrollTable,\r\n    AddPayheadModal,\r\n    RecurringDeductionModal,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      payHeads: [],\r\n      employees: [],\r\n      newPayHead: {\r\n        name: '',\r\n        amount: 0,\r\n        type: 'Earnings',\r\n        description: '',\r\n        isRecurring: false,\r\n        appliedThisCycle: false,\r\n      },\r\n      selectedPayHead: {\r\n        id: '',\r\n        name: '',\r\n        amount: 0,\r\n        type: 'Earnings',\r\n        description: '',\r\n        isRecurring: false,\r\n        appliedThisCycle: false,\r\n      },\r\n      showAddModal: false,\r\n      showUpdateModal: false,\r\n      showAddPayheadModal: false,\r\n      showRecurringDeductionModal: false,\r\n      selectedEmployee: null,\r\n      selectedEmployeePayheads: [],\r\n      availablePayheads: [],\r\n      statusMessage: '',\r\n      searchQuery: '',\r\n      filterType: '',\r\n      activeTab: 'payheads',\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n      isLoading: false,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    filteredPayHeads() {\r\n      let filtered = [...this.payHeads];\r\n      if (this.searchQuery) {\r\n        const query = this.searchQuery.toLowerCase();\r\n        filtered = filtered.filter(p => \r\n          p.name.toLowerCase().includes(query) || \r\n          (p.description && p.description.toLowerCase().includes(query))\r\n        );\r\n      }\r\n      if (this.filterType) {\r\n        filtered = filtered.filter(p => p.type === this.filterType || (this.filterType === 'Recurring Deductions' && p.isRecurring));\r\n      }\r\n      return filtered;\r\n    },\r\n\r\n    filteredEmployees() {\r\n      let filtered = [...this.employees];\r\n      if (this.searchQuery) {\r\n        const query = this.searchQuery.toLowerCase();\r\n        filtered = filtered.filter(e => \r\n          e.name.toLowerCase().includes(query) || \r\n          (e.position && e.position.toLowerCase().includes(query))\r\n        );\r\n      }\r\n      if (this.filterType) {\r\n        filtered = filtered.filter(e => {\r\n          const earnings = this.calculateEarnings(e.payheads || []);\r\n          const deductions = this.calculateDeductions(e.payheads || []);\r\n          const recurringDeductions = this.calculateRecurringDeductions(e.payheads || []);\r\n          if (this.filterType === 'Earnings') return earnings > 0;\r\n          if (this.filterType === 'Deductions') return deductions > 0;\r\n          if (this.filterType === 'Recurring Deductions') return recurringDeductions > 0;\r\n          return true;\r\n        });\r\n      }\r\n      return filtered;\r\n    },\r\n\r\n    paginatedEmployees() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredEmployees.slice(start, end);\r\n    },\r\n\r\n    totalPages() {\r\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage) || 1;\r\n    },\r\n\r\n    displayedPages() {\r\n      const total = this.totalPages;\r\n      const current = this.currentPage;\r\n      const pages = [];\r\n\r\n      if (total <= 7) {\r\n        for (let i = 1; i <= total; i++) pages.push(i);\r\n      } else {\r\n        if (current <= 3) {\r\n          for (let i = 1; i <= 5; i++) pages.push(i);\r\n          pages.push('...', total);\r\n        } else if (current >= total - 2) {\r\n          pages.push(1, '...');\r\n          for (let i = total - 4; i <= total; i++) pages.push(i);\r\n        } else {\r\n          pages.push(1, '...');\r\n          for (let i = current - 1; i <= current + 1; i++) pages.push(i);\r\n          pages.push('...', total);\r\n        }\r\n      }\r\n      return pages;\r\n    },\r\n\r\n    totalPayableSalary() {\r\n      if (!this.selectedEmployee) return 0;\r\n      const earnings = this.calculateEarnings(this.selectedEmployeePayheads || []);\r\n      const deductions = this.calculateDeductions(this.selectedEmployeePayheads || []);\r\n      const recurringDeductions = this.calculateRecurringDeductions(this.selectedEmployeePayheads || []);\r\n      return (this.selectedEmployee.salary || 0) + earnings - deductions - recurringDeductions;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async fetchPayHeads() {\r\n      this.isLoading = true;\r\n      this.statusMessage = '';\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/payheads', {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        this.payHeads = response.data.map(item => ({\r\n          ...item,\r\n          amount: Number(item.amount),\r\n          isRecurring: item.isRecurring || false,\r\n          appliedThisCycle: item.appliedThisCycle || false,\r\n        })) || [];\r\n        this.showSuccessMessage('Pay heads loaded successfully!');\r\n      } catch (error) {\r\n        console.error('Error fetching pay heads:', error);\r\n        this.showErrorMessage('Failed to load pay heads. Please try again.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async fetchEmployees() {\r\n      this.isLoading = true;\r\n      this.statusMessage = '';\r\n      try {\r\n        const response = await axios.get('http://localhost:7777/api/employees', {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        this.employees = response.data.map(emp => ({\r\n          ...emp,\r\n          name: `${emp.firstName || ''} ${emp.lastName || ''}`.trim(),\r\n          position: emp.position || 'N/A',\r\n          payheads: emp.payheads ? emp.payheads.map(ph => ({\r\n            ...ph,\r\n            amount: Number(ph.amount),\r\n            isRecurring: ph.isRecurring || false,\r\n            appliedThisCycle: ph.appliedThisCycle || false,\r\n          })) : [],\r\n          totalEarnings: this.calculateEarnings(emp.payheads || []),\r\n          totalDeduction: this.calculateDeductions(emp.payheads || []),\r\n          totalRecurringDeduction: this.calculateRecurringDeductions(emp.payheads || []),\r\n          totalSalary: (emp.salary || 0) + \r\n                       this.calculateEarnings(emp.payheads || []) - \r\n                       this.calculateDeductions(emp.payheads || []) - \r\n                       this.calculateRecurringDeductions(emp.payheads || []),\r\n        }));\r\n        this.showSuccessMessage('Employees loaded successfully!');\r\n      } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        this.showErrorMessage('Failed to load employees. Please try again.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async addPayHead(payHead) {\r\n      try {\r\n        this.isLoading = true;\r\n        const payload = { \r\n          ...payHead, \r\n          amount: Number(payHead.amount),\r\n          isRecurring: payHead.isRecurring || false,\r\n          appliedThisCycle: false,\r\n        };\r\n        const response = await axios.post('http://localhost:7777/api/payheads', payload, {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        this.payHeads.push({ ...response.data, amount: Number(response.data.amount) });\r\n        this.showAddModal = false;\r\n        this.showSuccessMessage('Pay head added successfully!');\r\n        await this.fetchEmployees();\r\n      } catch (error) {\r\n        console.error('Error adding pay head:', error);\r\n        this.showErrorMessage('Failed to add pay head.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    showUpdatePayHeadModal(payHead) {\r\n      this.selectedPayHead = { ...payHead, amount: Number(payHead.amount) };\r\n      this.showUpdateModal = true;\r\n    },\r\n\r\n    async updatePayHead(updatedPayHead) {\r\n      try {\r\n        this.isLoading = true;\r\n        const payload = { \r\n          ...updatedPayHead, \r\n          amount: Number(updatedPayHead.amount),\r\n          isRecurring: updatedPayHead.isRecurring || false,\r\n          appliedThisCycle: updatedPayHead.appliedThisCycle || false,\r\n        };\r\n        const response = await axios.put(\r\n          `http://localhost:7777/api/payheads/${updatedPayHead.id}`, \r\n          payload,\r\n          { headers: { 'user-role': 'admin' } }\r\n        );\r\n        const index = this.payHeads.findIndex(ph => ph.id === updatedPayHead.id);\r\n        if (index !== -1) {\r\n          this.payHeads.splice(index, 1, { ...response.data, amount: Number(response.data.amount) });\r\n          this.showUpdateModal = false;\r\n          this.showSuccessMessage('Pay head updated successfully!');\r\n          await this.fetchEmployees();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating pay head:', error);\r\n        this.showErrorMessage('Failed to update pay head.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async confirmDeletePayHead(id) {\r\n      if (confirm('Are you sure you want to delete this pay head?')) {\r\n        await this.deletePayHead(id);\r\n      }\r\n    },\r\n\r\n    async deletePayHead(id) {\r\n      try {\r\n        this.isLoading = true;\r\n        await axios.delete(`http://localhost:7777/api/payheads/${id}`, {\r\n          headers: { 'user-role': 'admin' },\r\n        });\r\n        this.payHeads = this.payHeads.filter(payHead => payHead.id !== id);\r\n        this.showSuccessMessage('Pay head deleted successfully!');\r\n        await this.fetchEmployees();\r\n      } catch (error) {\r\n        console.error('Error deleting pay head:', error);\r\n        this.showErrorMessage('Failed to delete pay head.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    openAddPayheadModal(employee) {\r\n      this.selectedEmployee = { ...employee, salary: employee.salary || 0 };\r\n      this.selectedEmployeePayheads = [...(employee.payheads || [])];\r\n      this.availablePayheads = [...this.payHeads];\r\n      this.showAddPayheadModal = true;\r\n    },\r\n\r\n    addPayheadToEmployee(payhead) {\r\n      const newPayhead = { \r\n        ...payhead, \r\n        amount: Number(payhead.amount),\r\n        uniqueId: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n        appliedThisCycle: payhead.isRecurring ? false : undefined,\r\n      };\r\n      this.selectedEmployeePayheads.push(newPayhead);\r\n    },\r\n\r\n    removePayheadFromEmployee(payhead) {\r\n      this.selectedEmployeePayheads = this.selectedEmployeePayheads.filter(\r\n        p => p.uniqueId !== payhead.uniqueId\r\n      );\r\n    },\r\n\r\n    updatePayheadInEmployee(updatedPayhead) {\r\n      const index = this.selectedEmployeePayheads.findIndex(\r\n        p => p.uniqueId === updatedPayhead.uniqueId\r\n      );\r\n      if (index !== -1) {\r\n        this.selectedEmployeePayheads.splice(index, 1, { \r\n          ...updatedPayhead, \r\n          amount: Number(updatedPayhead.amount),\r\n          appliedThisCycle: updatedPayhead.isRecurring ? updatedPayhead.appliedThisCycle : undefined,\r\n        });\r\n      }\r\n    },\r\n\r\n    async savePayheads() {\r\n      try {\r\n        this.isLoading = true;\r\n        const payheadsToSave = this.selectedEmployeePayheads.map(ph => ({\r\n          id: ph.id,\r\n          name: ph.name,\r\n          amount: Number(ph.amount),\r\n          type: ph.type,\r\n          isRecurring: ph.isRecurring || false,\r\n          appliedThisCycle: ph.isRecurring ? ph.appliedThisCycle || false : undefined,\r\n        }));\r\n\r\n        const updatedEmployee = {\r\n          ...this.selectedEmployee,\r\n          payheads: payheadsToSave,\r\n          totalEarnings: this.calculateEarnings(payheadsToSave),\r\n          totalDeduction: this.calculateDeductions(payheadsToSave),\r\n          totalRecurringDeduction: this.calculateRecurringDeductions(payheadsToSave),\r\n          totalSalary: (this.selectedEmployee.salary || 0) + \r\n                      this.calculateEarnings(payheadsToSave) - \r\n                      this.calculateDeductions(payheadsToSave) - \r\n                      this.calculateRecurringDeductions(payheadsToSave),\r\n        };\r\n\r\n        await axios.put(\r\n          `http://localhost:7777/api/employees/${this.selectedEmployee.id}`,\r\n          updatedEmployee,\r\n          { headers: { 'user-role': 'admin' } }\r\n        );\r\n\r\n        const employeeIndex = this.employees.findIndex(\r\n          e => e.id === this.selectedEmployee.id\r\n        );\r\n        if (employeeIndex !== -1) {\r\n          this.employees.splice(employeeIndex, 1, updatedEmployee);\r\n        }\r\n\r\n        this.showAddPayheadModal = false;\r\n        this.showSuccessMessage('Payheads saved successfully!');\r\n      } catch (error) {\r\n        console.error('Error saving payheads:', error);\r\n        this.showErrorMessage('Failed to save payheads.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async saveRecurringDeductions(selectedDeductions, selectedEmployees) {\r\n      try {\r\n        this.isLoading = true;\r\n        for (const employee of selectedEmployees) {\r\n          const existingPayheads = this.employees.find(e => e.id === employee.id).payheads || [];\r\n          const updatedPayheads = [...existingPayheads];\r\n          \r\n          selectedDeductions.forEach(deduction => {\r\n            if (!updatedPayheads.some(ph => ph.id === deduction.id && ph.isRecurring)) {\r\n              updatedPayheads.push({\r\n                ...deduction,\r\n                uniqueId: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n                isRecurring: true,\r\n                appliedThisCycle: false,\r\n              });\r\n            }\r\n          });\r\n\r\n          const updatedEmployee = {\r\n            ...employee,\r\n            payheads: updatedPayheads,\r\n            totalEarnings: this.calculateEarnings(updatedPayheads),\r\n            totalDeduction: this.calculateDeductions(updatedPayheads),\r\n            totalRecurringDeduction: this.calculateRecurringDeductions(updatedPayheads),\r\n            totalSalary: (employee.salary || 0) + \r\n                        this.calculateEarnings(updatedPayheads) - \r\n                        this.calculateDeductions(updatedPayheads) - \r\n                        this.calculateRecurringDeductions(updatedPayheads),\r\n          };\r\n\r\n          await axios.put(\r\n            `http://localhost:7777/api/employees/${employee.id}`,\r\n            updatedEmployee,\r\n            { headers: { 'user-role': 'admin' } }\r\n          );\r\n\r\n          const employeeIndex = this.employees.findIndex(e => e.id === employee.id);\r\n          if (employeeIndex !== -1) {\r\n            this.employees.splice(employeeIndex, 1, updatedEmployee);\r\n          }\r\n        }\r\n        this.showRecurringDeductionModal = false;\r\n        this.showSuccessMessage('Recurring deductions saved successfully!');\r\n      } catch (error) {\r\n        console.error('Error saving recurring deductions:', error);\r\n        this.showErrorMessage('Failed to save recurring deductions.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    calculateEarnings(payheads = []) {\r\n      return payheads\r\n        .filter(p => p.type === 'Earnings')\r\n        .reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\r\n    },\r\n\r\n    calculateDeductions(payheads = []) {\r\n      return payheads\r\n        .filter(p => p.type === 'Deductions' && !p.isRecurring)\r\n        .reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\r\n    },\r\n\r\n    calculateRecurringDeductions(payheads = []) {\r\n      return payheads\r\n        .filter(p => p.isRecurring && !p.appliedThisCycle)\r\n        .reduce((sum, p) => sum + Number(p.amount || 0), 0) || 0;\r\n    },\r\n\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n\r\n    resetFilters() {\r\n      this.searchQuery = '';\r\n      this.filterType = '';\r\n    },\r\n\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => { this.statusMessage = ''; }, 3000);\r\n    },\r\n\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => { this.statusMessage = ''; }, 3000);\r\n    },\r\n\r\n    resetPayheadsCycle() {\r\n      this.payHeads = this.payHeads.map(ph => ({\r\n        ...ph,\r\n        appliedThisCycle: ph.isRecurring ? false : ph.appliedThisCycle,\r\n      }));\r\n      this.employees = this.employees.map(emp => ({\r\n        ...emp,\r\n        payheads: emp.payheads.map(ph => ({\r\n          ...ph,\r\n          appliedThisCycle: ph.isRecurring ? false : ph.appliedThisCycle,\r\n        })),\r\n      }));\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.fetchPayHeads();\r\n    this.fetchEmployees();\r\n    // Simulate payroll cycle reset (could be triggered by a cron job or manual action)\r\n    setInterval(() => this.resetPayheadsCycle(), 24 * 60 * 60 * 1000); // Reset daily for demo\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Modal animation */\r\n.modal-fade-enter-active, .modal-fade-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-fade-enter-from, .modal-fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* Loader animation */\r\n.loader {\r\n  border-top-color: #3b82f6;\r\n  animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n/* Scrollbar styling */\r\n::-webkit-scrollbar {\r\n  width: 4px;\r\n  height: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 2px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 2px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #555;\r\n}\r\n\r\n/* Cross-browser scrollbar support */\r\n.scrollbar {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #888 #f1f1f1;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar {\r\n  width: 4px;\r\n  height: 4px;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 2px;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 2px;\r\n}\r\n\r\n.scrollbar::-webkit-scrollbar-thumb:hover {\r\n  background: #555;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}