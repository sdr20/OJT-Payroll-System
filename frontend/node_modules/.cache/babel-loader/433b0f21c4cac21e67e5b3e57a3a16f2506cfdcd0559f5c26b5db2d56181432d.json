{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'EmployeeLeaveRequest',\n  data() {\n    return {\n      newLeave: {\n        startDate: '',\n        endDate: '',\n        reason: ''\n      },\n      statusMessage: '',\n      leaveRequests: [],\n      currentPage: 1,\n      requestsPerPage: 5,\n      isSubmitting: false\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.leaveRequests.length / this.requestsPerPage);\n    },\n    paginatedRequests() {\n      const start = (this.currentPage - 1) * this.requestsPerPage;\n      const end = start + this.requestsPerPage;\n      return this.leaveRequests.slice(start, end);\n    }\n  },\n  created() {\n    this.fetchLeaveRequests();\n  },\n  methods: {\n    async fetchLeaveRequests() {\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) throw new Error('User not authenticated');\n        const response = await axios.get(`http://localhost:7777/api/leaves/employee/${userId}`);\n        this.leaveRequests = response.data || [];\n      } catch (error) {\n        console.error('Failed to fetch leave requests:', error);\n        this.statusMessage = 'Failed to load leave requests. Please try again.';\n        setTimeout(() => this.statusMessage = '', 3000);\n      }\n    },\n    async submitLeaveRequest() {\n      this.isSubmitting = true;\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) throw new Error('User not authenticated');\n        const leaveData = {\n          employeeId: userId,\n          employeeName: localStorage.getItem('userName') || 'Unknown',\n          // Should be set during login\n          startDate: this.newLeave.startDate,\n          endDate: this.newLeave.endDate,\n          reason: this.newLeave.reason,\n          status: 'Pending'\n        };\n        const response = await axios.post('http://localhost:7777/api/leaves', leaveData);\n        if (response.status === 201) {\n          this.leaveRequests.unshift(response.data);\n          this.statusMessage = 'Request submitted successfully!';\n          this.resetForm();\n          this.currentPage = 1; // Reset to first page to show new request\n        }\n      } catch (error) {\n        console.error('Failed to submit leave request:', error);\n        this.statusMessage = 'Failed to submit leave request. Please try again.';\n      } finally {\n        this.isSubmitting = false;\n        setTimeout(() => this.statusMessage = '', 3000);\n      }\n    },\n    resetForm() {\n      this.newLeave = {\n        startDate: '',\n        endDate: '',\n        reason: ''\n      };\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","newLeave","startDate","endDate","reason","statusMessage","leaveRequests","currentPage","requestsPerPage","isSubmitting","computed","totalPages","Math","ceil","length","paginatedRequests","start","end","slice","created","fetchLeaveRequests","methods","userId","localStorage","getItem","Error","response","get","error","console","setTimeout","submitLeaveRequest","leaveData","employeeId","employeeName","status","post","unshift","resetForm","nextPage","previousPage"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\employee\\EmployeeLeaveRequest.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <!-- Leave Request Form -->\r\n        <div class=\"bg-white p-6 rounded-xl shadow-md\">\r\n          <h2 class=\"text-2xl font-semibold mb-4\">Request Leave</h2>\r\n          \r\n          <form @submit.prevent=\"submitLeaveRequest\">\r\n            <div class=\"mb-4\">\r\n              <label class=\"block text-gray-700 font-medium mb-2\">Start Date:</label>\r\n              <input \r\n                type=\"date\" \r\n                v-model=\"newLeave.startDate\" \r\n                class=\"w-full p-2 border rounded-lg focus:ring focus:ring-blue-200 focus:border-blue-300 outline-none\" \r\n                required\r\n              >\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label class=\"block text-gray-700 font-medium mb-2\">End Date:</label>\r\n              <input \r\n                type=\"date\" \r\n                v-model=\"newLeave.endDate\" \r\n                class=\"w-full p-2 border rounded-lg focus:ring focus:ring-blue-200 focus:border-blue-300 outline-none\" \r\n                required\r\n              >\r\n            </div>\r\n            <div class=\"mb-4\">\r\n              <label class=\"block text-gray-700 font-medium mb-2\">Reason for Leave:</label>\r\n              <textarea \r\n                v-model=\"newLeave.reason\" \r\n                class=\"w-full p-2 border rounded-lg focus:ring focus:ring-blue-200 focus:border-blue-300 outline-none min-h-[100px]\" \r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <button \r\n              type=\"submit\" \r\n              class=\"w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-all duration-200 font-medium\"\r\n              :disabled=\"isSubmitting\"\r\n            >\r\n              {{ isSubmitting ? 'Submitting...' : 'Send Request' }}\r\n            </button>\r\n          </form>\r\n\r\n          <div \r\n            v-if=\"statusMessage\" \r\n            :class=\"statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\"\r\n            class=\"mt-4 p-3 rounded-lg text-center\"\r\n          >\r\n            {{ statusMessage }}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Leave Requests List with Pagination -->\r\n        <div class=\"bg-white p-6 rounded-xl shadow-md\">\r\n          <h2 class=\"text-2xl font-semibold mb-4\">My Leave Requests</h2>\r\n          \r\n          <div class=\"space-y-4\">\r\n            <div \r\n              v-for=\"request in paginatedRequests\" \r\n              :key=\"request.id\" \r\n              class=\"border rounded-lg p-4 hover:shadow-sm transition-all\"\r\n            >\r\n              <div class=\"flex justify-between items-start\">\r\n                <div>\r\n                  <h3 class=\"font-medium\">{{ request.employeeName }}</h3>\r\n                  <p class=\"text-sm text-gray-600\">\r\n                    {{ request.startDate }} to {{ request.endDate }}\r\n                  </p>\r\n                  <p class=\"mt-2 text-gray-700\">{{ request.reason }}</p>\r\n                </div>\r\n                <span \r\n                  :class=\"{\r\n                    'bg-yellow-100 text-yellow-700': request.status === 'Pending',\r\n                    'bg-green-100 text-green-700': request.status === 'Approved',\r\n                    'bg-red-100 text-red-700': request.status === 'Disapproved'\r\n                  }\"\r\n                  class=\"px-3 py-1 rounded-full text-sm font-medium\"\r\n                >\r\n                  {{ request.status }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              v-if=\"leaveRequests.length === 0\" \r\n              class=\"text-center text-gray-500 py-8\"\r\n            >\r\n              No leave requests yet\r\n            </div>\r\n\r\n            <!-- Pagination Controls -->\r\n            <div v-if=\"leaveRequests.length > 0\" class=\"mt-6 flex justify-between items-center\">\r\n              <button \r\n                @click=\"previousPage\" \r\n                :disabled=\"currentPage === 1\"\r\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <span class=\"text-gray-600\">\r\n                Page {{ currentPage }} of {{ totalPages }}\r\n              </span>\r\n              <button \r\n                @click=\"nextPage\" \r\n                :disabled=\"currentPage === totalPages\"\r\n                class=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'EmployeeLeaveRequest',\r\n  data() {\r\n    return {\r\n      newLeave: {\r\n        startDate: '',\r\n        endDate: '',\r\n        reason: ''\r\n      },\r\n      statusMessage: '',\r\n      leaveRequests: [],\r\n      currentPage: 1,\r\n      requestsPerPage: 5,\r\n      isSubmitting: false\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.leaveRequests.length / this.requestsPerPage);\r\n    },\r\n    paginatedRequests() {\r\n      const start = (this.currentPage - 1) * this.requestsPerPage;\r\n      const end = start + this.requestsPerPage;\r\n      return this.leaveRequests.slice(start, end);\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchLeaveRequests();\r\n  },\r\n  methods: {\r\n    async fetchLeaveRequests() {\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) throw new Error('User not authenticated');\r\n        \r\n        const response = await axios.get(`http://localhost:7777/api/leaves/employee/${userId}`);\r\n        this.leaveRequests = response.data || [];\r\n      } catch (error) {\r\n        console.error('Failed to fetch leave requests:', error);\r\n        this.statusMessage = 'Failed to load leave requests. Please try again.';\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n      }\r\n    },\r\n    async submitLeaveRequest() {\r\n      this.isSubmitting = true;\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) throw new Error('User not authenticated');\r\n\r\n        const leaveData = {\r\n          employeeId: userId,\r\n          employeeName: localStorage.getItem('userName') || 'Unknown', // Should be set during login\r\n          startDate: this.newLeave.startDate,\r\n          endDate: this.newLeave.endDate,\r\n          reason: this.newLeave.reason,\r\n          status: 'Pending'\r\n        };\r\n\r\n        const response = await axios.post('http://localhost:7777/api/leaves', leaveData);\r\n        if (response.status === 201) {\r\n          this.leaveRequests.unshift(response.data);\r\n          this.statusMessage = 'Request submitted successfully!';\r\n          this.resetForm();\r\n          this.currentPage = 1; // Reset to first page to show new request\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to submit leave request:', error);\r\n        this.statusMessage = 'Failed to submit leave request. Please try again.';\r\n      } finally {\r\n        this.isSubmitting = false;\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.newLeave = {\r\n        startDate: '',\r\n        endDate: '',\r\n        reason: ''\r\n      };\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.transition-all {\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}