{"ast":null,"code":"import axios from 'axios';\nimport io from 'socket.io-client';\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      totalEmployees: 0,\n      totalPresentToday: 0,\n      totalLateToday: 0,\n      totalEligibleForSalaryToday: 0,\n      attendanceRecords: [],\n      socket: null // Socket.IO instance\n    };\n  },\n  created() {\n    this.fetchTotalEmployees();\n    this.fetchAttendanceRecords();\n\n    // Initialize Socket.IO connection\n    this.socket = io('http://localhost:7777'); // Replace with your backend URL\n\n    // Listen for attendance updates\n    this.socket.on('attendanceUpdated', () => {\n      this.fetchAttendanceRecords(); // Refresh attendance records\n    });\n  },\n  methods: {\n    async fetchTotalEmployees() {\n      try {\n        const response = await axios.get('/api/employees/total');\n        this.totalEmployees = response.data.total;\n      } catch (error) {\n        console.error('Failed to fetch total employees:', error);\n      }\n    },\n    async fetchAttendanceRecords() {\n      try {\n        const response = await axios.get('/api/attendance/today');\n        this.attendanceRecords = response.data;\n        this.totalPresentToday = response.data.length;\n      } catch (error) {\n        console.error('Failed to fetch attendance records:', error);\n      }\n    },\n    async fetchEmployees() {\n      try {\n        const response = await axios.get('/api/employees');\n        this.attendanceRecords = response.data;\n      } catch (error) {\n        console.error('Failed to fetch employees:', error);\n      }\n    },\n    async fetchTotalPresentToday() {\n      try {\n        const response = await axios.get('/api/attendance/present-today');\n        this.totalPresentToday = response.data.total;\n      } catch (error) {\n        console.error('Failed to fetch total present today:', error);\n      }\n    },\n    async fetchTotalLateToday() {\n      try {\n        const response = await axios.get('/api/attendance/late-today');\n        this.totalLateToday = response.data.total;\n      } catch (error) {\n        console.error('Failed to fetch total late today:', error);\n      }\n    },\n    async processPayroll() {\n      try {\n        const response = await axios.post('/api/payroll/process');\n        if (response.data.success) {\n          alert('Payroll processed successfully!');\n        } else {\n          alert('Failed to process payroll.');\n        }\n      } catch (error) {\n        console.error('Failed to process payroll:', error);\n      }\n    }\n  },\n  beforeDestroy() {\n    // Disconnect Socket.IO when the component is destroyed\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["axios","io","name","data","totalEmployees","totalPresentToday","totalLateToday","totalEligibleForSalaryToday","attendanceRecords","socket","created","fetchTotalEmployees","fetchAttendanceRecords","on","methods","response","get","total","error","console","length","fetchEmployees","fetchTotalPresentToday","fetchTotalLateToday","processPayroll","post","success","alert","beforeDestroy","disconnect"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\AdminDashboard.vue"],"sourcesContent":["<!--npm install socket.io-client  -->\r\n<template>\r\n  <div class=\"min-h-screen bg-gray-50\">\r\n    <!-- Top Navigation Bar -->\r\n    <nav class=\"bg-white shadow-sm\">\r\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div class=\"flex justify-between h-16\">\r\n          <div class=\"flex items-center\">\r\n            <h1 class=\"text-xl font-bold text-gray-900\">Admin Dashboard</h1>\r\n          </div>\r\n          <div class=\"flex items-center\">\r\n            <span class=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800\">\r\n              Admin\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n      <!-- Stats Overview -->\r\n      <div class=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <!-- Total Employees Card -->\r\n        <div class=\"bg-white overflow-hidden shadow rounded-lg\">\r\n          <div class=\"p-5\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"flex-shrink-0\">\r\n                <div class=\"rounded-md bg-indigo-500 p-3\">\r\n                  <svg class=\"h-6 w-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div class=\"ml-5 w-0 flex-1\">\r\n                <dl>\r\n                  <dt class=\"text-sm font-medium text-gray-500 truncate\">Total Employees</dt>\r\n                  <dd class=\"text-2xl font-semibold text-gray-900\">{{ totalEmployees }}</dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-gray-50 px-5 py-3\">\r\n            <div class=\"text-sm\">\r\n              <a href=\"#\" @click=\"fetchEmployees\" class=\"font-medium text-indigo-600 hover:text-indigo-900\">View all</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Present Today Card -->\r\n        <div class=\"bg-white overflow-hidden shadow rounded-lg\">\r\n          <div class=\"p-5\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"flex-shrink-0\">\r\n                <div class=\"rounded-md bg-green-500 p-3\">\r\n                  <svg class=\"h-6 w-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div class=\"ml-5 w-0 flex-1\">\r\n                <dl>\r\n                  <dt class=\"text-sm font-medium text-gray-500 truncate\">Present Today</dt>\r\n                  <dd class=\"text-2xl font-semibold text-gray-900\">{{ totalPresentToday }}</dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-gray-50 px-5 py-3\">\r\n            <div class=\"text-sm\">\r\n              <a href=\"#\" @click=\"fetchTotalPresentToday\" class=\"font-medium text-green-600 hover:text-green-900\">View details</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Late Today Card -->\r\n        <div class=\"bg-white overflow-hidden shadow rounded-lg\">\r\n          <div class=\"p-5\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"flex-shrink-0\">\r\n                <div class=\"rounded-md bg-yellow-500 p-3\">\r\n                  <svg class=\"h-6 w-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div class=\"ml-5 w-0 flex-1\">\r\n                <dl>\r\n                  <dt class=\"text-sm font-medium text-gray-500 truncate\">Late Today</dt>\r\n                  <dd class=\"text-2xl font-semibold text-gray-900\">{{ totalLateToday }}</dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-gray-50 px-5 py-3\">\r\n            <div class=\"text-sm\">\r\n              <a href=\"#\" @click=\"fetchTotalLateToday\" class=\"font-medium text-yellow-600 hover:text-yellow-900\">View details</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Eligible for Salary Card -->\r\n        <div class=\"bg-white overflow-hidden shadow rounded-lg\">\r\n          <div class=\"p-5\">\r\n            <div class=\"flex items-center\">\r\n              <div class=\"flex-shrink-0\">\r\n                <div class=\"rounded-md bg-blue-500 p-3\">\r\n                  <svg class=\"h-6 w-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n              <div class=\"ml-5 w-0 flex-1\">\r\n                <dl>\r\n                  <dt class=\"text-sm font-medium text-gray-500 truncate\">Eligible for Salary</dt>\r\n                  <dd class=\"text-2xl font-semibold text-gray-900\">{{ totalEligibleForSalaryToday }}</dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bg-gray-50 px-5 py-3\">\r\n            <div class=\"text-sm\">\r\n              <a href=\"#\" @click=\"processPayroll\" class=\"font-medium text-blue-600 hover:text-blue-900\">Process payroll</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Attendance Table Section -->\r\n      <div class=\"mt-8 bg-white shadow overflow-hidden sm:rounded-lg\">\r\n        <div class=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\r\n          <h2 class=\"text-lg leading-6 font-medium text-gray-900\">Attendance Today</h2>\r\n        </div>\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full divide-y divide-gray-200\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Employee ID</th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Position</th>\r\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Sign In Time</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"bg-white divide-y divide-gray-200\">\r\n              <tr v-for=\"record in attendanceRecords\" :key=\"record.id\" class=\"hover:bg-gray-50\">\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{ record.employeeId }}</td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div class=\"flex items-center\">\r\n                    <div class=\"h-10 w-10 flex-shrink-0\">\r\n                      <img class=\"h-10 w-10 rounded-full\" :src=\"`https://ui-avatars.com/api/?name=${record.firstName}+${record.lastName}`\" alt=\"\" />\r\n                    </div>\r\n                    <div class=\"ml-4\">\r\n                      <div class=\"text-sm font-medium text-gray-900\">{{ record.firstName }} {{ record.lastName }}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ record.position }}</td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ record.signInTime }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  name: 'AdminDashboard',\r\n  data() {\r\n    return {\r\n      totalEmployees: 0,\r\n      totalPresentToday: 0,\r\n      totalLateToday: 0,\r\n      totalEligibleForSalaryToday: 0,\r\n      attendanceRecords: [],\r\n      socket: null, // Socket.IO instance\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchTotalEmployees();\r\n    this.fetchAttendanceRecords();\r\n\r\n    // Initialize Socket.IO connection\r\n    this.socket = io('http://localhost:7777'); // Replace with your backend URL\r\n\r\n    // Listen for attendance updates\r\n    this.socket.on('attendanceUpdated', () => {\r\n      this.fetchAttendanceRecords(); // Refresh attendance records\r\n    });\r\n  },\r\n  methods: {\r\n    async fetchTotalEmployees() {\r\n      try {\r\n        const response = await axios.get('/api/employees/total');\r\n        this.totalEmployees = response.data.total;\r\n      } catch (error) {\r\n        console.error('Failed to fetch total employees:', error);\r\n      }\r\n    },\r\n    async fetchAttendanceRecords() {\r\n      try {\r\n        const response = await axios.get('/api/attendance/today');\r\n        this.attendanceRecords = response.data;\r\n        this.totalPresentToday = response.data.length;\r\n      } catch (error) {\r\n        console.error('Failed to fetch attendance records:', error);\r\n      }\r\n    },\r\n    async fetchEmployees() {\r\n      try {\r\n        const response = await axios.get('/api/employees');\r\n        this.attendanceRecords = response.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch employees:', error);\r\n      }\r\n    },\r\n    async fetchTotalPresentToday() {\r\n      try {\r\n        const response = await axios.get('/api/attendance/present-today');\r\n        this.totalPresentToday = response.data.total;\r\n      } catch (error) {\r\n        console.error('Failed to fetch total present today:', error);\r\n      }\r\n    },\r\n    async fetchTotalLateToday() {\r\n      try {\r\n        const response = await axios.get('/api/attendance/late-today');\r\n        this.totalLateToday = response.data.total;\r\n      } catch (error) {\r\n        console.error('Failed to fetch total late today:', error);\r\n      }\r\n    },\r\n    async processPayroll() {\r\n      try {\r\n        const response = await axios.post('/api/payroll/process');\r\n        if (response.data.success) {\r\n          alert('Payroll processed successfully!');\r\n        } else {\r\n          alert('Failed to process payroll.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to process payroll:', error);\r\n      }\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    // Disconnect Socket.IO when the component is destroyed\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}