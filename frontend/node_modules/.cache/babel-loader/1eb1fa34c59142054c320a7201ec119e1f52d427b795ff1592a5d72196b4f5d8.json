{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport moment from 'moment';\nconst API_BASE_URL = process.env.VUE_APP_API_BASE_URL || 'http://localhost:7777';\nexport default {\n  name: 'EmployeeAttendance',\n  data() {\n    return {\n      employees: [],\n      selectedEmployee: null,\n      showDetailsModal: false,\n      isLoading: false,\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 10,\n      statusMessage: '',\n      date: new Date().toISOString().split('T')[0],\n      sortKey: 'id',\n      sortDirection: 'asc',\n      headers: [{\n        key: 'id',\n        label: 'ID',\n        icon: 'badge'\n      }, {\n        key: 'firstName',\n        label: 'Name',\n        icon: 'person'\n      }, {\n        key: 'morningTimeIn',\n        label: 'Morning In',\n        icon: 'wb_sunny'\n      }, {\n        key: 'morningTimeOut',\n        label: 'Morning Out',\n        icon: 'wb_sunny'\n      }, {\n        key: 'afternoonTimeIn',\n        label: 'Afternoon In',\n        icon: 'nights_stay'\n      }, {\n        key: 'afternoonTimeOut',\n        label: 'Afternoon Out',\n        icon: 'nights_stay'\n      }, {\n        key: 'status',\n        label: 'Status',\n        icon: 'check_circle'\n      }, {\n        key: 'actions',\n        label: 'Actions',\n        icon: 'settings'\n      }]\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      if (!this.employees || !Array.isArray(this.employees)) return [];\n      return this.employees.filter(employee => !this.searchQuery || `${employee.firstName} ${employee.lastName}`.toLowerCase().includes(this.searchQuery.toLowerCase()) || employee.id.toString().toLowerCase().includes(this.searchQuery.toLowerCase())).sort((a, b) => {\n        const valueA = a[this.sortKey] || '';\n        const valueB = b[this.sortKey] || '';\n        return this.sortDirection === 'asc' ? valueA < valueB ? -1 : 1 : valueA > valueB ? -1 : 1;\n      });\n    },\n    paginatedEmployees() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredEmployees.slice(start, start + this.itemsPerPage);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage) || 1;\n    },\n    paginationInfo() {\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\n      const end = Math.min(start + this.itemsPerPage - 1, this.filteredEmployees.length);\n      return {\n        start,\n        end\n      };\n    }\n  },\n  mounted() {\n    this.fetchEmployeesAndAttendance();\n  },\n  methods: {\n    async fetchEmployeesAndAttendance() {\n      this.isLoading = true;\n      this.statusMessage = 'Loading data...';\n      try {\n        const empResponse = await axios.get(`${API_BASE_URL}/api/employees`, {\n          headers: {\n            'user-role': 'admin'\n          }\n        }).catch(error => {\n          throw new Error(`Employees API failed: ${error.message}`);\n        });\n        const baseEmployees = (empResponse.data || []).map(emp => ({\n          id: parseInt(emp.id),\n          firstName: emp.firstName || 'Unknown',\n          lastName: emp.lastName || '',\n          morningTimeIn: null,\n          morningTimeOut: null,\n          afternoonTimeIn: null,\n          afternoonTimeOut: null,\n          status: 'Absent'\n        }));\n        const attResponse = await axios.get(`${API_BASE_URL}/api/attendance`, {\n          params: {\n            date: this.date\n          },\n          headers: {\n            'user-role': 'admin'\n          }\n        }).catch(error => {\n          console.error('Attendance API response:', error.response?.data);\n          throw new Error(`Attendance API failed: ${error.message}`);\n        });\n        console.log('Fetched attendance data:', JSON.stringify(attResponse.data, null, 2));\n        const attendanceRecords = (attResponse.data || []).map(record => ({\n          employeeId: parseInt(record.employeeId),\n          morningTimeIn: record.morningTimeIn || null,\n          morningTimeOut: record.morningTimeOut || null,\n          afternoonTimeIn: record.afternoonTimeIn || null,\n          afternoonTimeOut: record.afternoonTimeOut || null,\n          status: record.status || this.calculateStatus({\n            morningTimeIn: record.morningTimeIn,\n            afternoonTimeIn: record.afternoonTimeIn\n          })\n        }));\n        const attendanceMap = attendanceRecords.reduce((map, record) => {\n          map[record.employeeId] = record;\n          return map;\n        }, {});\n        this.employees = baseEmployees.map(employee => {\n          const attendance = attendanceMap[employee.id] || {};\n          return {\n            id: employee.id,\n            firstName: employee.firstName,\n            lastName: employee.lastName,\n            morningTimeIn: attendance.morningTimeIn !== undefined ? attendance.morningTimeIn : employee.morningTimeIn,\n            morningTimeOut: attendance.morningTimeOut !== undefined ? attendance.morningTimeOut : employee.morningTimeOut,\n            afternoonTimeIn: attendance.afternoonTimeIn !== undefined ? attendance.afternoonTimeIn : employee.afternoonTimeIn,\n            afternoonTimeOut: attendance.afternoonTimeOut !== undefined ? attendance.afternoonTimeOut : employee.afternoonTimeOut,\n            status: attendance.status || employee.status\n          };\n        });\n        this.employees = [...this.employees]; // Force re-render\n\n        console.log('Mapped employees after fetch:', JSON.stringify(this.employees, null, 2));\n        this.showSuccessMessage('Data loaded');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        this.showErrorMessage(`Failed to load data: ${error.message}`);\n        this.employees = [];\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    sortTable(key) {\n      if (this.sortKey === key) {\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortKey = key;\n        this.sortDirection = 'asc';\n      }\n    },\n    getStatusClass(status) {\n      return {\n        Present: 'text-green-600 bg-green-100',\n        'Half Day': 'text-blue-600 bg-blue-100',\n        Absent: 'text-red-600 bg-red-100',\n        Late: 'text-yellow-600 bg-yellow-100'\n      }[status] || 'text-gray-600';\n    },\n    prevPage() {\n      if (this.currentPage > 1) this.currentPage--;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) this.currentPage++;\n    },\n    showDetails(employee) {\n      this.selectedEmployee = {\n        ...employee\n      };\n      this.showDetailsModal = true;\n    },\n    calculateStatus({\n      morningTimeIn,\n      afternoonTimeIn\n    }) {\n      if (morningTimeIn && afternoonTimeIn) return 'Present';\n      if (morningTimeIn && !afternoonTimeIn) return 'Half Day';\n      return 'Absent';\n    },\n    async markTime(period) {\n      try {\n        const timeField = {\n          'morningIn': 'morningTimeIn',\n          'morningOut': 'morningTimeOut',\n          'afternoonIn': 'afternoonTimeIn',\n          'afternoonOut': 'afternoonTimeOut'\n        }[period];\n        const timeValue = moment().format('HH:mm');\n        if (this.selectedEmployee && timeValue) {\n          this.selectedEmployee[timeField] = timeValue;\n          this.selectedEmployee.status = this.calculateStatus({\n            morningTimeIn: this.selectedEmployee.morningTimeIn,\n            afternoonTimeIn: this.selectedEmployee.afternoonTimeIn\n          });\n          await this.updateAttendance(this.selectedEmployee, timeField);\n        }\n      } catch (error) {\n        console.error('Error marking time:', error);\n        this.showErrorMessage('Failed to mark time');\n      }\n    },\n    async updateAttendance(employee, changedField) {\n      try {\n        console.log('Employee state before update:', JSON.stringify(employee, null, 2));\n        if (!employee || typeof employee.id !== 'number' || isNaN(employee.id)) {\n          throw new Error('Invalid employee ID');\n        }\n        if (!this.date || !/^\\d{4}-\\d{2}-\\d{2}$/.test(this.date)) {\n          throw new Error('Invalid date format');\n        }\n        const newStatus = this.calculateStatus({\n          morningTimeIn: employee.morningTimeIn,\n          afternoonTimeIn: employee.afternoonTimeIn\n        });\n        employee.status = changedField === 'status' ? employee.status : newStatus;\n        const payload = {\n          date: this.date,\n          employeeId: parseInt(employee.id),\n          morningTimeIn: employee.morningTimeIn || null,\n          morningTimeOut: employee.morningTimeOut || null,\n          afternoonTimeIn: employee.afternoonTimeIn || null,\n          afternoonTimeOut: employee.afternoonTimeOut || null,\n          status: employee.status\n        };\n\n        // Ensure no 'id' field is accidentally included\n        delete payload.id;\n        console.log('Final payload sent:', JSON.stringify(payload, null, 2));\n        console.log('Updating attendance for:', {\n          url: `${API_BASE_URL}/api/attendance/${employee.id}`,\n          payload\n        });\n        const response = await axios.put(`${API_BASE_URL}/api/attendance/${employee.id}`, payload, {\n          headers: {\n            'user-role': 'admin'\n          }\n        });\n        if (response.status === 200) {\n          console.log('PUT response:', JSON.stringify(response.data, null, 2));\n          this.employees = this.employees.map(emp => emp.id === employee.id ? {\n            ...emp,\n            ...response.data\n          } : emp);\n          if (employee === this.selectedEmployee) {\n            this.selectedEmployee = {\n              ...this.selectedEmployee,\n              ...response.data\n            };\n          }\n          this.showSuccessMessage('Updated successfully');\n        }\n      } catch (error) {\n        console.error('Error updating attendance:', error);\n        console.error('Response data:', error.response?.data);\n        this.showErrorMessage(`Update failed: ${error.response?.data?.error || error.message}`);\n      }\n    },\n    formatTime(time) {\n      return time ? moment(time, 'HH:mm').format('h:mm A') : '--';\n    },\n    async generateReport() {\n      try {\n        const formattedDate = this.date;\n        const csvHeader = ['Date', 'Employee ID', 'First Name', 'Last Name', 'Morning Time In', 'Morning Time Out', 'Afternoon Time In', 'Afternoon Time Out', 'Status'].join(',');\n        const csvRows = this.filteredEmployees.map(employee => [formattedDate, employee.id, employee.firstName, employee.lastName, employee.morningTimeIn ? `\"${this.formatTime(employee.morningTimeIn)}\"` : '\"\"', employee.morningTimeOut ? `\"${this.formatTime(employee.morningTimeOut)}\"` : '\"\"', employee.afternoonTimeIn ? `\"${this.formatTime(employee.afternoonTimeIn)}\"` : '\"\"', employee.afternoonTimeOut ? `\"${this.formatTime(employee.afternoonTimeOut)}\"` : '\"\"', employee.status].join(',')).join('\\n');\n        const csvContent = `${csvHeader}\\n${csvRows}`;\n        const blob = new Blob([csvContent], {\n          type: 'text/csv;charset=utf-8;'\n        });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = `Attendance_${this.date}.csv`;\n        link.click();\n        URL.revokeObjectURL(link.href);\n        this.showSuccessMessage('Report exported successfully');\n      } catch (error) {\n        console.error('Error generating CSV report:', error);\n        this.showErrorMessage('Export failed');\n      }\n    },\n    showSuccessMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => this.statusMessage = '', 2000);\n    },\n    showErrorMessage(message) {\n      this.statusMessage = message;\n      setTimeout(() => this.statusMessage = '', 2000);\n    }\n  }\n};","map":{"version":3,"names":["axios","moment","API_BASE_URL","process","env","VUE_APP_API_BASE_URL","name","data","employees","selectedEmployee","showDetailsModal","isLoading","searchQuery","currentPage","itemsPerPage","statusMessage","date","Date","toISOString","split","sortKey","sortDirection","headers","key","label","icon","computed","filteredEmployees","Array","isArray","filter","employee","firstName","lastName","toLowerCase","includes","id","toString","sort","a","b","valueA","valueB","paginatedEmployees","start","slice","totalPages","Math","ceil","length","paginationInfo","end","min","mounted","fetchEmployeesAndAttendance","methods","empResponse","get","catch","error","Error","message","baseEmployees","map","emp","parseInt","morningTimeIn","morningTimeOut","afternoonTimeIn","afternoonTimeOut","status","attResponse","params","console","response","log","JSON","stringify","attendanceRecords","record","employeeId","calculateStatus","attendanceMap","reduce","attendance","undefined","showSuccessMessage","showErrorMessage","sortTable","getStatusClass","Present","Absent","Late","prevPage","nextPage","showDetails","markTime","period","timeField","timeValue","format","updateAttendance","changedField","isNaN","test","newStatus","payload","url","put","formatTime","time","generateReport","formattedDate","csvHeader","join","csvRows","csvContent","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","setTimeout"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\admind\\EmployeeAttendance.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-50 p-2\">\r\n    <div class=\"max-w-7xl mx-auto\">\r\n      <!-- Header -->\r\n      <header class=\"bg-white rounded-lg shadow p-4 flex items-center justify-between\">\r\n        <h1 class=\"text-xl font-semibold text-gray-800 flex items-center gap-1\">\r\n          <span class=\"material-icons text-indigo-500 text-xl\">schedule</span>\r\n          Attendance\r\n        </h1>\r\n        <div class=\"flex items-center gap-2\">\r\n          <div class=\"relative\">\r\n            <span class=\"material-icons absolute left-2 top-1/2 -translate-y-1/2 text-gray-400 text-sm\">event</span>\r\n            <input\r\n              type=\"date\"\r\n              v-model=\"date\"\r\n              @change=\"fetchEmployeesAndAttendance\"\r\n              class=\"pl-8 pr-2 py-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 w-32 bg-white\"\r\n            />\r\n          </div>\r\n          <div class=\"relative\">\r\n            <span class=\"material-icons absolute left-2 top-1/2 -translate-y-1/2 text-gray-400 text-sm\">search</span>\r\n            <input\r\n              v-model=\"searchQuery\"\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              class=\"w-36 pl-8 pr-2 py-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n            />\r\n            <button v-if=\"searchQuery\" @click=\"searchQuery = ''\" class=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\">\r\n              <span class=\"material-icons text-xs\">close</span>\r\n            </button>\r\n          </div>\r\n          <button @click=\"generateReport\" \r\n            class=\"px-3 py-1 bg-indigo-500 text-white text-xs rounded hover:bg-indigo-600 flex items-center gap-1\">\r\n            <span class=\"material-icons text-xs\">download</span>\r\n            Export CSV\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <!-- Table -->\r\n      <div class=\"bg-white rounded-lg shadow mt-3 overflow-hidden\">\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full divide-y divide-gray-100\">\r\n            <thead class=\"bg-gray-50\">\r\n              <tr>\r\n                <th v-for=\"header in headers\" :key=\"header.key\" \r\n                  class=\"px-3 py-2 text-left text-xs font-medium text-gray-600 uppercase tracking-wider hover:bg-gray-100 transition-colors cursor-pointer\"\r\n                  @click=\"sortTable(header.key)\">\r\n                  <div class=\"flex items-center gap-1\">\r\n                    <span class=\"material-icons text-indigo-400 text-xs\">{{ header.icon }}</span>\r\n                    <span>{{ header.label }}</span>\r\n                    <span v-if=\"sortKey === header.key\" class=\"material-icons text-xs\">\r\n                      {{ sortDirection === 'asc' ? 'arrow_upward' : 'arrow_downward' }}\r\n                    </span>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"divide-y divide-gray-100 bg-white\">\r\n              <tr v-if=\"isLoading\" class=\"animate-pulse\">\r\n                <td colspan=\"8\" class=\"px-3 py-2\">\r\n                  <div class=\"h-4 bg-gray-200 rounded w-full\"></div>\r\n                </td>\r\n              </tr>\r\n              <tr v-for=\"employee in paginatedEmployees\" :key=\"employee.id\" \r\n                class=\"hover:bg-gray-50 transition-colors text-xs\">\r\n                <td class=\"px-3 py-2 text-gray-700\">{{ employee.id }}</td>\r\n                <td class=\"px-3 py-2\">\r\n                  <div class=\"flex items-center gap-2\">\r\n                    <img :src=\"`https://ui-avatars.com/api/?name=${employee.firstName}+${employee.lastName}&background=4f46e5&color=fff&size=24`\" \r\n                      class=\"h-6 w-6 rounded-full\" />\r\n                    <span class=\"font-medium text-gray-800\">{{ employee.firstName }} {{ employee.lastName }}</span>\r\n                  </div>\r\n                </td>\r\n                <td class=\"px-3 py-2 text-gray-700\">\r\n                  <input\r\n                    type=\"time\"\r\n                    v-model=\"employee.morningTimeIn\"\r\n                    @change=\"updateAttendance(employee, 'morningTimeIn')\"\r\n                    class=\"w-20 py-1 px-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                  />\r\n                </td>\r\n                <td class=\"px-3 py-2 text-gray-700\">\r\n                  <input\r\n                    type=\"time\"\r\n                    v-model=\"employee.morningTimeOut\"\r\n                    @change=\"updateAttendance(employee, 'morningTimeOut')\"\r\n                    class=\"w-20 py-1 px-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                  />\r\n                </td>\r\n                <td class=\"px-3 py-2 text-gray-700\">\r\n                  <input\r\n                    type=\"time\"\r\n                    v-model=\"employee.afternoonTimeIn\"\r\n                    @change=\"updateAttendance(employee, 'afternoonTimeIn')\"\r\n                    class=\"w-20 py-1 px-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                  />\r\n                </td>\r\n                <td class=\"px-3 py-2 text-gray-700\">\r\n                  <input\r\n                    type=\"time\"\r\n                    v-model=\"employee.afternoonTimeOut\"\r\n                    @change=\"updateAttendance(employee, 'afternoonTimeOut')\"\r\n                    class=\"w-20 py-1 px-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                  />\r\n                </td>\r\n                <td class=\"px-3 py-2\">\r\n                  <span :class=\"getStatusClass(employee.status)\" class=\"text-xs px-2 py-1 rounded-full\">\r\n                    {{ employee.status }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"px-3 py-2 flex items-center gap-1\">\r\n                  <select\r\n                    v-model=\"employee.status\"\r\n                    @change=\"updateAttendance(employee, 'status')\"\r\n                    class=\"w-20 py-1 px-1 text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                  >\r\n                    <option value=\"Present\">Present</option>\r\n                    <option value=\"Half Day\">Half Day</option>\r\n                    <option value=\"Absent\">Absent</option>\r\n                    <option value=\"Late\">Late</option>\r\n                  </select>\r\n                  <button @click=\"showDetails(employee)\" \r\n                    class=\"p-1 bg-indigo-500 text-white rounded hover:bg-indigo-600\"\r\n                    title=\"Edit Details\">\r\n                    <span class=\"material-icons text-xs\">edit</span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr v-if=\"!isLoading && paginatedEmployees.length === 0\">\r\n                <td colspan=\"8\" class=\"px-3 py-4 text-center text-gray-500 text-xs\">\r\n                  No employees found\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        <!-- Pagination -->\r\n        <div v-if=\"filteredEmployees.length > itemsPerPage\" \r\n          class=\"p-2 flex justify-between items-center bg-gray-50 border-t border-gray-100\">\r\n          <span class=\"text-xs text-gray-500\">\r\n            {{ paginationInfo.start }}-{{ paginationInfo.end }} of {{ filteredEmployees.length }}\r\n          </span>\r\n          <div class=\"flex gap-2\">\r\n            <button @click=\"prevPage\" :disabled=\"currentPage === 1\" \r\n              class=\"px-2 py-1 bg-indigo-500 text-white text-xs rounded disabled:bg-gray-300 hover:bg-indigo-600\">\r\n              Prev\r\n            </button>\r\n            <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" \r\n              class=\"px-2 py-1 bg-indigo-500 text-white text-xs rounded disabled:bg-gray-300 hover:bg-indigo-600\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal -->\r\n      <transition name=\"modal\">\r\n        <div v-if=\"showDetailsModal\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <div class=\"bg-white rounded-lg shadow w-full max-w-sm p-4\">\r\n            <div class=\"flex justify-between items-center mb-3\">\r\n              <h2 class=\"text-lg font-medium text-gray-800\">Edit Attendance</h2>\r\n              <button @click=\"showDetailsModal = false\" class=\"text-gray-500 hover:text-gray-700\">\r\n                <span class=\"material-icons text-lg\">close</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"space-y-3\">\r\n              <div class=\"flex items-center gap-2\">\r\n                <img :src=\"`https://ui-avatars.com/api/?name=${selectedEmployee?.firstName}+${selectedEmployee?.lastName}&background=4f46e5&color=fff`\" \r\n                  class=\"h-8 w-8 rounded-full\" />\r\n                <div>\r\n                  <p class=\"font-medium text-gray-800\">{{ selectedEmployee?.firstName }} {{ selectedEmployee?.lastName }}</p>\r\n                  <p class=\"text-xs text-gray-500\">ID: {{ selectedEmployee?.id }}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"grid grid-cols-2 gap-3\">\r\n                <div>\r\n                  <label for=\"morningTimeIn\" class=\"block text-xs font-medium text-gray-700\">Morning In</label>\r\n                  <input\r\n                    id=\"morningTimeIn\"\r\n                    v-model=\"selectedEmployee.morningTimeIn\"\r\n                    type=\"time\"\r\n                    class=\"mt-1 p-1 w-full text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                    @change=\"updateAttendance(selectedEmployee, 'morningTimeIn')\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label for=\"morningTimeOut\" class=\"block text-xs font-medium text-gray-700\">Morning Out</label>\r\n                  <input\r\n                    id=\"morningTimeOut\"\r\n                    v-model=\"selectedEmployee.morningTimeOut\"\r\n                    type=\"time\"\r\n                    class=\"mt-1 p-1 w-full text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                    @change=\"updateAttendance(selectedEmployee, 'morningTimeOut')\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label for=\"afternoonTimeIn\" class=\"block text-xs font-medium text-gray-700\">Afternoon In</label>\r\n                  <input\r\n                    id=\"afternoonTimeIn\"\r\n                    v-model=\"selectedEmployee.afternoonTimeIn\"\r\n                    type=\"time\"\r\n                    class=\"mt-1 p-1 w-full text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                    @change=\"updateAttendance(selectedEmployee, 'afternoonTimeIn')\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label for=\"afternoonTimeOut\" class=\"block text-xs font-medium text-gray-700\">Afternoon Out</label>\r\n                  <input\r\n                    id=\"afternoonTimeOut\"\r\n                    v-model=\"selectedEmployee.afternoonTimeOut\"\r\n                    type=\"time\"\r\n                    class=\"mt-1 p-1 w-full text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                    @change=\"updateAttendance(selectedEmployee, 'afternoonTimeOut')\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-span-2\">\r\n                  <label for=\"status\" class=\"block text-xs font-medium text-gray-700\">Status</label>\r\n                  <select\r\n                    id=\"status\"\r\n                    v-model=\"selectedEmployee.status\"\r\n                    class=\"mt-1 p-1 w-full text-xs border border-gray-200 rounded focus:ring-1 focus:ring-indigo-400 focus:border-indigo-400 bg-white\"\r\n                    @change=\"updateAttendance(selectedEmployee, 'status')\"\r\n                  >\r\n                    <option value=\"Present\">Present</option>\r\n                    <option value=\"Half Day\">Half Day</option>\r\n                    <option value=\"Absent\">Absent</option>\r\n                    <option value=\"Late\">Late</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"flex gap-2 mt-4\">\r\n                <button @click=\"markTime('morningIn')\" \r\n                  class=\"flex-1 py-1 bg-indigo-500 text-white text-xs rounded hover:bg-indigo-600\">\r\n                  Morning In Now\r\n                </button>\r\n                <button @click=\"markTime('morningOut')\" \r\n                  class=\"flex-1 py-1 bg-indigo-500 text-white text-xs rounded hover:bg-indigo-600\">\r\n                  Morning Out Now\r\n                </button>\r\n                <button @click=\"markTime('afternoonIn')\" \r\n                  class=\"flex-1 py-1 bg-indigo-500 text-white text-xs rounded hover:bg-indigo-600\">\r\n                  Afternoon In Now\r\n                </button>\r\n                <button @click=\"markTime('afternoonOut')\" \r\n                  class=\"flex-1 py-1 bg-indigo-500 text-white text-xs rounded hover:bg-indigo-600\">\r\n                  Afternoon Out Now\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n\r\n      <!-- Status Message -->\r\n      <div\r\n        v-if=\"statusMessage\"\r\n        :class=\"statusMessage.includes('successfully') ? 'bg-green-500' : 'bg-red-500'\"\r\n        class=\"fixed bottom-4 right-4 px-3 py-2 text-white text-xs rounded-md shadow-lg animate-fade-in flex items-center gap-1\"\r\n      >\r\n        <span class=\"material-icons text-xs\">\r\n          {{ statusMessage.includes('successfully') ? 'check_circle' : 'error' }}\r\n        </span>\r\n        {{ statusMessage }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst API_BASE_URL = process.env.VUE_APP_API_BASE_URL || 'http://localhost:7777';\r\n\r\nexport default {\r\n  name: 'EmployeeAttendance',\r\n  data() {\r\n    return {\r\n      employees: [],\r\n      selectedEmployee: null,\r\n      showDetailsModal: false,\r\n      isLoading: false,\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n      statusMessage: '',\r\n      date: new Date().toISOString().split('T')[0],\r\n      sortKey: 'id',\r\n      sortDirection: 'asc',\r\n      headers: [\r\n        { key: 'id', label: 'ID', icon: 'badge' },\r\n        { key: 'firstName', label: 'Name', icon: 'person' },\r\n        { key: 'morningTimeIn', label: 'Morning In', icon: 'wb_sunny' },\r\n        { key: 'morningTimeOut', label: 'Morning Out', icon: 'wb_sunny' },\r\n        { key: 'afternoonTimeIn', label: 'Afternoon In', icon: 'nights_stay' },\r\n        { key: 'afternoonTimeOut', label: 'Afternoon Out', icon: 'nights_stay' },\r\n        { key: 'status', label: 'Status', icon: 'check_circle' },\r\n        { key: 'actions', label: 'Actions', icon: 'settings' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      if (!this.employees || !Array.isArray(this.employees)) return [];\r\n      return this.employees\r\n        .filter(employee =>\r\n          !this.searchQuery ||\r\n          `${employee.firstName} ${employee.lastName}`.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          employee.id.toString().toLowerCase().includes(this.searchQuery.toLowerCase())\r\n        )\r\n        .sort((a, b) => {\r\n          const valueA = a[this.sortKey] || '';\r\n          const valueB = b[this.sortKey] || '';\r\n          return this.sortDirection === 'asc'\r\n            ? valueA < valueB ? -1 : 1\r\n            : valueA > valueB ? -1 : 1;\r\n        });\r\n    },\r\n    paginatedEmployees() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      return this.filteredEmployees.slice(start, start + this.itemsPerPage);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage) || 1;\r\n    },\r\n    paginationInfo() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n      const end = Math.min(start + this.itemsPerPage - 1, this.filteredEmployees.length);\r\n      return { start, end };\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchEmployeesAndAttendance();\r\n  },\r\n  methods: {\r\n    async fetchEmployeesAndAttendance() {\r\n      this.isLoading = true;\r\n      this.statusMessage = 'Loading data...';\r\n      try {\r\n        const empResponse = await axios.get(`${API_BASE_URL}/api/employees`, {\r\n          headers: { 'user-role': 'admin' },\r\n        }).catch(error => {\r\n          throw new Error(`Employees API failed: ${error.message}`);\r\n        });\r\n\r\n        const baseEmployees = (empResponse.data || []).map(emp => ({\r\n          id: parseInt(emp.id),\r\n          firstName: emp.firstName || 'Unknown',\r\n          lastName: emp.lastName || '',\r\n          morningTimeIn: null,\r\n          morningTimeOut: null,\r\n          afternoonTimeIn: null,\r\n          afternoonTimeOut: null,\r\n          status: 'Absent',\r\n        }));\r\n\r\n        const attResponse = await axios.get(`${API_BASE_URL}/api/attendance`, {\r\n          params: { date: this.date },\r\n          headers: { 'user-role': 'admin' },\r\n        }).catch(error => {\r\n          console.error('Attendance API response:', error.response?.data);\r\n          throw new Error(`Attendance API failed: ${error.message}`);\r\n        });\r\n\r\n        console.log('Fetched attendance data:', JSON.stringify(attResponse.data, null, 2));\r\n\r\n        const attendanceRecords = (attResponse.data || []).map(record => ({\r\n          employeeId: parseInt(record.employeeId),\r\n          morningTimeIn: record.morningTimeIn || null,\r\n          morningTimeOut: record.morningTimeOut || null,\r\n          afternoonTimeIn: record.afternoonTimeIn || null,\r\n          afternoonTimeOut: record.afternoonTimeOut || null,\r\n          status: record.status || this.calculateStatus({\r\n            morningTimeIn: record.morningTimeIn,\r\n            afternoonTimeIn: record.afternoonTimeIn,\r\n          }),\r\n        }));\r\n\r\n        const attendanceMap = attendanceRecords.reduce((map, record) => {\r\n          map[record.employeeId] = record;\r\n          return map;\r\n        }, {});\r\n\r\n        this.employees = baseEmployees.map(employee => {\r\n          const attendance = attendanceMap[employee.id] || {};\r\n          return {\r\n            id: employee.id,\r\n            firstName: employee.firstName,\r\n            lastName: employee.lastName,\r\n            morningTimeIn: attendance.morningTimeIn !== undefined ? attendance.morningTimeIn : employee.morningTimeIn,\r\n            morningTimeOut: attendance.morningTimeOut !== undefined ? attendance.morningTimeOut : employee.morningTimeOut,\r\n            afternoonTimeIn: attendance.afternoonTimeIn !== undefined ? attendance.afternoonTimeIn : employee.afternoonTimeIn,\r\n            afternoonTimeOut: attendance.afternoonTimeOut !== undefined ? attendance.afternoonTimeOut : employee.afternoonTimeOut,\r\n            status: attendance.status || employee.status,\r\n          };\r\n        });\r\n\r\n        this.employees = [...this.employees]; // Force re-render\r\n\r\n        console.log('Mapped employees after fetch:', JSON.stringify(this.employees, null, 2));\r\n        this.showSuccessMessage('Data loaded');\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        this.showErrorMessage(`Failed to load data: ${error.message}`);\r\n        this.employees = [];\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    sortTable(key) {\r\n      if (this.sortKey === key) {\r\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n      } else {\r\n        this.sortKey = key;\r\n        this.sortDirection = 'asc';\r\n      }\r\n    },\r\n    getStatusClass(status) {\r\n      return {\r\n        Present: 'text-green-600 bg-green-100',\r\n        'Half Day': 'text-blue-600 bg-blue-100',\r\n        Absent: 'text-red-600 bg-red-100',\r\n        Late: 'text-yellow-600 bg-yellow-100',\r\n      }[status] || 'text-gray-600';\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) this.currentPage--;\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) this.currentPage++;\r\n    },\r\n    showDetails(employee) {\r\n      this.selectedEmployee = { ...employee };\r\n      this.showDetailsModal = true;\r\n    },\r\n    calculateStatus({ morningTimeIn, afternoonTimeIn }) {\r\n      if (morningTimeIn && afternoonTimeIn) return 'Present';\r\n      if (morningTimeIn && !afternoonTimeIn) return 'Half Day';\r\n      return 'Absent';\r\n    },\r\n    async markTime(period) {\r\n      try {\r\n        const timeField = {\r\n          'morningIn': 'morningTimeIn',\r\n          'morningOut': 'morningTimeOut',\r\n          'afternoonIn': 'afternoonTimeIn',\r\n          'afternoonOut': 'afternoonTimeOut'\r\n        }[period];\r\n        const timeValue = moment().format('HH:mm');\r\n        if (this.selectedEmployee && timeValue) {\r\n          this.selectedEmployee[timeField] = timeValue;\r\n          this.selectedEmployee.status = this.calculateStatus({\r\n            morningTimeIn: this.selectedEmployee.morningTimeIn,\r\n            afternoonTimeIn: this.selectedEmployee.afternoonTimeIn,\r\n          });\r\n          await this.updateAttendance(this.selectedEmployee, timeField);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error marking time:', error);\r\n        this.showErrorMessage('Failed to mark time');\r\n      }\r\n    },\r\n    async updateAttendance(employee, changedField) {\r\n      try {\r\n        console.log('Employee state before update:', JSON.stringify(employee, null, 2));\r\n        if (!employee || typeof employee.id !== 'number' || isNaN(employee.id)) {\r\n          throw new Error('Invalid employee ID');\r\n        }\r\n        if (!this.date || !/^\\d{4}-\\d{2}-\\d{2}$/.test(this.date)) {\r\n          throw new Error('Invalid date format');\r\n        }\r\n\r\n        const newStatus = this.calculateStatus({\r\n          morningTimeIn: employee.morningTimeIn,\r\n          afternoonTimeIn: employee.afternoonTimeIn,\r\n        });\r\n\r\n        employee.status = changedField === 'status' ? employee.status : newStatus;\r\n\r\n        const payload = {\r\n          date: this.date,\r\n          employeeId: parseInt(employee.id),\r\n          morningTimeIn: employee.morningTimeIn || null,\r\n          morningTimeOut: employee.morningTimeOut || null,\r\n          afternoonTimeIn: employee.afternoonTimeIn || null,\r\n          afternoonTimeOut: employee.afternoonTimeOut || null,\r\n          status: employee.status,\r\n        };\r\n\r\n        // Ensure no 'id' field is accidentally included\r\n        delete payload.id;\r\n        console.log('Final payload sent:', JSON.stringify(payload, null, 2));\r\n\r\n        console.log('Updating attendance for:', {\r\n          url: `${API_BASE_URL}/api/attendance/${employee.id}`,\r\n          payload,\r\n        });\r\n\r\n        const response = await axios.put(\r\n          `${API_BASE_URL}/api/attendance/${employee.id}`,\r\n          payload,\r\n          { headers: { 'user-role': 'admin' } }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          console.log('PUT response:', JSON.stringify(response.data, null, 2));\r\n          this.employees = this.employees.map(emp =>\r\n            emp.id === employee.id ? { ...emp, ...response.data } : emp\r\n          );\r\n          if (employee === this.selectedEmployee) {\r\n            this.selectedEmployee = { ...this.selectedEmployee, ...response.data };\r\n          }\r\n          this.showSuccessMessage('Updated successfully');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating attendance:', error);\r\n        console.error('Response data:', error.response?.data);\r\n        this.showErrorMessage(`Update failed: ${error.response?.data?.error || error.message}`);\r\n      }\r\n    },\r\n    formatTime(time) {\r\n      return time ? moment(time, 'HH:mm').format('h:mm A') : '--';\r\n    },\r\n    async generateReport() {\r\n      try {\r\n        const formattedDate = this.date;\r\n        const csvHeader = [\r\n          'Date',\r\n          'Employee ID',\r\n          'First Name',\r\n          'Last Name',\r\n          'Morning Time In',\r\n          'Morning Time Out',\r\n          'Afternoon Time In',\r\n          'Afternoon Time Out',\r\n          'Status'\r\n        ].join(',');\r\n\r\n        const csvRows = this.filteredEmployees.map(employee => [\r\n          formattedDate,\r\n          employee.id,\r\n          employee.firstName,\r\n          employee.lastName,\r\n          employee.morningTimeIn ? `\"${this.formatTime(employee.morningTimeIn)}\"` : '\"\"',\r\n          employee.morningTimeOut ? `\"${this.formatTime(employee.morningTimeOut)}\"` : '\"\"',\r\n          employee.afternoonTimeIn ? `\"${this.formatTime(employee.afternoonTimeIn)}\"` : '\"\"',\r\n          employee.afternoonTimeOut ? `\"${this.formatTime(employee.afternoonTimeOut)}\"` : '\"\"',\r\n          employee.status\r\n        ].join(',')).join('\\n');\r\n\r\n        const csvContent = `${csvHeader}\\n${csvRows}`;\r\n        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = `Attendance_${this.date}.csv`;\r\n        link.click();\r\n        URL.revokeObjectURL(link.href);\r\n\r\n        this.showSuccessMessage('Report exported successfully');\r\n      } catch (error) {\r\n        console.error('Error generating CSV report:', error);\r\n        this.showErrorMessage('Export failed');\r\n      }\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => (this.statusMessage = ''), 2000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => (this.statusMessage = ''), 2000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Transitions */\r\n.modal-enter-active,\r\n.modal-leave-active {\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.modal-enter-from,\r\n.modal-leave-to {\r\n  opacity: 0;\r\n  transform: scale(0.95);\r\n}\r\n\r\nbutton:hover:not(:disabled) {\r\n  transform: translateY(-1px);\r\n  transition: all 0.15s ease;\r\n}\r\n\r\n/* Animations */\r\n.animate-fade-in {\r\n  animation: fadeIn 0.2s ease-in-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(5px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n/* Responsive fixes */\r\n@media (max-width: 640px) {\r\n  .flex-col.sm\\:flex-row { flex-direction: column; gap: 0.5rem; }\r\n  .relative.w-full.sm\\:w-64 { width: 100%; }\r\n  input[type=\"date\"], input[type=\"time\"], input[type=\"text\"], select { font-size: 0.75rem; }\r\n  img.h-6.w-6 { height: 1.25rem; width: 1.25rem; }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}