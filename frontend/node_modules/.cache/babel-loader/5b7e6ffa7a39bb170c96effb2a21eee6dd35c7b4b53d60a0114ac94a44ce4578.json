{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  name: 'SalarySlips',\n  data() {\n    return {\n      employees: [{\n        id: 1,\n        name: 'John Doe',\n        totalEarnings: 50000,\n        totalDeductions: 5000,\n        totalSalary: 45000,\n        salaryMonth: '02/20/2025'\n      }, {\n        id: 2,\n        name: 'Allen Kalbo',\n        totalEarnings: 60000,\n        totalDeductions: 7000,\n        totalSalary: 53000,\n        salaryMonth: '02/22/2025'\n      }, {\n        id: 3,\n        name: 'Adrian D Grate',\n        totalEarnings: 52000,\n        totalDeductions: 4000,\n        totalSalary: 48000,\n        salaryMonth: '02/25/2025'\n      }, {\n        id: 4,\n        name: 'Glenn D Dragon',\n        totalEarnings: 58000,\n        totalDeductions: 6000,\n        totalSalary: 52000,\n        salaryMonth: '02/28/2025'\n      }, {\n        id: 5,\n        name: 'Emjay Uzumaki',\n        totalEarnings: 49000,\n        totalDeductions: 3000,\n        totalSalary: 46000,\n        salaryMonth: '02/15/2025'\n      }, {\n        id: 6,\n        name: 'Steven Uchiha',\n        totalEarnings: 62000,\n        totalDeductions: 8000,\n        totalSalary: 54000,\n        salaryMonth: '02/10/2025'\n      }, {\n        id: 7,\n        name: 'Jake D Bojek',\n        totalEarnings: 56000,\n        totalDeductions: 5000,\n        totalSalary: 51000,\n        salaryMonth: '02/05/2025'\n      }, {\n        id: 8,\n        name: 'Deo D Dancer',\n        totalEarnings: 61000,\n        totalDeductions: 7500,\n        totalSalary: 53500,\n        salaryMonth: '02/18/2025'\n      }],\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(employee => employee.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    totalPages() {\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage);\n    },\n    paginatedEmployees() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredEmployees.slice(start, end);\n    }\n  },\n  methods: {\n    generatePayslip(employeeId) {\n      console.log(`Generating payslip for employee ID: ${employeeId}`);\n      alert(`Payslip generated for Employee ID: ${employeeId}`);\n    },\n    async sendPayslipEmail(employeeId) {\n      try {\n        // Find the employee by ID\n        const employee = this.employees.find(emp => emp.id === employeeId);\n        if (!employee) {\n          alert('Employee not found!');\n          return;\n        }\n\n        // Simulate sending an email to the test email address\n        const testEmail = 'stevenruelo20@gmail.com';\n        const response = await this.sendEmailToBackend(testEmail, employee);\n        if (response.success) {\n          alert(`Payslip email sent to ${testEmail} for Employee: ${employee.name}`);\n        } else {\n          alert('Failed to send email. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error sending email:', error);\n        alert('An error occurred while sending the email.');\n      }\n    },\n    async sendEmailToBackend(email, employee) {\n      // Simulate a backend API call to send an email\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve({\n            success: true\n          });\n        }, 1000); // Simulate a 1-second delay\n      });\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","employees","id","totalEarnings","totalDeductions","totalSalary","salaryMonth","searchQuery","currentPage","itemsPerPage","computed","filteredEmployees","filter","employee","toLowerCase","includes","totalPages","Math","ceil","length","paginatedEmployees","start","end","slice","methods","generatePayslip","employeeId","console","log","alert","sendPayslipEmail","find","emp","testEmail","response","sendEmailToBackend","success","error","email","Promise","resolve","setTimeout","nextPage","prevPage"],"sources":["C:\\Users\\ASUS\\Desktop\\Payroll_system\\frontend\\src\\views\\admind\\SalarySlips.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4\">\r\n    <div class=\"max-w-6xl mx-auto\">\r\n      <!-- Search Input -->\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <input\r\n          v-model=\"searchQuery\"\r\n          type=\"text\"\r\n          placeholder=\"Search Employee...\"\r\n          class=\"border rounded-lg px-4 py-2 w-1/3\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Salary Table -->\r\n      <div class=\"bg-white p-5 rounded-xl shadow-md\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Employee Name</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Earnings</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Deductions</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total Salary</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Salary Month</th>\r\n              <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr v-for=\"employee in paginatedEmployees\" :key=\"employee.id\">\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.name }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P{{ employee.totalEarnings.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P{{ employee.totalDeductions.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">P{{ employee.totalSalary.toLocaleString() }}</td>\r\n              <td class=\"px-6 py-4 text-sm text-gray-900\">{{ employee.salaryMonth }}</td>\r\n              <td class=\"px-6 py-4 text-sm font-medium flex gap-2\">\r\n                <button @click=\"generatePayslip(employee.id)\" class=\"bg-green-50 text-green-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-green-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons text-green-600\">description</span> Generate\r\n                </button>\r\n                <button @click=\"sendPayslipEmail(employee.id)\" class=\"bg-blue-50 text-blue-600 font-semibold py-1.5 px-3 rounded-lg hover:bg-blue-100 transition-all duration-200 flex items-center gap-2 text-xs\">\r\n                  <span class=\"material-icons text-blue-600\">email</span> Send Email\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination Controls -->\r\n      <div class=\"flex justify-center items-center mt-4 gap-4\">\r\n        <button \r\n          @click=\"prevPage\"\r\n          :disabled=\"currentPage === 1\"\r\n          class=\"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50\"\r\n        >\r\n          <span class=\"material-icons\">chevron_left</span>\r\n        </button>\r\n        \r\n        <span class=\"text-gray-700\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n        \r\n        <button \r\n          @click=\"nextPage\"\r\n          :disabled=\"currentPage === totalPages\"\r\n          class=\"bg-gray-200 p-2 rounded-full hover:bg-gray-300 transition disabled:opacity-50\"\r\n        >\r\n          <span class=\"material-icons\">chevron_right</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SalarySlips',\r\n  data() {\r\n    return {\r\n      employees: [\r\n        { id: 1, name: 'John Doe', totalEarnings: 50000, totalDeductions: 5000, totalSalary: 45000, salaryMonth: '02/20/2025' },\r\n        { id: 2, name: 'Allen Kalbo', totalEarnings: 60000, totalDeductions: 7000, totalSalary: 53000, salaryMonth: '02/22/2025' },\r\n        { id: 3, name: 'Adrian D Grate', totalEarnings: 52000, totalDeductions: 4000, totalSalary: 48000, salaryMonth: '02/25/2025' },\r\n        { id: 4, name: 'Glenn D Dragon', totalEarnings: 58000, totalDeductions: 6000, totalSalary: 52000, salaryMonth: '02/28/2025' },\r\n        { id: 5, name: 'Emjay Uzumaki', totalEarnings: 49000, totalDeductions: 3000, totalSalary: 46000, salaryMonth: '02/15/2025' },\r\n        { id: 6, name: 'Steven Uchiha', totalEarnings: 62000, totalDeductions: 8000, totalSalary: 54000, salaryMonth: '02/10/2025' },\r\n        { id: 7, name: 'Jake D Bojek', totalEarnings: 56000, totalDeductions: 5000, totalSalary: 51000, salaryMonth: '02/05/2025' },\r\n        { id: 8, name: 'Deo D Dancer', totalEarnings: 61000, totalDeductions: 7500, totalSalary: 53500, salaryMonth: '02/18/2025' },\r\n      ],\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter((employee) =>\r\n        employee.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredEmployees.length / this.itemsPerPage);\r\n    },\r\n    paginatedEmployees() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredEmployees.slice(start, end);\r\n    },\r\n  },\r\n  methods: {\r\n    generatePayslip(employeeId) {\r\n      console.log(`Generating payslip for employee ID: ${employeeId}`);\r\n      alert(`Payslip generated for Employee ID: ${employeeId}`);\r\n    },\r\n    async sendPayslipEmail(employeeId) {\r\n      try {\r\n        // Find the employee by ID\r\n        const employee = this.employees.find((emp) => emp.id === employeeId);\r\n        if (!employee) {\r\n          alert('Employee not found!');\r\n          return;\r\n        }\r\n\r\n        // Simulate sending an email to the test email address\r\n        const testEmail = 'stevenruelo20@gmail.com';\r\n        const response = await this.sendEmailToBackend(testEmail, employee);\r\n\r\n        if (response.success) {\r\n          alert(`Payslip email sent to ${testEmail} for Employee: ${employee.name}`);\r\n        } else {\r\n          alert('Failed to send email. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending email:', error);\r\n        alert('An error occurred while sending the email.');\r\n      }\r\n    },\r\n    async sendEmailToBackend(email, employee) {\r\n      // Simulate a backend API call to send an email\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve({ success: true });\r\n        }, 1000); // Simulate a 1-second delay\r\n      });\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}