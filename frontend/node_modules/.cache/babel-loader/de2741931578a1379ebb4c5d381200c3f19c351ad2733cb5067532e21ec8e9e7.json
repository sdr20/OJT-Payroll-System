{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createTextVNode as _createTextVNode, renderList as _renderList, vModelSelect as _vModelSelect, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen p-1\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-8xl mx-auto\"\n};\nconst _hoisted_3 = {\n  class: \"bg-white p-6 rounded-xl shadow-md\"\n};\nconst _hoisted_4 = {\n  class: \"flex justify-between items-center mb-6\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"min-w-full border border-gray-300\"\n};\nconst _hoisted_6 = {\n  class: \"hover:bg-gray-50\"\n};\nconst _hoisted_7 = {\n  class: \"border px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_8 = {\n  class: \"border px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_9 = {\n  class: \"border px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_10 = {\n  class: \"border px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_11 = {\n  class: \"border px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_12 = {\n  class: \"border px-4 py-2 text-sm\"\n};\nconst _hoisted_13 = [\"disabled\"];\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = {\n  class: \"text-center py-8 text-gray-500\"\n};\nconst _hoisted_16 = {\n  key: 2,\n  class: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\n};\nconst _hoisted_17 = {\n  class: \"bg-white rounded-xl shadow-xl w-full max-w-5xl h-[80vh] flex flex-col\"\n};\nconst _hoisted_18 = {\n  class: \"flex items-center justify-between p-4 border-b\"\n};\nconst _hoisted_19 = {\n  class: \"text-base font-medium text-gray-800 flex items-center gap-1\"\n};\nconst _hoisted_20 = {\n  class: \"flex flex-1 overflow-hidden\"\n};\nconst _hoisted_21 = {\n  class: \"w-1/2 p-4 overflow-y-auto border-r\"\n};\nconst _hoisted_22 = {\n  class: \"mb-4\"\n};\nconst _hoisted_23 = {\n  class: \"text-sm text-gray-600\"\n};\nconst _hoisted_24 = {\n  class: \"mb-4\"\n};\nconst _hoisted_25 = [\"value\"];\nconst _hoisted_26 = {\n  class: \"min-w-full divide-y divide-gray-200\"\n};\nconst _hoisted_27 = {\n  class: \"divide-y divide-gray-200\"\n};\nconst _hoisted_28 = [\"onClick\"];\nconst _hoisted_29 = {\n  class: \"px-4 py-2 text-sm text-gray-900\"\n};\nconst _hoisted_30 = {\n  class: \"px-4 py-2 text-sm text-gray-500\"\n};\nconst _hoisted_31 = {\n  class: \"px-4 py-2\"\n};\nconst _hoisted_32 = [\"onClick\", \"disabled\"];\nconst _hoisted_33 = {\n  key: 0\n};\nconst _hoisted_34 = {\n  class: \"w-1/2 p-4 overflow-y-auto\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  class: \"flex flex-col h-full\"\n};\nconst _hoisted_36 = [\"src\"];\nconst _hoisted_37 = {\n  key: 0,\n  class: \"mt-3 p-3 bg-red-50 text-red-700 rounded text-sm flex items-center gap-1\"\n};\nconst _hoisted_38 = {\n  key: 1,\n  class: \"text-sm text-gray-500 text-center mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-semibold text-gray-900\"\n  }, \"My Employee Records\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedMonth = $event),\n    type: \"month\",\n    class: \"border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.fetchEmployeeData && $options.fetchEmployeeData(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.selectedMonth]])]), $data.employee ? (_openBlock(), _createElementBlock(\"table\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-200\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"ID\"), _createElementVNode(\"th\", {\n    class: \"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Name\"), _createElementVNode(\"th\", {\n    class: \"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Position\"), _createElementVNode(\"th\", {\n    class: \"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Hire Date\"), _createElementVNode(\"th\", {\n    class: \"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Period\"), _createElementVNode(\"th\", {\n    class: \"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n  }, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", _hoisted_6, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString($data.employee.id), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, _toDisplayString($data.employee.name), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, _toDisplayString($data.employee.position), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, _toDisplayString($options.formatDate($data.employee.hireDate)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_11, _toDisplayString($data.employee.salaryMonth), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.generateRecord && $options.generateRecord(...args)),\n    class: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-700 transition-all duration-200 mr-2\",\n    disabled: $data.isGenerating\n  }, _toDisplayString($data.isGenerating ? 'Generating...' : 'Generate Record'), 9 /* TEXT, PROPS */, _hoisted_13), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.viewRecordHistory && $options.viewRecordHistory(...args)),\n    class: \"bg-yellow-500 text-white px-3 py-1 rounded hover:bg-yellow-700 transition-all duration-200\",\n    disabled: $data.isGenerating\n  }, \" View History \", 8 /* PROPS */, _hoisted_14)])])])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Loading/Error State \"), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($data.errorMessage || 'Loading employee data...'), 1 /* TEXT */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" Employee Record History Modal \"), $data.showRecordModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"h2\", _hoisted_19, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"history\", -1 /* HOISTED */)), _createTextVNode(\" Record History - \" + _toDisplayString($data.employee?.name), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $data.showRecordModal = false),\n    class: \"p-1 hover:bg-gray-100 rounded-full\"\n  }, _cache[12] || (_cache[12] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"close\", -1 /* HOISTED */)]))]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mb-2\"\n  }, \"Position History\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_23, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employee.positionHistory, history => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: history.startDate,\n      class: \"mb-1\"\n    }, _toDisplayString(history.position) + \" (\" + _toDisplayString($options.formatDate(history.startDate)) + \" - \" + _toDisplayString(history.endDate ? $options.formatDate(history.endDate) : 'Present') + \") \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_24, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    class: \"text-sm font-medium text-gray-700\"\n  }, \"Filter by Position:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.modalFilterPosition = $event),\n    class: \"w-full py-2 px-3 text-sm rounded-md border border-gray-200 focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-1\"\n  }, [_cache[14] || (_cache[14] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Positions\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.uniqueModalPositions, pos => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: pos,\n      value: pos\n    }, _toDisplayString(pos), 9 /* TEXT, PROPS */, _hoisted_25);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.modalFilterPosition]])]), _cache[19] || (_cache[19] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mb-2\"\n  }, \"Record Periods\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_26, [_cache[18] || (_cache[18] = _createElementVNode(\"thead\", {\n    class: \"bg-gray-200 sticky top-0\"\n  }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Period\"), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Position\"), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-xs font-medium text-gray-500\"\n  }, \"Action\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", _hoisted_27, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredRecordHistory, record => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: record.salaryMonth,\n      class: _normalizeClass([\"hover:bg-gray-50 cursor-pointer\", {\n        'bg-blue-100': $data.selectedRecord?.salaryMonth === record.salaryMonth\n      }]),\n      onClick: $event => $options.selectRecord(record)\n    }, [_createElementVNode(\"td\", _hoisted_29, _toDisplayString(record.salaryMonth), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_30, _toDisplayString(record.position), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_31, [_createElementVNode(\"button\", {\n      onClick: _withModifiers($event => $options.generateRecordForHistory(record), [\"stop\"]),\n      class: \"inline-flex items-center gap-1 px-3 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-700\",\n      disabled: $data.recordGenerationStatus[record.salaryMonth]?.generating\n    }, [_cache[16] || (_cache[16] = _createElementVNode(\"span\", {\n      class: \"material-icons text-sm\"\n    }, \"description\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.recordGenerationStatus[record.salaryMonth]?.generating ? 'Generating...' : 'Generate'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_32)])], 10 /* CLASS, PROPS */, _hoisted_28);\n  }), 128 /* KEYED_FRAGMENT */)), $options.filteredRecordHistory.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_33, _cache[17] || (_cache[17] = [_createElementVNode(\"td\", {\n    colspan: \"3\",\n    class: \"px-4 py-4 text-center text-sm text-gray-500\"\n  }, \"No records available for this position.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_34, [_cache[22] || (_cache[22] = _createElementVNode(\"h3\", {\n    class: \"text-sm font-medium text-gray-700 mb-2\"\n  }, \"Record Preview\", -1 /* HOISTED */)), $data.selectedRecord && $data.selectedRecord.recordDataUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_createElementVNode(\"iframe\", {\n    src: $data.selectedRecord.recordDataUrl,\n    class: \"w-full h-[60vh] rounded border mb-4\",\n    onLoad: _cache[6] || (_cache[6] = (...args) => $options.onIframeLoad && $options.onIframeLoad(...args)),\n    onError: _cache[7] || (_cache[7] = (...args) => $options.onIframeError && $options.onIframeError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_36), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.downloadRecord && $options.downloadRecord(...args)),\n    class: \"flex items-center justify-center gap-1 bg-blue-500 hover:bg-blue-700 text-white text-sm py-2 px-4 rounded-md\"\n  }, _cache[20] || (_cache[20] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"download\", -1 /* HOISTED */), _createTextVNode(\" Download PDF \")])), $data.iframeError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, _cache[21] || (_cache[21] = [_createElementVNode(\"span\", {\n    class: \"material-icons text-sm\"\n  }, \"error\", -1 /* HOISTED */), _createTextVNode(\" Error loading record. Please try again. \")]))) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_38, \" Select a record from the list to preview. \"))])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Status Message \"), $data.statusMessage ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    class: _normalizeClass([$data.statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700', \"mt-4 p-3 rounded-lg text-center\"])\n  }, _toDisplayString($data.statusMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_cache","$event","$data","selectedMonth","type","onChange","args","$options","fetchEmployeeData","employee","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","id","_hoisted_8","name","_hoisted_9","position","_hoisted_10","formatDate","hireDate","_hoisted_11","salaryMonth","_hoisted_12","onClick","generateRecord","disabled","isGenerating","_hoisted_13","viewRecordHistory","_hoisted_14","_Fragment","_createCommentVNode","_hoisted_15","errorMessage","showRecordModal","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_createTextVNode","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_renderList","positionHistory","history","startDate","endDate","_hoisted_24","modalFilterPosition","value","uniqueModalPositions","pos","_hoisted_25","_hoisted_26","_hoisted_27","filteredRecordHistory","record","_normalizeClass","selectedRecord","selectRecord","_hoisted_29","_hoisted_30","_hoisted_31","_withModifiers","generateRecordForHistory","recordGenerationStatus","generating","_hoisted_32","_hoisted_28","length","_hoisted_33","colspan","_hoisted_34","recordDataUrl","_hoisted_35","src","onLoad","onIframeLoad","onError","onIframeError","_hoisted_36","downloadRecord","iframeError","_hoisted_37","_hoisted_38","statusMessage","includes"],"sources":["C:\\Users\\ASUS\\Desktop\\OJT-PayrollSystem\\OJT-Payroll-System\\frontend\\src\\views\\admind\\EmployeeRecords.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen p-1\">\r\n    <div class=\"max-w-8xl mx-auto\">\r\n      <div class=\"bg-white p-6 rounded-xl shadow-md\">\r\n        <div class=\"flex justify-between items-center mb-6\">\r\n          <h2 class=\"text-2xl font-semibold text-gray-900\">My Employee Records</h2>\r\n          <input\r\n            v-model=\"selectedMonth\"\r\n            type=\"month\"\r\n            class=\"border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\r\n            @change=\"fetchEmployeeData\"\r\n          />\r\n        </div>\r\n\r\n        <table v-if=\"employee\" class=\"min-w-full border border-gray-300\">\r\n          <thead class=\"bg-gray-200\">\r\n            <tr>\r\n              <th class=\"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">ID</th>\r\n              <th class=\"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Name</th>\r\n              <th class=\"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Position</th>\r\n              <th class=\"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Hire Date</th>\r\n              <th class=\"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Period</th>\r\n              <th class=\"border px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr class=\"hover:bg-gray-50\">\r\n              <td class=\"border px-4 py-2 text-sm text-gray-900\">{{ employee.id }}</td>\r\n              <td class=\"border px-4 py-2 text-sm text-gray-900\">{{ employee.name }}</td>\r\n              <td class=\"border px-4 py-2 text-sm text-gray-900\">{{ employee.position }}</td>\r\n              <td class=\"border px-4 py-2 text-sm text-gray-900\">{{ formatDate(employee.hireDate) }}</td>\r\n              <td class=\"border px-4 py-2 text-sm text-gray-900\">{{ employee.salaryMonth }}</td>\r\n              <td class=\"border px-4 py-2 text-sm\">\r\n                <button \r\n                  @click=\"generateRecord\" \r\n                  class=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-700 transition-all duration-200 mr-2\"\r\n                  :disabled=\"isGenerating\"\r\n                >\r\n                  {{ isGenerating ? 'Generating...' : 'Generate Record' }}\r\n                </button>\r\n                <button \r\n                  @click=\"viewRecordHistory\" \r\n                  class=\"bg-yellow-500 text-white px-3 py-1 rounded hover:bg-yellow-700 transition-all duration-200\"\r\n                  :disabled=\"isGenerating\"\r\n                >\r\n                  View History\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <!-- Loading/Error State -->\r\n        <div v-else class=\"text-center py-8 text-gray-500\">\r\n          {{ errorMessage || 'Loading employee data...' }}\r\n        </div>\r\n\r\n        <!-- Employee Record History Modal -->\r\n        <div\r\n          v-if=\"showRecordModal\"\r\n          class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\r\n        >\r\n          <div class=\"bg-white rounded-xl shadow-xl w-full max-w-5xl h-[80vh] flex flex-col\">\r\n            <div class=\"flex items-center justify-between p-4 border-b\">\r\n              <h2 class=\"text-base font-medium text-gray-800 flex items-center gap-1\">\r\n                <span class=\"material-icons text-sm\">history</span>\r\n                Record History - {{ employee?.name }}\r\n              </h2>\r\n              <button\r\n                @click=\"showRecordModal = false\"\r\n                class=\"p-1 hover:bg-gray-100 rounded-full\"\r\n              >\r\n                <span class=\"material-icons text-sm\">close</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"flex flex-1 overflow-hidden\">\r\n              <div class=\"w-1/2 p-4 overflow-y-auto border-r\">\r\n                <div class=\"mb-4\">\r\n                  <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Position History</h3>\r\n                  <ul class=\"text-sm text-gray-600\">\r\n                    <li v-for=\"history in employee.positionHistory\" :key=\"history.startDate\" class=\"mb-1\">\r\n                      {{ history.position }} ({{ formatDate(history.startDate) }} - {{ history.endDate ? formatDate(history.endDate) : 'Present' }})\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"mb-4\">\r\n                  <label class=\"text-sm font-medium text-gray-700\">Filter by Position:</label>\r\n                  <select\r\n                    v-model=\"modalFilterPosition\"\r\n                    class=\"w-full py-2 px-3 text-sm rounded-md border border-gray-200 focus:ring-2 focus:ring-blue-500 focus:border-transparent mt-1\"\r\n                  >\r\n                    <option value=\"\">All Positions</option>\r\n                    <option v-for=\"pos in uniqueModalPositions\" :key=\"pos\" :value=\"pos\">{{ pos }}</option>\r\n                  </select>\r\n                </div>\r\n                <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Record Periods</h3>\r\n                <table class=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead class=\"bg-gray-200 sticky top-0\">\r\n                    <tr>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Period</th>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Position</th>\r\n                      <th class=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody class=\"divide-y divide-gray-200\">\r\n                    <tr\r\n                      v-for=\"record in filteredRecordHistory\"\r\n                      :key=\"record.salaryMonth\"\r\n                      class=\"hover:bg-gray-50 cursor-pointer\"\r\n                      :class=\"{ 'bg-blue-100': selectedRecord?.salaryMonth === record.salaryMonth }\"\r\n                      @click=\"selectRecord(record)\"\r\n                    >\r\n                      <td class=\"px-4 py-2 text-sm text-gray-900\">{{ record.salaryMonth }}</td>\r\n                      <td class=\"px-4 py-2 text-sm text-gray-500\">{{ record.position }}</td>\r\n                      <td class=\"px-4 py-2\">\r\n                        <button\r\n                          @click.stop=\"generateRecordForHistory(record)\"\r\n                          class=\"inline-flex items-center gap-1 px-3 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-700\"\r\n                          :disabled=\"recordGenerationStatus[record.salaryMonth]?.generating\"\r\n                        >\r\n                          <span class=\"material-icons text-sm\">description</span>\r\n                          {{ recordGenerationStatus[record.salaryMonth]?.generating ? 'Generating...' : 'Generate' }}\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    <tr v-if=\"filteredRecordHistory.length === 0\">\r\n                      <td colspan=\"3\" class=\"px-4 py-4 text-center text-sm text-gray-500\">No records available for this position.</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div class=\"w-1/2 p-4 overflow-y-auto\">\r\n                <h3 class=\"text-sm font-medium text-gray-700 mb-2\">Record Preview</h3>\r\n                <div v-if=\"selectedRecord && selectedRecord.recordDataUrl\" class=\"flex flex-col h-full\">\r\n                  <iframe\r\n                    :src=\"selectedRecord.recordDataUrl\"\r\n                    class=\"w-full h-[60vh] rounded border mb-4\"\r\n                    @load=\"onIframeLoad\"\r\n                    @error=\"onIframeError\"\r\n                  ></iframe>\r\n                  <button\r\n                    @click=\"downloadRecord\"\r\n                    class=\"flex items-center justify-center gap-1 bg-blue-500 hover:bg-blue-700 text-white text-sm py-2 px-4 rounded-md\"\r\n                  >\r\n                    <span class=\"material-icons text-sm\">download</span>\r\n                    Download PDF\r\n                  </button>\r\n                  <div\r\n                    v-if=\"iframeError\"\r\n                    class=\"mt-3 p-3 bg-red-50 text-red-700 rounded text-sm flex items-center gap-1\"\r\n                  >\r\n                    <span class=\"material-icons text-sm\">error</span>\r\n                    Error loading record. Please try again.\r\n                  </div>\r\n                </div>\r\n                <div v-else class=\"text-sm text-gray-500 text-center mt-4\">\r\n                  Select a record from the list to preview.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Status Message -->\r\n        <div \r\n          v-if=\"statusMessage\" \r\n          :class=\"statusMessage.includes('successfully') ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'\"\r\n          class=\"mt-4 p-3 rounded-lg text-center\"\r\n        >\r\n          {{ statusMessage }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport moment from 'moment';\r\n\r\njsPDF.prototype.autoTable = autoTable.default;\r\n\r\nexport default {\r\n  name: 'EmployeeRecords',\r\n  data() {\r\n    return {\r\n      employee: null,\r\n      selectedMonth: new Date().toISOString().slice(0, 7),\r\n      isGenerating: false,\r\n      statusMessage: '',\r\n      errorMessage: '',\r\n      showRecordModal: false,\r\n      recordDataUrl: '',\r\n      iframeError: false,\r\n      records: {}, // Store record URLs locally\r\n      recordHistory: [],\r\n      selectedRecord: null,\r\n      recordGenerationStatus: {},\r\n      modalFilterPosition: ''\r\n    };\r\n  },\r\n  computed: {\r\n    sortedRecordHistory() {\r\n      return [...this.recordHistory].sort((a, b) => new Date(a.salaryMonth) - new Date(b.salaryMonth));\r\n    },\r\n    filteredRecordHistory() {\r\n      return this.sortedRecordHistory.filter(record => \r\n        !this.modalFilterPosition || record.position === this.modalFilterPosition\r\n      );\r\n    },\r\n    uniqueModalPositions() {\r\n      return [...new Set(this.recordHistory.map(r => r.position))];\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchEmployeeData();\r\n  },\r\n  methods: {\r\n    async fetchEmployeeData() {\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) {\r\n          this.errorMessage = 'User not logged in. Redirecting to login...';\r\n          setTimeout(() => {\r\n            this.$router.push('/login');\r\n          }, 2000);\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(`http://localhost:7777/api/employees/${userId}/salary`, {\r\n          params: { month: this.selectedMonth }\r\n        });\r\n        if (!response.data) {\r\n          throw new Error('No employee data returned from server');\r\n        }\r\n        this.employee = {\r\n          ...response.data,\r\n          positionHistory: response.data.positionHistory || [\r\n            { position: response.data.position || 'N/A', startDate: response.data.hireDate || new Date(), endDate: null }\r\n          ],\r\n          name: `${response.data.firstName || ''} ${response.data.lastName || ''}`.trim()\r\n        };\r\n        this.recordDataUrl = this.records[`${this.employee.id}_${this.employee.salaryMonth}`] || '';\r\n      } catch (error) {\r\n        console.error('Error fetching employee data:', error);\r\n        this.errorMessage = 'Failed to load employee records. Please check your connection or try again later.';\r\n        this.employee = null;\r\n      }\r\n    },\r\n    async generateRecord() {\r\n      if (!this.employee) {\r\n        this.statusMessage = 'No employee data available to generate record.';\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n        return;\r\n      }\r\n\r\n      this.isGenerating = true;\r\n      this.statusMessage = '';\r\n      try {\r\n        const recordData = this.createRecordData(this.employee);\r\n        const pdfBlob = await this.generatePdf(recordData);\r\n        const url = URL.createObjectURL(pdfBlob);\r\n        this.records[`${this.employee.id}_${this.employee.salaryMonth}`] = url;\r\n        this.recordDataUrl = url;\r\n\r\n        // Save to backend\r\n        const pdfBase64 = await this.blobToBase64(pdfBlob);\r\n        await this.saveEmployeeRecord({\r\n          employeeId: this.employee.id,\r\n          empNo: this.employee.empNo,\r\n          recordData: pdfBase64,\r\n          salaryMonth: this.employee.salaryMonth,\r\n          position: this.employee.position,\r\n          salary: this.employee.salary\r\n        });\r\n\r\n        this.showSuccessMessage('Record generated and saved successfully!');\r\n        await this.viewRecordHistory(); // Refresh history after generation\r\n      } catch (error) {\r\n        console.error('Error generating record:', error);\r\n        this.statusMessage = 'Failed to generate record. Please try again.';\r\n      } finally {\r\n        this.isGenerating = false;\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n      }\r\n    },\r\n    async viewRecordHistory() {\r\n      if (!this.employee) {\r\n        this.statusMessage = 'No employee data available to view history.';\r\n        setTimeout(() => this.statusMessage = '', 3000);\r\n        return;\r\n      }\r\n\r\n      this.isGenerating = true;\r\n      try {\r\n        // Fetch historical records from the backend\r\n        const response = await axios.get(`http://localhost:7777/api/employee-records/${this.employee.id}`);\r\n        const serverRecords = response.data;\r\n\r\n        const today = moment();\r\n        const hireDate = moment(this.employee.hireDate);\r\n\r\n        if (!hireDate.isValid()) {\r\n          console.error('Invalid hireDate:', this.employee.hireDate);\r\n          this.showErrorMessage('Invalid hire date for employee');\r\n          this.isGenerating = false;\r\n          return;\r\n        }\r\n\r\n        const recordHistory = [];\r\n        let currentMonth = hireDate.clone().startOf('month');\r\n\r\n        while (currentMonth.isSameOrBefore(today, 'month')) {\r\n          const salaryMonth = currentMonth.format('YYYY-MM');\r\n          const positionAtTime = this.employee.positionHistory.find(h => \r\n            moment(h.startDate).isSameOrBefore(salaryMonth, 'month') && \r\n            (!h.endDate || moment(h.endDate).isSameOrAfter(salaryMonth, 'month'))\r\n          )?.position || this.employee.position;\r\n\r\n          const serverRecord = serverRecords.find(r => r.salaryMonth === salaryMonth);\r\n          const localUrl = this.records[`${this.employee.id}_${salaryMonth}`] || (serverRecord ? `data:application/pdf;base64,${serverRecord.recordData.split(',')[1]}` : null);\r\n\r\n          recordHistory.push({\r\n            salaryMonth,\r\n            position: positionAtTime,\r\n            recordDataUrl: localUrl || null,\r\n            employee: { ...this.employee, salaryMonth }\r\n          });\r\n\r\n          currentMonth.add(1, 'month');\r\n        }\r\n\r\n        this.recordHistory = recordHistory;\r\n        this.selectedRecord = this.filteredRecordHistory.find(r => r.recordDataUrl) || null;\r\n        this.modalFilterPosition = '';\r\n        this.showRecordModal = true;\r\n      } catch (error) {\r\n        console.error('Error fetching record history:', error);\r\n        this.showErrorMessage('Failed to load record history. Please try again.');\r\n      } finally {\r\n        this.isGenerating = false;\r\n      }\r\n    },\r\n    async generateRecordForHistory(record) {\r\n      if (!record || !record.employee) {\r\n        console.error('No record or employee data available:', record);\r\n        this.showErrorMessage('Please select a valid record.');\r\n        return;\r\n      }\r\n\r\n      const key = record.salaryMonth;\r\n      this.recordGenerationStatus[key] = { generating: true };\r\n      try {\r\n        const recordData = this.createRecordData(record.employee);\r\n        const pdfBlob = await this.generatePdf(recordData);\r\n        const pdfBase64 = await this.blobToBase64(pdfBlob);\r\n        const url = URL.createObjectURL(pdfBlob);\r\n        this.records[`${record.employee.id}_${record.salaryMonth}`] = url;\r\n        record.recordDataUrl = url;\r\n        this.selectedRecord = record;\r\n\r\n        // Save to backend\r\n        await this.saveEmployeeRecord({\r\n          employeeId: record.employee.id,\r\n          empNo: record.employee.empNo,\r\n          recordData: pdfBase64,\r\n          salaryMonth: record.salaryMonth,\r\n          position: record.position,\r\n          salary: record.employee.salary || this.employee.salary\r\n        });\r\n\r\n        this.showSuccessMessage(`Record generated and saved for ${record.employee.name} - ${record.salaryMonth}!`);\r\n      } catch (error) {\r\n        console.error('Error generating record:', error);\r\n        console.error('Server response:', error.response?.data);\r\n        this.showErrorMessage(error.response?.data?.error || 'Failed to generate record. Please try again.');\r\n      } finally {\r\n        this.recordGenerationStatus[key] = { generating: false };\r\n      }\r\n    },\r\n    async saveEmployeeRecord(payload) {\r\n      try {\r\n        const response = await axios.post('http://localhost:7777/api/employee-records/generate', payload);\r\n        console.log('Employee record saved:', response.data);\r\n      } catch (error) {\r\n        console.error('Error saving employee record:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    async blobToBase64(blob) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    },\r\n    selectRecord(record) {\r\n      this.selectedRecord = record.recordDataUrl ? record : null;\r\n      this.iframeError = false;\r\n    },\r\n    async downloadRecord() {\r\n      if (!this.selectedRecord?.recordDataUrl) return;\r\n      const response = await fetch(this.selectedRecord.recordDataUrl);\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `Record_${this.employee.name}_${this.selectedRecord.salaryMonth}.pdf`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    },\r\n    createRecordData(employee) {\r\n      const recordDate = moment(employee.salaryMonth, 'YYYY-MM').format('MM/DD/YYYY');\r\n      return {\r\n        recordDate,\r\n        id: employee.id,\r\n        name: employee.name,\r\n        empNo: employee.empNo || 'N/A',\r\n        lastName: employee.lastName || 'N/A',\r\n        middleName: employee.middleName || 'N/A',\r\n        firstName: employee.firstName || 'N/A',\r\n        birthDate: employee.birthDate ? moment(employee.birthDate).format('MM/DD/YYYY') : 'N/A',\r\n        hireDate: employee.hireDate ? moment(employee.hireDate).format('MM/DD/YYYY') : 'N/A',\r\n        civilStatus: employee.civilStatus || 'SINGLE',\r\n        dependents: employee.dependents || 0,\r\n        sss: employee.sss || 'N/A',\r\n        tin: employee.tin || 'N/A',\r\n        philhealth: employee.philhealth || 'N/A',\r\n        hdmf: employee.hdmf || 'N/A',\r\n        position: employee.position || 'N/A',\r\n        salaryMonth: employee.salaryMonth\r\n      };\r\n    },\r\n    async generatePdf(recordData) {\r\n      const doc = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: 'a4'\r\n      });\r\n      const lineHeight = 8;\r\n      const leftMargin = 14;\r\n\r\n      function addFormattedText(doc, text, x, y, options = {}) {\r\n        doc.setFontSize(options.fontSize || 12);\r\n        doc.setFont(undefined, options.fontStyle || 'normal');\r\n        doc.setTextColor(options.textColor ? options.textColor[0] : 0, options.textColor ? options.textColor[1] : 0, options.textColor ? options.textColor[2] : 0);\r\n        doc.text(text, x, y, { align: options.align || 'left' });\r\n      }\r\n\r\n      addFormattedText(doc, 'RIGHTJOB Solutions', leftMargin, 15, { fontSize: 16, fontStyle: 'bold', textColor: [0, 128, 0] });\r\n      addFormattedText(doc, 'EMPLOYEE RECORD', doc.internal.pageSize.getWidth() / 2, 15, { fontSize: 18, align: 'center' });\r\n      addFormattedText(doc, 'Record Date', 140, 15, { fontSize: 12 });\r\n      addFormattedText(doc, recordData.recordDate, 170, 15, { fontSize: 12 });\r\n\r\n      doc.line(leftMargin, 20, doc.internal.pageSize.getWidth() - leftMargin, 20);\r\n\r\n      let y = 30;\r\n      addFormattedText(doc, 'Personal Information', leftMargin, 25, { fontSize: 14, fontStyle: 'bold' });\r\n\r\n      addFormattedText(doc, 'Emp No.', leftMargin, y); addFormattedText(doc, recordData.empNo, leftMargin + 40, y);\r\n      y += lineHeight; addFormattedText(doc, 'Last Name', leftMargin, y); addFormattedText(doc, recordData.lastName, leftMargin + 40, y);\r\n      y += lineHeight; addFormattedText(doc, 'Middle Name', leftMargin, y); addFormattedText(doc, recordData.middleName, leftMargin + 40, y);\r\n      y += lineHeight; addFormattedText(doc, 'First Name', leftMargin, y); addFormattedText(doc, recordData.firstName, leftMargin + 40, y);\r\n      y += lineHeight; addFormattedText(doc, 'Birth Date', leftMargin, y); addFormattedText(doc, recordData.birthDate, leftMargin + 40, y);\r\n      y += lineHeight; addFormattedText(doc, 'Hire Date', leftMargin, y); addFormattedText(doc, recordData.hireDate, leftMargin + 40, y);\r\n      y += lineHeight; addFormattedText(doc, 'Position', leftMargin, y); addFormattedText(doc, recordData.position, leftMargin + 40, y);\r\n\r\n      y = 30;\r\n      addFormattedText(doc, 'Civil Status', 120, y); addFormattedText(doc, recordData.civilStatus, 150, y);\r\n      y += lineHeight; addFormattedText(doc, 'Dependents', 120, y); addFormattedText(doc, recordData.dependents.toString(), 150, y);\r\n      y += lineHeight * 2; addFormattedText(doc, 'SSS', 120, y); addFormattedText(doc, recordData.sss, 150, y);\r\n      y += lineHeight; addFormattedText(doc, 'TIN', 120, y); addFormattedText(doc, recordData.tin, 150, y);\r\n      y += lineHeight; addFormattedText(doc, 'Philhealth', 120, y); addFormattedText(doc, recordData.philhealth, 150, y);\r\n      y += lineHeight; addFormattedText(doc, 'HDMF', 120, y); addFormattedText(doc, recordData.hdmf, 150, y);\r\n\r\n      addFormattedText(doc, 'This is a computer-generated employee record, no signature required.', doc.internal.pageSize.getWidth() / 2, 270, { fontSize: 10, align: 'center' });\r\n\r\n      return doc.output('blob');\r\n    },\r\n    onIframeLoad() {\r\n      console.log('iFrame loaded successfully');\r\n      this.iframeError = false;\r\n    },\r\n    onIframeError() {\r\n      console.error('iFrame failed to load');\r\n      this.iframeError = true;\r\n    },\r\n    showSuccessMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    },\r\n    showErrorMessage(message) {\r\n      this.statusMessage = message;\r\n      setTimeout(() => this.statusMessage = '', 3000);\r\n    },\r\n    formatDate(date) {\r\n      return moment(date).format('MMM DD, YYYY');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined');\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.transition-all {\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.hover\\:bg-gray-50:hover {\r\n  background-color: #f9fafb;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}